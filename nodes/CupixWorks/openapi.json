{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "adam.lee@cupix.com",
      "name" : "Adam Lee"
    },
    "title" : "Cupix Tesla SDK",
    "version" : "1.13.3"
  },
  "servers" : [ {
    "url" : "https://api.cupix.works/api/v1"
  }, {
    "url" : "https://api.{environment}.cupix.works/api/v1",
    "variables" : {
      "environment" : {
        "default" : "stage",
        "enum" : [ "stage", "dev" ]
      }
    }
  }, {
    "url" : "https://{host}.cupix.com/api/v1",
    "variables" : {
      "host" : {
        "default" : "tesla-api",
        "enum" : [ "tesla-api", "tesla-dev1.apne2" ]
      }
    }
  }, {
    "url" : "http://localhost:3000/api/v1"
  } ],
  "paths" : {
    "/accounts/request_my_teams" : {
      "get" : {
        "description" : "Email로 가입되어 있는 팀 목록을 email로 전달받는다.",
        "operationId" : "account_request_my_teams",
        "parameters" : [ {
          "description" : "Email",
          "explode" : true,
          "in" : "query",
          "name" : "email",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailResponse"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          }
        },
        "summary" : "Get joined team list by email",
        "tags" : [ "Account" ]
      }
    },
    "/accounts/teams" : {
      "get" : {
        "description" : "현재 로그인된 사용자의 email로 가입되어있는 팀 목록을 조회한다.",
        "operationId" : "account_my_teams",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamListResponse"
                }
              }
            },
            "description" : "Team list"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get joined team list",
        "tags" : [ "Account" ]
      }
    },
    "/activities" : {
      "get" : {
        "operationId" : "activity_get_activities",
        "parameters" : [ {
          "description" : "UTC+0 based. Must be used together with `to_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "from_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `from_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "to_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Activity String ID list",
          "explode" : false,
          "in" : "query",
          "name" : "activity_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityListResponse"
                }
              }
            },
            "description" : "Activity list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "activity list",
        "tags" : [ "Activity" ]
      },
      "post" : {
        "operationId" : "activity_create_activity",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateActivityRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityResponse"
                }
              }
            },
            "description" : "Activity"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Activity",
        "tags" : [ "Activity" ]
      },
      "put" : {
        "operationId" : "activity_bulk_activity",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkActivityRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Activity",
        "tags" : [ "Activity" ]
      }
    },
    "/activities/bulk" : {
      "post" : {
        "operationId" : "activity_bulk_create",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateActivityBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create Activity",
        "tags" : [ "Activity" ]
      },
      "put" : {
        "operationId" : "activity_bulk_update",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateActivityBulkRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Activity bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete Activity",
        "tags" : [ "Activity" ]
      }
    },
    "/activities/mock" : {
      "get" : {
        "operationId" : "activity_mock_activities",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityListResponse"
                }
              }
            },
            "description" : "Activity list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "activity mock list",
        "tags" : [ "Activity" ]
      }
    },
    "/activities/{id}" : {
      "delete" : {
        "operationId" : "activity_delete_activity",
        "parameters" : [ {
          "description" : "Activity ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Activity",
        "tags" : [ "Activity" ]
      },
      "get" : {
        "operationId" : "activity_get_activity",
        "parameters" : [ {
          "description" : "Activity ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityResponse"
                }
              }
            },
            "description" : "Activity"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Activity",
        "tags" : [ "Activity" ]
      },
      "put" : {
        "operationId" : "activity_update_activity",
        "parameters" : [ {
          "description" : "Activity ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateActivityRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityResponse"
                }
              }
            },
            "description" : "Activity"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Activity",
        "tags" : [ "Activity" ]
      }
    },
    "/activities/{id}/meta" : {
      "get" : {
        "operationId" : "activity_get_meta",
        "parameters" : [ {
          "description" : "Activity ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Activity Meta",
        "tags" : [ "Activity" ]
      },
      "put" : {
        "operationId" : "activity_update_meta",
        "parameters" : [ {
          "description" : "Activity ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Activity Meta",
        "tags" : [ "Activity" ]
      }
    },
    "/activities/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "activity_get_meta_by_key",
        "parameters" : [ {
          "description" : "Activity ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Activity Meta by key",
        "tags" : [ "Activity" ]
      },
      "put" : {
        "operationId" : "activity_update_meta_by_key",
        "parameters" : [ {
          "description" : "Activity ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Activity Meta",
        "tags" : [ "Activity" ]
      }
    },
    "/aerial_maps" : {
      "get" : {
        "operationId" : "getAerialMaps",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Record ID",
          "explode" : true,
          "in" : "query",
          "name" : "record_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AerialMapListResponse"
                }
              }
            },
            "description" : "Aerial map list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Aerial Map List",
        "tags" : [ "AerialMap" ]
      },
      "post" : {
        "operationId" : "createAerialMap",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAerialMapRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AerialMapResponse"
                }
              }
            },
            "description" : "Aerial map"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Aerial Map",
        "tags" : [ "AerialMap" ]
      }
    },
    "/aerial_maps/{key}" : {
      "get" : {
        "operationId" : "getAerialMap",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Aerial map key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AerialMapResponse"
                }
              }
            },
            "description" : "Aerial map"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Aerial Map",
        "tags" : [ "AerialMap" ]
      },
      "put" : {
        "operationId" : "updateAerialMap",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Aerial map key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAerialMapRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AerialMapResponse"
                }
              }
            },
            "description" : "Aerial map"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Aerial Map",
        "tags" : [ "AerialMap" ]
      }
    },
    "/aerial_maps/{key}/aerial_photos" : {
      "get" : {
        "operationId" : "getAerialPhotos",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Aerial map key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AerialPhotoListResponse"
                }
              }
            },
            "description" : "Aerial photo list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Aerial Photo List",
        "tags" : [ "AerialPhoto" ]
      },
      "post" : {
        "operationId" : "createAerialPhoto",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Aerial map key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAerialPhotoRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AerialPhotoResponse"
                }
              }
            },
            "description" : "Aerial photo"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Aerial Photo",
        "tags" : [ "AerialPhoto" ]
      }
    },
    "/aerial_maps/{key}/aerial_photos/{id}" : {
      "get" : {
        "operationId" : "getAerialPhoto",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Aerial map key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Aerial photo id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AerialPhotoResponse"
                }
              }
            },
            "description" : "Aerial photo"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Aerial Photo",
        "tags" : [ "AerialPhoto" ]
      },
      "put" : {
        "operationId" : "updateAerialPhoto",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Aerial map key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Aerial photo id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAerialPhotoRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AerialPhotoResponse"
                }
              }
            },
            "description" : "Aerial photo"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Aerial Photo",
        "tags" : [ "AerialPhoto" ]
      }
    },
    "/aerial_maps/{key}/aerial_photos/{id}/check_uploading" : {
      "post" : {
        "operationId" : "checkAerialPhotoUpload",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Aerial map key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Aerial photo id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AerialPhotoResponse"
                }
              }
            },
            "description" : "Aerial photo"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Aerial Photo Upload",
        "tags" : [ "AerialPhoto" ]
      }
    },
    "/aerial_maps/{key}/aerial_photos/{id}/trash" : {
      "put" : {
        "operationId" : "trashAerialPhoto",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Aerial map key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Aerial photo id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "AerialPhoto trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash Aerial Photo",
        "tags" : [ "AerialPhoto" ]
      }
    },
    "/aerial_maps/{key}/aerial_photos/{id}/untrash" : {
      "put" : {
        "operationId" : "untrashAerialPhoto",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Aerial map key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Aerial photo id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AerialPhotoResponse"
                }
              }
            },
            "description" : "Aerial photo"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash Aerial Photo",
        "tags" : [ "AerialPhoto" ]
      }
    },
    "/aerial_maps/{key}/aerial_photos/{id}/upload_url" : {
      "post" : {
        "operationId" : "createUploadUrlAerialPhoto",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Aerial map key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Aerial photo id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AerialPhotoResponse"
                }
              }
            },
            "description" : "Aerial photo"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Aerial Photo Upload Url",
        "tags" : [ "AerialPhoto" ]
      }
    },
    "/aerial_maps/{key}/trash" : {
      "put" : {
        "operationId" : "trashAerialMap",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Aerial map key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "AerialMap trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash Aerial Map",
        "tags" : [ "AerialMap" ]
      }
    },
    "/aerial_maps/{key}/untrash" : {
      "put" : {
        "operationId" : "untrashAerialMap",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Aerial map key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AerialMapResponse"
                }
              }
            },
            "description" : "Aerial map"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash Aerial Map",
        "tags" : [ "AerialMap" ]
      }
    },
    "/annotation_layers" : {
      "get" : {
        "operationId" : "annotationlayer_get_annotation_layers",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerListResponse"
                }
              }
            },
            "description" : "AnnotationLayer list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "AnnotationLayer list",
        "tags" : [ "AnnotationLayer" ]
      },
      "post" : {
        "operationId" : "annotationlayer_create_annotation_layer",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAnnotationLayerRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create AnnotationLayer",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/mock" : {
      "get" : {
        "operationId" : "annotationlayer_mock_annotation_layers",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerListResponse"
                }
              }
            },
            "description" : "AnnotationLayer list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "AnnotationLayer mock list",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}" : {
      "delete" : {
        "operationId" : "annotationlayer_delete_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete AnnotationLayer",
        "tags" : [ "AnnotationLayer" ]
      },
      "get" : {
        "operationId" : "annotationlayer_get_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get AnnotationLayer",
        "tags" : [ "AnnotationLayer" ]
      },
      "put" : {
        "operationId" : "annotationlayer_update_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAnnotationLayerRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update AnnotationLayer",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/associate_form_designs" : {
      "put" : {
        "operationId" : "annotation_layer_associate_form_design",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "FormDesign IDs",
          "explode" : false,
          "in" : "query",
          "name" : "form_design_ids",
          "required" : true,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Associate annotation_layer with form design",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/clear_fields" : {
      "put" : {
        "operationId" : "annotationlayer_clear_fields",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "AnnotationLayer fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "description", "allowed_annotation_kind" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/deny" : {
      "put" : {
        "operationId" : "annotationlayer_deny_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Denied"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Deny AnnotationLayer with user or group",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/disassociate_form_designs" : {
      "put" : {
        "operationId" : "annotation_layer_disassociate_form_design",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "FormDesign IDs",
          "explode" : false,
          "in" : "query",
          "name" : "form_design_ids",
          "required" : true,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Disassociate annotation_layer with form design",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/members" : {
      "get" : {
        "operationId" : "annotationlayer_get_members",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Memeber display option",
          "explode" : true,
          "in" : "query",
          "name" : "display_option",
          "required" : true,
          "schema" : {
            "enum" : [ "directly", "directly-flatten", "inherited", "inherited-flatten", "all" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "User ID list",
          "explode" : false,
          "in" : "query",
          "name" : "user_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "group_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "minimum permission",
          "explode" : true,
          "in" : "query",
          "name" : "min_permission",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get annotation_layer members",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/meta" : {
      "get" : {
        "operationId" : "annotationlayer_get_meta",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get AnnotationLayer Meta",
        "tags" : [ "AnnotationLayer" ]
      },
      "put" : {
        "operationId" : "annotationlayer_update_meta",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update AnnotationLayer Meta",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "annotationlayer_get_meta_by_key",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get AnnotationLayer Meta by key",
        "tags" : [ "AnnotationLayer" ]
      },
      "put" : {
        "operationId" : "annotationlayer_update_meta_by_key",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update AnnotationLayer Meta by key",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/position" : {
      "put" : {
        "operationId" : "annotationlayer_update_position",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePositionRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Annotation Layer Position",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/publish" : {
      "delete" : {
        "operationId" : "annotationlayer_unpublish_annotationlayer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish AnnotationLayer",
        "tags" : [ "AnnotationLayer" ]
      },
      "put" : {
        "operationId" : "annotationlayer_publish_annotationlayer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish AnnotationLayer",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/purge" : {
      "delete" : {
        "operationId" : "annotationlayer_purge_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge annotation_layer",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/share" : {
      "put" : {
        "operationId" : "annotationlayer_share_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Share AnnotationLayer with user or group",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/trash" : {
      "put" : {
        "operationId" : "annotationlayer_trash_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash annotation_layer",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/unshare" : {
      "put" : {
        "operationId" : "annotationlayer_unshare_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Unshared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unshare AnnotationLayer with user or group",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotation_layers/{id}/untrash" : {
      "put" : {
        "description" : "Untrash trashed annotation_layer and return it.",
        "operationId" : "annotationlayer_untrash_annotation_layer",
        "parameters" : [ {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash trashed annotation_layer",
        "tags" : [ "AnnotationLayer" ]
      }
    },
    "/annotations" : {
      "get" : {
        "description" : "Annotation 목록을 조회한다. `capture_id` 또는 `annotation_layer_ids`를 필수로 입력해야한다.",
        "operationId" : "annotation_get_annotations",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Capture ID",
          "explode" : true,
          "in" : "query",
          "name" : "capture_id",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "AnnotationLayer ID list",
          "explode" : false,
          "in" : "query",
          "name" : "annotation_layer_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Aread ID list",
          "explode" : false,
          "in" : "query",
          "name" : "area_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Pano ID list",
          "explode" : false,
          "in" : "query",
          "name" : "pano_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationListResponse"
                }
              }
            },
            "description" : "Annotation list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Annotation list",
        "tags" : [ "Annotation" ]
      },
      "post" : {
        "operationId" : "annotation_create_annotation",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAnnotationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationResponse"
                }
              }
            },
            "description" : "Annotation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Annotation",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/mock" : {
      "get" : {
        "operationId" : "annotation_mock_annotations",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationListResponse"
                }
              }
            },
            "description" : "Annotation list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Annotation mock list",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/trash" : {
      "put" : {
        "operationId" : "annotation_bulk_trash_annotations",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkTrashAnnotationsRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk trash Annotation",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{annotation_id}/attachments" : {
      "get" : {
        "operationId" : "annotation_get_attachments",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment State",
          "explode" : true,
          "in" : "query",
          "name" : "state",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentListResponse"
                }
              }
            },
            "description" : "Attachment list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Annotation Attachments",
        "tags" : [ "Annotation" ]
      },
      "post" : {
        "operationId" : "annotation_create_attachment",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAttachmentRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Annotation Attachment",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{annotation_id}/attachments/{key}" : {
      "delete" : {
        "operationId" : "annotation_delete_attachment",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Annotation Attachment",
        "tags" : [ "Annotation" ]
      },
      "get" : {
        "operationId" : "annotation_get_attachment",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Annotation Attachment",
        "tags" : [ "Annotation" ]
      },
      "put" : {
        "operationId" : "annotation_update_attachment",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAttachmentRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Annotation Attachment",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{annotation_id}/attachments/{key}/check_uploading" : {
      "put" : {
        "operationId" : "annotation_check_attachment_uploading",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Annotation Attachment uploading",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{annotation_id}/attachments/{key}/clear_fields" : {
      "put" : {
        "operationId" : "annotation_clear_attachment_fields",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{annotation_id}/attachments/{key}/download" : {
      "get" : {
        "description" : "Redirect to annotation attachment download link",
        "operationId" : "annotation_download_attachment",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to attachment download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Annotation Attachment",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{annotation_id}/attachments/{key}/upload_url" : {
      "post" : {
        "operationId" : "annotation_create_attachment_upload_url",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Annotation Attachment upload url",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{annotation_id}/comments" : {
      "get" : {
        "operationId" : "annotation_get_comments",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommentListResponse"
                }
              }
            },
            "description" : "Comment list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get comment list",
        "tags" : [ "Annotation" ]
      },
      "post" : {
        "operationId" : "annotation_create_comment",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCommentRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommentResponse"
                }
              }
            },
            "description" : "Comment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create comment",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{annotation_id}/comments/{id}" : {
      "delete" : {
        "operationId" : "annotation_delete_comment",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Comment ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Annotation Comment",
        "tags" : [ "Annotation" ]
      },
      "get" : {
        "operationId" : "annotation_get_comment",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Comment ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommentResponse"
                }
              }
            },
            "description" : "Comment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get comment",
        "tags" : [ "Annotation" ]
      },
      "put" : {
        "operationId" : "annotation_update_comment",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Comment ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCommentRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommentResponse"
                }
              }
            },
            "description" : "Comment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update comment",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{annotation_id}/fields/{id}" : {
      "get" : {
        "operationId" : "annotation_get_annotation_field",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Field ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FieldResponse"
                }
              }
            },
            "description" : "Field"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Field",
        "tags" : [ "Annotation" ]
      },
      "put" : {
        "operationId" : "annotation_update_annotation_field",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Field ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateFieldRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FieldResponse"
                }
              }
            },
            "description" : "Field"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Field",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{annotation_id}/fields/{id}/clear_fields" : {
      "put" : {
        "operationId" : "annotation_clear_annotation_field_fields",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Field ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Field fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "value" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear annotation field fields",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}" : {
      "delete" : {
        "operationId" : "annotation_delete_annotation",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Annotation",
        "tags" : [ "Annotation" ]
      },
      "get" : {
        "operationId" : "annotation_get_annotation",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationResponse"
                }
              }
            },
            "description" : "Annotation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Annotation",
        "tags" : [ "Annotation" ]
      },
      "put" : {
        "operationId" : "annotation_update_annotation",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAnnotationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationResponse"
                }
              }
            },
            "description" : "Annotation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Annotation",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/assets" : {
      "get" : {
        "operationId" : "annotation_get_annotation_associated_assets",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetListResponse"
                }
              }
            },
            "description" : "Asset list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Annotation associated Asset list",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/clear_fields" : {
      "put" : {
        "operationId" : "annotation_clear_fields",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Annoation fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail", "parent_id", "value", "annotatable" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/members" : {
      "get" : {
        "operationId" : "annotation_get_members",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Memeber display option",
          "explode" : true,
          "in" : "query",
          "name" : "display_option",
          "required" : true,
          "schema" : {
            "enum" : [ "directly", "directly-flatten", "inherited", "inherited-flatten", "all" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "User ID list",
          "explode" : false,
          "in" : "query",
          "name" : "user_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "group_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "minimum permission",
          "explode" : true,
          "in" : "query",
          "name" : "min_permission",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get annotation members",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/meta" : {
      "get" : {
        "operationId" : "annotation_get_meta",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Annotation Meta",
        "tags" : [ "Annotation" ]
      },
      "put" : {
        "operationId" : "annotation_update_meta",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Annotation Meta",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "annotation_get_meta_by_key",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Annotation Meta by key",
        "tags" : [ "Annotation" ]
      },
      "put" : {
        "operationId" : "annotation_update_meta_by_key",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Annotation Meta by key",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/position" : {
      "put" : {
        "operationId" : "annotation_update_position",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePositionRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationResponse"
                }
              }
            },
            "description" : "Annotation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Annotation Position",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/resources" : {
      "get" : {
        "operationId" : "annotation_get_resources",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceListResponse"
                }
              }
            },
            "description" : "Resource list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Resource list",
        "tags" : [ "Annotation" ]
      },
      "post" : {
        "operationId" : "annotation_create_resource",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateResourceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Annotation Resource",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/resources/{kind}" : {
      "delete" : {
        "operationId" : "annotation_delete_resource_by_kind",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Annotation Resource",
        "tags" : [ "Annotation" ]
      },
      "get" : {
        "operationId" : "annotation_get_resource_by_kind",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Annotation Resource",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/resources/{kind}/check_uploading" : {
      "put" : {
        "operationId" : "annotation_check_resource_uploading_by_kind",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Annotation Resource uploading",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/resources/{kind}/download" : {
      "get" : {
        "description" : "Redirect to annotation resource download link",
        "operationId" : "annotation_download_resource_by_kind",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to resource download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Annotation Resource",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/resources/{kind}/upload_url" : {
      "post" : {
        "operationId" : "annotation_create_resource_upload_url_by_kind",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Annotation Resource upload url",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/resources/{resource_id}" : {
      "get" : {
        "operationId" : "annotation_get_resource_by_resource_id",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource ID",
          "explode" : false,
          "in" : "path",
          "name" : "resource_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Annotation Resource",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/resources/{resource_key}" : {
      "delete" : {
        "operationId" : "annotation_delete_resource_by_resource_key",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource key",
          "explode" : false,
          "in" : "path",
          "name" : "resource_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Annotation Resource",
        "tags" : [ "Annotation" ]
      },
      "get" : {
        "operationId" : "annotation_get_resource_by_resource_key",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource key",
          "explode" : false,
          "in" : "path",
          "name" : "resource_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Annotation Resource",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/resources/{resource_key}/check_uploading" : {
      "put" : {
        "operationId" : "annotation_check_resource_uploading_by_resource_key",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource key",
          "explode" : false,
          "in" : "path",
          "name" : "resource_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Annotation Resource uploading",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/resources/{resource_key}/download" : {
      "get" : {
        "description" : "Redirect to annotation resource download link",
        "operationId" : "annotation_download_resource_by_resource_key",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource key",
          "explode" : false,
          "in" : "path",
          "name" : "resource_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to resource download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Annotation Resource",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/resources/{resource_key}/upload_url" : {
      "post" : {
        "operationId" : "annotation_create_resource_upload_url_by_resource_key",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource key",
          "explode" : false,
          "in" : "path",
          "name" : "resource_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Annotation Resource upload url",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/share" : {
      "put" : {
        "operationId" : "annotation_share_annotation",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Share Annotation with user or group",
        "tags" : [ "Annotation" ]
      }
    },
    "/annotations/{id}/unshare" : {
      "put" : {
        "operationId" : "annotation_unshare_annotation",
        "parameters" : [ {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Unshared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unshare Annotation with user or group",
        "tags" : [ "Annotation" ]
      }
    },
    "/areas" : {
      "get" : {
        "operationId" : "area_get_areas",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AreaListResponse"
                }
              }
            },
            "description" : "Area list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Area list",
        "tags" : [ "Area" ]
      },
      "post" : {
        "operationId" : "area_create_area",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAreaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AreaResponse"
                }
              }
            },
            "description" : "Area"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Area",
        "tags" : [ "Area" ]
      }
    },
    "/areas/{id}" : {
      "delete" : {
        "operationId" : "area_delete_area",
        "parameters" : [ {
          "description" : "Area ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Area",
        "tags" : [ "Area" ]
      },
      "get" : {
        "operationId" : "area_get_area",
        "parameters" : [ {
          "description" : "Area ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AreaResponse"
                }
              }
            },
            "description" : "Area"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Area",
        "tags" : [ "Area" ]
      },
      "put" : {
        "operationId" : "area_update_area",
        "parameters" : [ {
          "description" : "Area ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAreaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AreaResponse"
                }
              }
            },
            "description" : "Area"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Area",
        "tags" : [ "Area" ]
      }
    },
    "/areas/{id}/meta" : {
      "get" : {
        "operationId" : "area_get_meta",
        "parameters" : [ {
          "description" : "Area ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Area Meta",
        "tags" : [ "Area" ]
      },
      "put" : {
        "operationId" : "area_update_meta",
        "parameters" : [ {
          "description" : "Area ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Area Meta",
        "tags" : [ "Area" ]
      }
    },
    "/areas/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "area_get_meta_by_key",
        "parameters" : [ {
          "description" : "Area ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Area Meta by key",
        "tags" : [ "Area" ]
      },
      "put" : {
        "operationId" : "area_update_meta_by_key",
        "parameters" : [ {
          "description" : "Area ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Area Meta by key",
        "tags" : [ "Area" ]
      }
    },
    "/assets" : {
      "get" : {
        "operationId" : "asset_get_assets",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : true,
          "in" : "query",
          "name" : "capture_id",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetListResponse"
                }
              }
            },
            "description" : "Asset list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Asset list",
        "tags" : [ "Asset" ]
      },
      "post" : {
        "operationId" : "asset_create_asset",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAssetRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetResponse"
                }
              }
            },
            "description" : "Asset"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Asset",
        "tags" : [ "Asset" ]
      }
    },
    "/assets/{key}" : {
      "delete" : {
        "operationId" : "asset_delete_asset",
        "parameters" : [ {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Asset",
        "tags" : [ "Asset" ]
      },
      "get" : {
        "operationId" : "asset_get_asset",
        "parameters" : [ {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetResponse"
                }
              }
            },
            "description" : "Asset"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Asset",
        "tags" : [ "Asset" ]
      },
      "put" : {
        "operationId" : "asset_update_asset",
        "parameters" : [ {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAssetRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetResponse"
                }
              }
            },
            "description" : "Asset"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Asset",
        "tags" : [ "Asset" ]
      }
    },
    "/assets/{key}/check_cover_uploading" : {
      "put" : {
        "operationId" : "asset_check_cover_uploading",
        "parameters" : [ {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetResponse"
                }
              }
            },
            "description" : "Asset"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check asset cover uploading",
        "tags" : [ "Asset" ]
      }
    },
    "/assets/{key}/check_uploading" : {
      "put" : {
        "operationId" : "asset_check_uploading",
        "parameters" : [ {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetResponse"
                }
              }
            },
            "description" : "Asset"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check asset uploading",
        "tags" : [ "Asset" ]
      }
    },
    "/assets/{key}/cover_upload_url" : {
      "post" : {
        "operationId" : "asset_create_cover_upload_url",
        "parameters" : [ {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetResponse"
                }
              }
            },
            "description" : "Asset"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create asset cover upload url",
        "tags" : [ "Asset" ]
      }
    },
    "/assets/{key}/download" : {
      "get" : {
        "description" : "Redirect to asset download link",
        "operationId" : "asset_download_asset",
        "parameters" : [ {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to asset download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Asset download",
        "tags" : [ "Asset" ]
      }
    },
    "/assets/{key}/meta" : {
      "get" : {
        "operationId" : "asset_get_meta",
        "parameters" : [ {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Asset Meta",
        "tags" : [ "Asset" ]
      },
      "put" : {
        "operationId" : "asset_update_meta",
        "parameters" : [ {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Asset Meta",
        "tags" : [ "Asset" ]
      }
    },
    "/assets/{key}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "asset_get_meta_by_key",
        "parameters" : [ {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Asset Meta by key",
        "tags" : [ "Asset" ]
      },
      "put" : {
        "operationId" : "asset_update_meta_by_key",
        "parameters" : [ {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Asset Meta",
        "tags" : [ "Asset" ]
      }
    },
    "/assets/{key}/upload_credentials" : {
      "post" : {
        "description" : "Asset 업로드를 위한 Credential을 생성",
        "operationId" : "asset_create_upload_credentials",
        "parameters" : [ {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Asset Upload Credentials",
        "tags" : [ "Asset" ]
      }
    },
    "/assets/{key}/upload_url" : {
      "post" : {
        "operationId" : "asset_create_upload_url",
        "parameters" : [ {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetResponse"
                }
              }
            },
            "description" : "Asset"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Asset upload url",
        "tags" : [ "Asset" ]
      }
    },
    "/authenticate" : {
      "post" : {
        "description" : "사용자 email, password, auth_param, refresh token 등을 이용하여 사용자를 인증한다.",
        "operationId" : "authenticate_authenticate",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AuthenticateRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthenticateResponse"
                }
              }
            },
            "description" : "Authentication"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "summary" : "User Authentication",
        "tags" : [ "Authentication" ]
      }
    },
    "/autocomplete/users" : {
      "get" : {
        "description" : "요청자의 Team에 속한 User에 대해 자동완성 결과 조회. 검색 대상: User의 email, firstname, lastname\n",
        "operationId" : "autocomplete_get_users",
        "parameters" : [ {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "text",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroupAutocompleteResponse"
                }
              }
            },
            "description" : "User and Group list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get autocomplete of Users",
        "tags" : [ "Autocomplete" ]
      }
    },
    "/autocomplete/users_and_groups" : {
      "get" : {
        "description" : "요청자의 Team에 속한 User 및 Group에 대해 자동완성 결과 조회. 검색 대상: User의 email, firstname, lastname 및 Group의 name\n",
        "operationId" : "autocomplete_get_users_and_groups",
        "parameters" : [ {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "text",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroupAutocompleteResponse"
                }
              }
            },
            "description" : "User and Group list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get autocomplete of Users and Groups",
        "tags" : [ "Autocomplete" ]
      }
    },
    "/badges" : {
      "get" : {
        "operationId" : "badge_get_badges",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadgeListResponse"
                }
              }
            },
            "description" : "Badge list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Badge List",
        "tags" : [ "Badge" ]
      },
      "post" : {
        "operationId" : "badge_create_badge",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateBadgeRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadgeResponse"
                }
              }
            },
            "description" : "Badge"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Badge",
        "tags" : [ "Badge" ]
      }
    },
    "/badges/bulk_update" : {
      "put" : {
        "operationId" : "badge_bulk_update",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkUpdateBadgeRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Badges updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update Badge",
        "tags" : [ "Badge" ]
      }
    },
    "/badges/{id}" : {
      "delete" : {
        "operationId" : "badge_delete_badge",
        "parameters" : [ {
          "description" : "Badge id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Badge",
        "tags" : [ "Badge" ]
      },
      "get" : {
        "operationId" : "badge_get_badge",
        "parameters" : [ {
          "description" : "Badge id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadgeResponse"
                }
              }
            },
            "description" : "Badge"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Badge",
        "tags" : [ "Badge" ]
      },
      "put" : {
        "operationId" : "badge_update_badge",
        "parameters" : [ {
          "description" : "Badge id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateBadgeRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadgeResponse"
                }
              }
            },
            "description" : "Badge"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Badge",
        "tags" : [ "badge" ]
      }
    },
    "/billing_accounts" : {
      "get" : {
        "operationId" : "billing_account_get_billing_accounts",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "조건에 맞는 BillingAccount를 필터링 하며, 콤마(,)로 구분된 여러개의 조건을 입력할 수 있다.\n",
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BillingAccountListResponse"
                }
              }
            },
            "description" : "BillingAccount list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get BillingAccount List",
        "tags" : [ "BillingAccount" ]
      },
      "post" : {
        "operationId" : "billing_account_create_billing_account",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateBillingAccountRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BillingAccountResponse"
                }
              }
            },
            "description" : "BillingAccount"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create BillingAccount",
        "tags" : [ "BillingAccount" ]
      }
    },
    "/billing_accounts/mock" : {
      "get" : {
        "operationId" : "billing_account_mock_billing_accounts",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BillingAccountListResponse"
                }
              }
            },
            "description" : "BillingAccount list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get BillingAccount mock List",
        "tags" : [ "BillingAccount" ]
      }
    },
    "/billing_accounts/{id}" : {
      "get" : {
        "operationId" : "billing_account_get_billing_account",
        "parameters" : [ {
          "description" : "BillingAccount ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BillingAccountResponse"
                }
              }
            },
            "description" : "BillingAccount"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get BillingAccount",
        "tags" : [ "BillingAccount" ]
      },
      "put" : {
        "operationId" : "billing_account_update_billing_account",
        "parameters" : [ {
          "description" : "BillingAccount ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateBillingAccountRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BillingAccountResponse"
                }
              }
            },
            "description" : "BillingAccount"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update billing_account",
        "tags" : [ "BillingAccount" ]
      }
    },
    "/billing_accounts/{id}/clear_fields" : {
      "put" : {
        "operationId" : "billing_account_clear_fields",
        "parameters" : [ {
          "description" : "BillingAccount ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "BillingAccount fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "name" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "BillingAccount" ]
      }
    },
    "/billing_accounts/{id}/members" : {
      "get" : {
        "operationId" : "billing_account_get_members",
        "parameters" : [ {
          "description" : "BillingAccount ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Memeber display option",
          "explode" : true,
          "in" : "query",
          "name" : "display_option",
          "required" : true,
          "schema" : {
            "enum" : [ "directly", "directly-flatten", "inherited", "inherited-flatten", "all" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "User ID list",
          "explode" : false,
          "in" : "query",
          "name" : "user_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "group_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "minimum permission",
          "explode" : true,
          "in" : "query",
          "name" : "min_permission",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get billing_account members",
        "tags" : [ "BillingAccount" ]
      }
    },
    "/billing_accounts/{id}/share" : {
      "put" : {
        "operationId" : "billing_account_share_billing_account",
        "parameters" : [ {
          "description" : "BillingAccount ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Share billing_account with user or group",
        "tags" : [ "BillingAccount" ]
      }
    },
    "/billing_accounts/{id}/trash" : {
      "put" : {
        "operationId" : "billing_account_trash_billing_account",
        "parameters" : [ {
          "description" : "BillingAccount ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash billing_account",
        "tags" : [ "BillingAccount" ]
      }
    },
    "/billing_accounts/{id}/unshare" : {
      "put" : {
        "operationId" : "billing_account_unshare_billing_account",
        "parameters" : [ {
          "description" : "BillingAccount ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Unshared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unshare billing_account with user or group",
        "tags" : [ "BillingAccount" ]
      }
    },
    "/bim_revisions" : {
      "get" : {
        "operationId" : "bim_revision_get_bim_revisions",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID",
          "explode" : true,
          "in" : "query",
          "name" : "bim_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/BimRevisionList"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bim Revision list",
        "tags" : [ "BimRevision" ]
      },
      "post" : {
        "operationId" : "bim_revision_create_bim_revision",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateBimRevisionRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimRevisionResponse"
                }
              }
            },
            "description" : "Bim Revision"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Bim Revision",
        "tags" : [ "BimRevision" ]
      }
    },
    "/bim_revisions/mock" : {
      "get" : {
        "operationId" : "bim_revision_mock_bim_revisions",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimRevisionListResponse"
                }
              }
            },
            "description" : "Bim Revision list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bim Revision mock list",
        "tags" : [ "BimRevision" ]
      }
    },
    "/bim_revisions/{id}" : {
      "delete" : {
        "operationId" : "bim_revision_delete_bim_revision",
        "parameters" : [ {
          "description" : "Bim Revision ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Bim Revision",
        "tags" : [ "BimRevision" ]
      },
      "get" : {
        "operationId" : "bim_revision_get_bim_revision",
        "parameters" : [ {
          "description" : "Bim Revision ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimRevisionResponse"
                }
              }
            },
            "description" : "Bim Revision"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bim Revision",
        "tags" : [ "BimRevision" ]
      },
      "put" : {
        "operationId" : "bim_revision_update_bim_revision",
        "parameters" : [ {
          "description" : "Bim Revision ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateBimRevisionRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimRevisionResponse"
                }
              }
            },
            "description" : "Bim Revision"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Bim Revision",
        "tags" : [ "BimRevision" ]
      }
    },
    "/bim_revisions/{id}/apply" : {
      "put" : {
        "operationId" : "bim_revision_apply",
        "parameters" : [ {
          "description" : "Bim Revision ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimRevisionResponse"
                }
              }
            },
            "description" : "Bim Revision"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "apply bim revision result",
        "tags" : [ "BimRevision" ]
      }
    },
    "/bim_revisions/{id}/bim_revision_upload_credentials" : {
      "post" : {
        "description" : "Bim Revision result 업로드를 위한 Credential을 생성",
        "operationId" : "bim_revision_create_bim_revision_upload_credentials",
        "parameters" : [ {
          "description" : "Bim Revision ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "BimRevision Result Upload Credentials",
        "tags" : [ "BimRevision" ]
      }
    },
    "/bim_revisions/{id}/callbacks/forge_translation_finished/{token}" : {
      "post" : {
        "operationId" : "bim_revision_forge_translation_finished_callback",
        "parameters" : [ {
          "description" : "Bim Revision ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Bim callback token",
          "explode" : false,
          "in" : "path",
          "name" : "token",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Callback recevied"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Forge translation finished callback",
        "tags" : [ "BimRevision" ]
      }
    },
    "/bim_revisions/{id}/check_uploading" : {
      "put" : {
        "operationId" : "bim_revision_check_uploading",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Bim Revision ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimRevisionResponse"
                }
              }
            },
            "description" : "Bim Revision"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check bim_revision uploading",
        "tags" : [ "BimRevision" ]
      }
    },
    "/bim_revisions/{id}/forge_translated_upload_credentials" : {
      "post" : {
        "description" : "Forge translated files 업로드를 위한 Credential을 생성",
        "operationId" : "bim_revision_create_forge_translated_upload_credentials",
        "parameters" : [ {
          "description" : "Bim Revision ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Forge Translaged files Upload Credentials",
        "tags" : [ "BimRevision" ]
      }
    },
    "/bim_revisions/{id}/forge_translation_callback" : {
      "post" : {
        "operationId" : "bim_revision_create_forge_translation_callback",
        "parameters" : [ {
          "description" : "Bim Revision ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimRevisionResponse"
                }
              }
            },
            "description" : "Bim Revision"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create forge translation callback",
        "tags" : [ "BimRevision" ]
      }
    },
    "/bim_revisions/{id}/meta" : {
      "get" : {
        "operationId" : "bim_revision_get_meta",
        "parameters" : [ {
          "description" : "Bim Revision ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bim Revision Meta",
        "tags" : [ "BimRevision" ]
      },
      "put" : {
        "operationId" : "bim_revision_update_meta",
        "parameters" : [ {
          "description" : "Bim Revision ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Bim Revision Meta",
        "tags" : [ "BimRevision" ]
      }
    },
    "/bim_revisions/{id}/meta/{meta_key}" : {
      "get" : {
        "description" : "Returns Bim Revision Meta",
        "operationId" : "bim_revision_get_meta_by_key",
        "parameters" : [ {
          "description" : "Bim Revision ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bim Revision Meta by key",
        "tags" : [ "BimRevision" ]
      },
      "put" : {
        "operationId" : "bim_revision_update_meta_by_key",
        "parameters" : [ {
          "description" : "Bim Revision ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Bim Revision Meta",
        "tags" : [ "BimRevision" ]
      }
    },
    "/bim_revisions/{id}/rollback" : {
      "put" : {
        "operationId" : "bim_revision_rollback",
        "parameters" : [ {
          "description" : "Bim Revision ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimRevisionResponse"
                }
              }
            },
            "description" : "Bim Revision"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "rollback bim revision result",
        "tags" : [ "BimRevision" ]
      }
    },
    "/bims" : {
      "get" : {
        "operationId" : "bim_get_bims",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "siteinsights entity",
          "explode" : true,
          "in" : "query",
          "name" : "use_siteinsights",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimListResponse"
                }
              }
            },
            "description" : "Bim list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bim list",
        "tags" : [ "Bim" ]
      },
      "post" : {
        "operationId" : "bim_create_bim",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateBimRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimResponse"
                }
              }
            },
            "description" : "Bim"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Bim",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/forge_access_token" : {
      "post" : {
        "operationId" : "bim_create_forge_access_token",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AutodeskForgeTokenResponse"
                }
              }
            },
            "description" : "Redirect to Autodesk Forge"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create forge access token",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/mock" : {
      "get" : {
        "operationId" : "bim_mock_bims",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimListResponse"
                }
              }
            },
            "description" : "Bim list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bim mock list",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{bim_id}/references" : {
      "get" : {
        "operationId" : "bim_get_references",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "bim_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceListResponse"
                }
              }
            },
            "description" : "Reference list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Reference list",
        "tags" : [ "Bim" ]
      },
      "post" : {
        "operationId" : "bim_create_reference",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "bim_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateBimReferenceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceResponse"
                }
              }
            },
            "description" : "Reference"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Reference",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{bim_id}/references/{id}" : {
      "get" : {
        "operationId" : "bim_get_reference",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "bim_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceResponse"
                }
              }
            },
            "description" : "Reference"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Reference",
        "tags" : [ "Bim" ]
      },
      "put" : {
        "operationId" : "bim_update_reference",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "bim_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateReferenceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceResponse"
                }
              }
            },
            "description" : "Reference"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Reference",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{bim_id}/references/{id}/meta" : {
      "get" : {
        "operationId" : "bim_get_reference_meta",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "bim_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Reference Meta",
        "tags" : [ "Bim" ]
      },
      "put" : {
        "operationId" : "bim_update_reference_meta",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "bim_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Reference Meta",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{bim_id}/references/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "bim_get_reference_meta_by_key",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "bim_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Reference Meta by key",
        "tags" : [ "Bim" ]
      },
      "put" : {
        "operationId" : "bim_update_reference_meta_by_key",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "bim_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Reference Meta by key",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}" : {
      "get" : {
        "operationId" : "bim_get_bim",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimResponse"
                }
              }
            },
            "description" : "Bim"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bim",
        "tags" : [ "Bim" ]
      },
      "put" : {
        "operationId" : "bim_update_bim",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateBimRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimResponse"
                }
              }
            },
            "description" : "Bim"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Bim",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/callbacks/forge_translation_finished/{token}" : {
      "post" : {
        "operationId" : "bim_forge_translation_finished_callback",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Bim callback token",
          "explode" : false,
          "in" : "path",
          "name" : "token",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Callback recevied"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Forge translation finished callback",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/check_grid_system_uploading" : {
      "put" : {
        "operationId" : "bim_check_grid_system_uploading",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimResponse"
                }
              }
            },
            "description" : "Bim"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check bim grid system uploading",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/check_uploading" : {
      "put" : {
        "operationId" : "bim_check_uploading",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimResponse"
                }
              }
            },
            "description" : "Bim"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check bim uploading",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/clear_fields" : {
      "put" : {
        "operationId" : "bim_clear_fields",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Bim fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/copy" : {
      "put" : {
        "operationId" : "bim_copy_bim",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CopyBimRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimResponse"
                }
              }
            },
            "description" : "Bim"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "hardcopy bim and reprocess",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/download" : {
      "get" : {
        "description" : "Redirect to bim download link",
        "operationId" : "bim_download_bim",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to bim download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download bim",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/flush_bim_objects" : {
      "put" : {
        "operationId" : "bim_flush_bim_objects",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimResponse"
                }
              }
            },
            "description" : "Bim"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "flush bim objects",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/forge_translated_upload_credentials" : {
      "post" : {
        "description" : "Forge translated files 업로드를 위한 Credential을 생성",
        "operationId" : "bim_create_forge_translated_upload_credentials",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Forge Translaged files Upload Credentials",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/forge_translation_callback" : {
      "post" : {
        "operationId" : "bim_create_forge_translation_callback",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimResponse"
                }
              }
            },
            "description" : "Bim"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create forge translation callback",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/grid_system_upload_url" : {
      "post" : {
        "operationId" : "bim_create_grid_system_upload_url",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimResponse"
                }
              }
            },
            "description" : "Bim"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bim grid system upload url",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/invoke" : {
      "post" : {
        "description" : "invoke bim",
        "operationId" : "bim_invoke_bim",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/InvokeBimRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimResponse"
                }
              }
            },
            "description" : "Bim"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Invoke Bim",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/meta" : {
      "get" : {
        "operationId" : "bim_get_meta",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bim Meta",
        "tags" : [ "Bim" ]
      },
      "put" : {
        "operationId" : "bim_update_meta",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Bim Meta",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/meta/{meta_key}" : {
      "get" : {
        "description" : "Returns Bim Meta",
        "operationId" : "bim_get_meta_by_key",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bim Meta by key",
        "tags" : [ "Bim" ]
      },
      "put" : {
        "operationId" : "bim_update_meta_by_key",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Bim Meta",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/publish" : {
      "delete" : {
        "operationId" : "bim_unpublish_bim",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimResponse"
                }
              }
            },
            "description" : "Bim"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish Bim",
        "tags" : [ "Bim" ]
      },
      "put" : {
        "operationId" : "bim_publish_bim",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimResponse"
                }
              }
            },
            "description" : "Bim"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish Bim",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/purge" : {
      "delete" : {
        "operationId" : "bim_purge_bim",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Bim",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/reinvoke" : {
      "post" : {
        "operationId" : "bim_reinvoke_bim",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ReinvokeBimRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimResponse"
                }
              }
            },
            "description" : "Bim"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Reinnvoke Bim",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/resources" : {
      "get" : {
        "operationId" : "bim_get_resources",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceListResponse"
                }
              }
            },
            "description" : "Resource list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bim Resources",
        "tags" : [ "Bim" ]
      },
      "post" : {
        "operationId" : "bim_create_resource",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateResourceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Bim Resource",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/resources/{kind}" : {
      "delete" : {
        "operationId" : "bim_delete_resource",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Bim Resource",
        "tags" : [ "Bim" ]
      },
      "get" : {
        "operationId" : "bim_get_resource",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bim Resource",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/resources/{kind}/check_uploading" : {
      "put" : {
        "operationId" : "bim_check_resource_uploading",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Bim Resource uploading",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/resources/{kind}/download" : {
      "get" : {
        "description" : "Redirect to bim resource download link",
        "operationId" : "bim_download_resource",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Bim Resource",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/resources/{kind}/upload_credentials" : {
      "post" : {
        "operationId" : "bim_create_resource_upload_credentials",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Bim Resource upload credentials",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/resources/{kind}/upload_url" : {
      "post" : {
        "operationId" : "bim_create_resource_upload_url",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Bim Resource upload url",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/trash" : {
      "put" : {
        "operationId" : "bim_trash_bim",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash Bim",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/untrash" : {
      "put" : {
        "description" : "Untrash trashed bim and return it.",
        "operationId" : "bim_untrash_bim",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimResponse"
                }
              }
            },
            "description" : "Bim"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash trashed bim",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/upload_credentials" : {
      "post" : {
        "description" : "Bim 업로드를 위한 Credential을 생성",
        "operationId" : "bim_create_upload_credentials",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Bim Upload Credentials",
        "tags" : [ "Bim" ]
      }
    },
    "/bims/{id}/upload_url" : {
      "post" : {
        "operationId" : "bim_create_upload_url",
        "parameters" : [ {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimResponse"
                }
              }
            },
            "description" : "Bim"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create bim upload url",
        "tags" : [ "Bim" ]
      }
    },
    "/bookmarks/mock" : {
      "get" : {
        "operationId" : "bookmark_mock_bookmarks",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkListResponse"
                }
              }
            },
            "description" : "Bookmark list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bookmark mock list",
        "tags" : [ "Bookmark" ]
      }
    },
    "/captures" : {
      "get" : {
        "operationId" : "capture_get_captures",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : true,
          "in" : "query",
          "name" : "record_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Capture IDs",
          "explode" : false,
          "in" : "query",
          "name" : "edit_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "User ID",
          "explode" : true,
          "in" : "query",
          "name" : "user_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureListResponse"
                }
              }
            },
            "description" : "Capture list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Capture list",
        "tags" : [ "Capture" ]
      },
      "post" : {
        "operationId" : "capture_create_capture",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCaptureRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Capture",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/mock" : {
      "get" : {
        "operationId" : "capture_mock_captures",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureListResponse"
                }
              }
            },
            "description" : "Capture list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Capture mock list",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/with_materials" : {
      "post" : {
        "operationId" : "capture_create_capture_with_materials",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCaptureWithMaterialsRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureWithMaterialsResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Capture With Materials",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{capture_id}/assets" : {
      "get" : {
        "operationId" : "capture_get_assets",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetListResponse"
                }
              }
            },
            "description" : "Asset list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Asset list",
        "tags" : [ "Capture" ]
      },
      "post" : {
        "operationId" : "capture_create_asset",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAssetRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetResponse"
                }
              }
            },
            "description" : "Asset"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Asset",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{capture_id}/references" : {
      "get" : {
        "operationId" : "capture_get_references",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceListResponse"
                }
              }
            },
            "description" : "Reference list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Reference list",
        "tags" : [ "Capture" ]
      },
      "post" : {
        "operationId" : "capture_create_reference",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCaptureReferenceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceResponse"
                }
              }
            },
            "description" : "Reference"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Reference",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{capture_id}/references/{id}" : {
      "get" : {
        "operationId" : "capture_get_reference",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceResponse"
                }
              }
            },
            "description" : "Reference"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Reference",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_update_reference",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateReferenceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceResponse"
                }
              }
            },
            "description" : "Reference"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Reference",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{capture_id}/references/{id}/meta" : {
      "get" : {
        "operationId" : "capture_get_reference_meta",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Reference Meta",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_update_reference_meta",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Reference Meta",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{capture_id}/references/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "capture_get_reference_meta_by_key",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Reference Meta by key",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_update_reference_meta_by_key",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Reference Meta by key",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{capture_id}/sketches" : {
      "get" : {
        "operationId" : "capture_get_sketches",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SketchListResponse"
                }
              }
            },
            "description" : "Sketch list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Sketch list",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{capture_id}/sketches/{id}" : {
      "get" : {
        "operationId" : "capture_get_sketch",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SketchResponse"
                }
              }
            },
            "description" : "Sketch"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Sketch",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_update_sketch",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateSketchRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SketchResponse"
                }
              }
            },
            "description" : "Sketch"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Sketch",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{capture_id}/sketches/{id}/clear_fields" : {
      "put" : {
        "operationId" : "capture_clear_sketch_fields",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Sketch fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{capture_id}/sketches/{id}/meta" : {
      "get" : {
        "operationId" : "capture_get_sketch_meta",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Sketch Meta",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_update_sketch_meta",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Sketch Meta",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{capture_id}/sketches/{id}/meta/{meta_key}" : {
      "get" : {
        "description" : "Returns Sketch Meta",
        "operationId" : "capture_get_sketch_meta_by_key",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Sketch Meta by key",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_update_sketch_meta_by_key",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Sketch Meta by key",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}" : {
      "get" : {
        "operationId" : "capture_get_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Capture",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_update_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCaptureRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Capture",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/check_materials_uploading" : {
      "put" : {
        "operationId" : "capture_check_materials_uploading",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureWithMaterialsResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check capture materials uploading state",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/check_process_output_uploading" : {
      "put" : {
        "operationId" : "capture_check_process_output_uploading",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check capture process output uploading",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/check_voxels_uploading" : {
      "put" : {
        "operationId" : "capture_check_voxels_uploading",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/VoxelsResponse"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check capture voxels uploading",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/clear_fields" : {
      "put" : {
        "operationId" : "capture_clear_fields",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Capture fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/download_process_output" : {
      "get" : {
        "description" : "Redirect to capture process output download link",
        "operationId" : "capture_process_output_download",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to capture process output download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Capture process output download",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/download_zip" : {
      "get" : {
        "description" : "Redirect to capture zip download link",
        "operationId" : "capture_zip_download",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to capture zip download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Capture zip download",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/entity_parameters" : {
      "get" : {
        "operationId" : "capture_get_entity_parameter",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterListResponse"
                }
              }
            },
            "description" : "EntityParameter list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Capture EntityParameter list",
        "tags" : [ "Capture" ]
      },
      "post" : {
        "operationId" : "capture_create_entity_parameter",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateEntityParameterRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterResponse"
                }
              }
            },
            "description" : "EntityParameter"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Capture EntityParameter",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/events" : {
      "post" : {
        "operationId" : "capture_create_event",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCustomEventRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Capture Event",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/invoke" : {
      "post" : {
        "description" : "invoke: https://cupixrnd.atlassian.net/browse/EINS-87 참조",
        "operationId" : "capture_invoke_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/InvokeCaptureRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Invoke Capture",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/measure_ready" : {
      "delete" : {
        "operationId" : "capture_delete_measure_ready",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Capture Measure Ready",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_measure_ready",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Capture Measure Ready",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/meta" : {
      "get" : {
        "operationId" : "capture_get_meta",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Capture Meta",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_update_meta",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Capture Meta",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "capture_get_meta_by_key",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Capture Meta by key",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_update_meta_by_key",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Capture Meta by key",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/process_output_upload_url" : {
      "post" : {
        "description" : "capture process 계산결과 파일을 업로드할 수 있는 url을 제공한다.",
        "operationId" : "capture_create_process_output_upload_url",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Capture process output upload url",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/publish" : {
      "delete" : {
        "operationId" : "capture_unpublish_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish Capture",
        "tags" : [ "Capture" ]
      },
      "put" : {
        "operationId" : "capture_publish_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish Capture",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/purge" : {
      "delete" : {
        "operationId" : "capture_purge_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Capture",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/request_pointcloud_download" : {
      "post" : {
        "description" : "Request an email to download dollhouses",
        "operationId" : "capture_get_request_pointcloud_download",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "request an email to download dollhouses",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/resources" : {
      "get" : {
        "operationId" : "capture_get_resources",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceListResponse"
                }
              }
            },
            "description" : "Resource list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Capture Resources",
        "tags" : [ "Capture" ]
      },
      "post" : {
        "operationId" : "capture_create_resource",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCaptureResourceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Capture Resource",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/resources/{kind}" : {
      "delete" : {
        "operationId" : "capture_delete_resource",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Capture Resource",
        "tags" : [ "Capture" ]
      },
      "get" : {
        "operationId" : "capture_get_resource",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Capture Resource",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/resources/{kind}/check_uploading" : {
      "put" : {
        "operationId" : "capture_check_resource_uploading",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Capture Resource uploading",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/resources/{kind}/download" : {
      "get" : {
        "operationId" : "capture_download_resource",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to resource download URL"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Capture Resource",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/resources/{kind}/upload_url" : {
      "post" : {
        "operationId" : "capture_create_resource_upload_url",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Capture Resource upload url",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/trash" : {
      "put" : {
        "operationId" : "capture_trash_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash Capture",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/untrash" : {
      "put" : {
        "description" : "Untrash trashed capture and return it.",
        "operationId" : "capture_untrash_capture",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureResponse"
                }
              }
            },
            "description" : "Capture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash trashed capture",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/voxels" : {
      "get" : {
        "description" : "Get capture voxels",
        "operationId" : "capture_get_voxels",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/VoxelsResponse"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get capture voxels",
        "tags" : [ "Capture" ]
      }
    },
    "/captures/{id}/voxels_upload_credentials" : {
      "post" : {
        "description" : "Capture voxels result 업로드를 위한 Credential을 생성",
        "operationId" : "capture_create_voxels_upload_credentials",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get capture voxels upload credentials",
        "tags" : [ "Capture" ]
      }
    },
    "/categories" : {
      "get" : {
        "operationId" : "category_get_categories",
        "parameters" : [ {
          "description" : "Category Type",
          "explode" : true,
          "in" : "query",
          "name" : "category_type",
          "required" : false,
          "schema" : {
            "enum" : [ "main", "sub" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Parent ID",
          "explode" : true,
          "in" : "query",
          "name" : "parent_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Category ID List",
          "explode" : false,
          "in" : "query",
          "name" : "ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryListResponse"
                }
              }
            },
            "description" : "Category list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "category list",
        "tags" : [ "Category" ]
      },
      "post" : {
        "operationId" : "category_create_category",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCategoryRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryResponse"
                }
              }
            },
            "description" : "Category"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Category",
        "tags" : [ "Category" ]
      },
      "put" : {
        "operationId" : "category_bulk_category",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkCategoryRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Category",
        "tags" : [ "Category" ]
      }
    },
    "/categories/bulk" : {
      "post" : {
        "operationId" : "category_bulk_create",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCategoryBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create Category",
        "tags" : [ "Category" ]
      },
      "put" : {
        "operationId" : "category_bulk_update",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCategoryBulkRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Category bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete Category",
        "tags" : [ "Category" ]
      }
    },
    "/categories/mock" : {
      "get" : {
        "operationId" : "category_mock_categories",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryListResponse"
                }
              }
            },
            "description" : "Category list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "category mock list",
        "tags" : [ "Category" ]
      }
    },
    "/categories/{id}" : {
      "delete" : {
        "operationId" : "category_delete_category",
        "parameters" : [ {
          "description" : "Category ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Category",
        "tags" : [ "Category" ]
      },
      "get" : {
        "operationId" : "category_get_category",
        "parameters" : [ {
          "description" : "Category ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryResponse"
                }
              }
            },
            "description" : "Category"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Category",
        "tags" : [ "Category" ]
      },
      "put" : {
        "operationId" : "category_update_category",
        "parameters" : [ {
          "description" : "Category ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCategoryRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryResponse"
                }
              }
            },
            "description" : "Category"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Category",
        "tags" : [ "Category" ]
      }
    },
    "/clusters" : {
      "get" : {
        "operationId" : "cluster_get_clusters",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : true,
          "in" : "query",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Cluster type",
          "explode" : true,
          "in" : "query",
          "name" : "cluster_type",
          "required" : false,
          "schema" : {
            "enum" : [ "none", "unrefined", "refined" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClusterListResponse"
                }
              }
            },
            "description" : "Cluster list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Cluster list",
        "tags" : [ "Cluster" ]
      },
      "post" : {
        "operationId" : "cluster_create_cluster",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateClusterRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClusterResponse"
                }
              }
            },
            "description" : "Cluster"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Cluster",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/mock" : {
      "get" : {
        "operationId" : "cluster_mock_clusters",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClusterListResponse"
                }
              }
            },
            "description" : "Cluster list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Cluster mock list",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}" : {
      "delete" : {
        "operationId" : "cluster_delete_cluster",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Cluster",
        "tags" : [ "Cluster" ]
      },
      "get" : {
        "operationId" : "cluster_get_cluster",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClusterResponse"
                }
              }
            },
            "description" : "Cluster"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Cluster",
        "tags" : [ "Cluster" ]
      },
      "put" : {
        "operationId" : "cluster_update_cluster",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateClusterRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClusterResponse"
                }
              }
            },
            "description" : "Cluster"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Cluster",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/clear_fields" : {
      "put" : {
        "operationId" : "cluster_clear_fields",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Cluster fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail", "node_id", "parent_id" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/meta" : {
      "get" : {
        "operationId" : "cluster_get_meta",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Cluster Meta",
        "tags" : [ "Cluster" ]
      },
      "put" : {
        "operationId" : "cluster_update_meta",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Cluster Meta",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "cluster_get_meta_by_key",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Cluster Meta by key",
        "tags" : [ "Cluster" ]
      },
      "put" : {
        "operationId" : "cluster_update_meta_by_key",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Cluster Meta by key",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/parent" : {
      "delete" : {
        "description" : "Cluster parent 삭제 후 cluster 정보 반환",
        "operationId" : "cluster_delete_parent",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClusterResponse"
                }
              }
            },
            "description" : "Cluster"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Cluster Parent",
        "tags" : [ "Cluster" ]
      },
      "put" : {
        "operationId" : "cluster_update_parent",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateClusterParentRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClusterResponse"
                }
              }
            },
            "description" : "Cluster"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Cluster Parent",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/resources" : {
      "get" : {
        "operationId" : "cluster_get_resources",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceListResponse"
                }
              }
            },
            "description" : "Resource list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Cluster Resources",
        "tags" : [ "Cluster" ]
      },
      "post" : {
        "operationId" : "cluster_create_resource",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateResourceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Cluster Resource",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/resources/{kind}" : {
      "delete" : {
        "operationId" : "cluster_delete_resource",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Cluster Resource",
        "tags" : [ "Cluster" ]
      },
      "get" : {
        "operationId" : "cluster_get_resource",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Cluster Resource",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/resources/{kind}/check_uploading" : {
      "put" : {
        "operationId" : "cluster_check_resource_uploading",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Cluster Resource uploading",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/resources/{kind}/download" : {
      "get" : {
        "description" : "Redirect to cluster resource download link",
        "operationId" : "cluster_download_resource",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to resource download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Cluster Resource",
        "tags" : [ "Cluster" ]
      }
    },
    "/clusters/{id}/resources/{kind}/upload_url" : {
      "post" : {
        "operationId" : "cluster_create_resource_upload_url",
        "parameters" : [ {
          "description" : "Cluster ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Cluster Resource upload url",
        "tags" : [ "Cluster" ]
      }
    },
    "/comments/mock" : {
      "get" : {
        "operationId" : "comment_mock_comments",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommentListResponse"
                }
              }
            },
            "description" : "Comment list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Comment mock list",
        "tags" : [ "Comment" ]
      }
    },
    "/custom_properties" : {
      "get" : {
        "operationId" : "customproperty_get_custom_properties",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomPropertyListResponse"
                }
              }
            },
            "description" : "CustomProperty list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "custom_property list",
        "tags" : [ "CustomProperty" ]
      },
      "post" : {
        "operationId" : "customproperty_create_custom_property",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCustomPropertyRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomPropertyResponse"
                }
              }
            },
            "description" : "CustomProperty"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create CustomProperty",
        "tags" : [ "CustomProperty" ]
      }
    },
    "/custom_properties/{id}" : {
      "delete" : {
        "operationId" : "customproperty_delete_custom_property",
        "parameters" : [ {
          "description" : "CustomProperty ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete CustomProperty",
        "tags" : [ "CustomProperty" ]
      },
      "get" : {
        "operationId" : "customproperty_get_custom_property",
        "parameters" : [ {
          "description" : "CustomProperty ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomPropertyResponse"
                }
              }
            },
            "description" : "CustomProperty"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get CustomProperty",
        "tags" : [ "CustomProperty" ]
      },
      "put" : {
        "operationId" : "customproperty_update_custom_property",
        "parameters" : [ {
          "description" : "CustomProperty ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCustomPropertyRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomPropertyResponse"
                }
              }
            },
            "description" : "CustomProperty"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update CustomProperty",
        "tags" : [ "CustomProperty" ]
      }
    },
    "/custom_properties/{id}/clear_fields" : {
      "put" : {
        "operationId" : "customproperty_clear_fields",
        "parameters" : [ {
          "description" : "CustomProperty ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "CustomProperty fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "unit" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "CustomProperty" ]
      }
    },
    "/deviations" : {
      "get" : {
        "operationId" : "deviation_get_deviations",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID",
          "explode" : true,
          "in" : "query",
          "name" : "bim_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Pointcloud IDs",
          "explode" : false,
          "in" : "query",
          "name" : "pointcloud_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Deviation deviation_type",
          "explode" : true,
          "in" : "query",
          "name" : "deviation_type",
          "required" : false,
          "schema" : {
            "enum" : [ "Pointcloud", "Siteinsights", "Texture", "Report" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviationListResponse"
                }
              }
            },
            "description" : "Deviation list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Deviation list",
        "tags" : [ "Deviation" ]
      },
      "post" : {
        "operationId" : "deviation_create_deviation",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateDeviationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviationResponse"
                }
              }
            },
            "description" : "Deviation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Deviation",
        "tags" : [ "Deviation" ]
      }
    },
    "/deviations/mock" : {
      "get" : {
        "operationId" : "deviation_mock_deviations",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviationListResponse"
                }
              }
            },
            "description" : "Deviation list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Deviation mock list",
        "tags" : [ "Deviation" ]
      }
    },
    "/deviations/{id}" : {
      "delete" : {
        "operationId" : "deviation_delete_deviation",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Deviation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Deviation",
        "tags" : [ "Deviation" ]
      },
      "get" : {
        "operationId" : "deviation_get_deviation",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Deviation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviationResponse"
                }
              }
            },
            "description" : "Deviation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Deviation",
        "tags" : [ "Deviation" ]
      },
      "put" : {
        "operationId" : "deviation_update_deviation",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Deviation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateDeviationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviationResponse"
                }
              }
            },
            "description" : "Deviation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Deviation",
        "tags" : [ "Deviation" ]
      }
    },
    "/deviations/{id}/check_uploading" : {
      "put" : {
        "operationId" : "deviation_check_uploading",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Deviation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviationResponse"
                }
              }
            },
            "description" : "Deviation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check deviation uploading",
        "tags" : [ "Deviation" ]
      }
    },
    "/deviations/{id}/clear_fields" : {
      "put" : {
        "operationId" : "deviation_clear_fields",
        "parameters" : [ {
          "description" : "Deviation fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "name" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Deviation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Deviation" ]
      }
    },
    "/deviations/{id}/deviation_upload_credentials" : {
      "post" : {
        "description" : "Deviation result 업로드를 위한 Credential을 생성",
        "operationId" : "deviation_create_deviation_upload_credentials",
        "parameters" : [ {
          "description" : "Deviation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Deviation Result Upload Credentials",
        "tags" : [ "Deviation" ]
      }
    },
    "/deviations/{id}/entity_parameters" : {
      "get" : {
        "operationId" : "deviation_get_entity_parameter",
        "parameters" : [ {
          "description" : "Deviation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterListResponse"
                }
              }
            },
            "description" : "EntityParameter list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Deviation EntityParameter list",
        "tags" : [ "Deviation" ]
      },
      "post" : {
        "operationId" : "deviation_create_entity_parameter",
        "parameters" : [ {
          "description" : "Deviation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateEntityParameterRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterResponse"
                }
              }
            },
            "description" : "EntityParameter"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Deviation EntityParameter",
        "tags" : [ "Deviation" ]
      }
    },
    "/deviations/{id}/meta" : {
      "get" : {
        "operationId" : "deviation_get_meta",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Deviation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Deviation Meta",
        "tags" : [ "Deviation" ]
      },
      "put" : {
        "operationId" : "deviation_update_meta",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Deviation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Deviation Meta",
        "tags" : [ "Deviation" ]
      }
    },
    "/deviations/{id}/meta/{meta_key}" : {
      "get" : {
        "description" : "Returns Deviation Meta",
        "operationId" : "deviation_get_meta_by_key",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Deviation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Deviation Meta by key",
        "tags" : [ "Deviation" ]
      },
      "put" : {
        "operationId" : "deviation_update_meta_by_key",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Deviation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Deviation Meta",
        "tags" : [ "Deviation" ]
      }
    },
    "/deviations/{id}/publish" : {
      "delete" : {
        "operationId" : "deviation_unpublish_deviation",
        "parameters" : [ {
          "description" : "Deviation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviationResponse"
                }
              }
            },
            "description" : "Deviation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish Deviations",
        "tags" : [ "Deviation" ]
      },
      "put" : {
        "operationId" : "devitation_publish_deviation",
        "parameters" : [ {
          "description" : "Deviation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviationResponse"
                }
              }
            },
            "description" : "Deviation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish Deviations",
        "tags" : [ "Deviation" ]
      }
    },
    "/editing_entities" : {
      "get" : {
        "operationId" : "editingentity_get_editing_entities",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "State query parameter",
          "explode" : true,
          "in" : "query",
          "name" : "states",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Editing ID list",
          "explode" : false,
          "in" : "query",
          "name" : "editing_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EditingEntityListResponse"
                }
              }
            },
            "description" : "Editing Entity list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get editing entity list",
        "tags" : [ "EditingEntity" ]
      }
    },
    "/editing_entities/{id}" : {
      "get" : {
        "operationId" : "editingentity_get_editing_entity",
        "parameters" : [ {
          "description" : "Editing Entity ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EditingEntityResponse"
                }
              }
            },
            "description" : "Editing Entity"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get editing entity",
        "tags" : [ "EditingEntity" ]
      },
      "patch" : {
        "operationId" : "editingentity_update_editing_entity",
        "parameters" : [ {
          "description" : "Editing Entity ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateEditingEntityRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EditingEntityResponse"
                }
              }
            },
            "description" : "Editing Entity"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update editing entity",
        "tags" : [ "EditingEntity" ]
      }
    },
    "/editings" : {
      "get" : {
        "operationId" : "editing_get_editings",
        "parameters" : [ {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Reviewer IDs",
          "explode" : false,
          "in" : "query",
          "name" : "reviewer_user_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Editor ID list",
          "explode" : false,
          "in" : "query",
          "name" : "editor_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Editing states",
          "explode" : false,
          "in" : "query",
          "name" : "states",
          "required" : false,
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/EditingState"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EditingListResponse"
                }
              }
            },
            "description" : "Editing list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get editing list",
        "tags" : [ "Editing" ]
      }
    },
    "/editings/{id}" : {
      "get" : {
        "operationId" : "editing_get_editing",
        "parameters" : [ {
          "description" : "Editing ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EditingResponse"
                }
              }
            },
            "description" : "Editing"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get editing",
        "tags" : [ "Editing" ]
      },
      "patch" : {
        "operationId" : "editing_update_editing",
        "parameters" : [ {
          "description" : "Editing ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateEditingRequestBody"
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/admin.EditingResponse"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update editing",
        "tags" : [ "Editing" ]
      }
    },
    "/editings/{id}/approve/{reviewer_id}" : {
      "put" : {
        "operationId" : "editing_approve_editing",
        "parameters" : [ {
          "description" : "Editing ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reviewer ID",
          "explode" : false,
          "in" : "path",
          "name" : "reviewer_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EditingResponse"
                }
              }
            },
            "description" : "Editing"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Approve Editing",
        "tags" : [ "Editing" ]
      }
    },
    "/editings/{id}/reject/{reviewer_id}" : {
      "put" : {
        "operationId" : "editing_reject_editing",
        "parameters" : [ {
          "description" : "Editing ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reviewer ID",
          "explode" : false,
          "in" : "path",
          "name" : "reviewer_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateEditingRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EditingResponse"
                }
              }
            },
            "description" : "Editing"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Reject Editing",
        "tags" : [ "Editing" ]
      }
    },
    "/editings/{id}/review_by_rule" : {
      "put" : {
        "operationId" : "editing_review_by_rule",
        "parameters" : [ {
          "description" : "Editing ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateReviewByRuleRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EditingResponse"
                }
              }
            },
            "description" : "Editing"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Review Editing by the Approval rule",
        "tags" : [ "Editing" ]
      }
    },
    "/editings/{id}/update_reviewer_state/{reviewer_id}" : {
      "put" : {
        "operationId" : "editing_update_reviewer_state",
        "parameters" : [ {
          "description" : "Editing ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reviewer ID",
          "explode" : false,
          "in" : "path",
          "name" : "reviewer_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateReviewerStateRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EditingResponse"
                }
              }
            },
            "description" : "Editing"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Reviewer State",
        "tags" : [ "Editing" ]
      }
    },
    "/element_traces" : {
      "get" : {
        "operationId" : "elementtrace_get_element_traces",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Deviation ID",
          "explode" : true,
          "in" : "query",
          "name" : "deviation_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Element ID list",
          "explode" : false,
          "in" : "query",
          "name" : "element_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Task Id array",
          "explode" : false,
          "in" : "query",
          "name" : "task_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workarea ID list",
          "explode" : false,
          "in" : "query",
          "name" : "workarea_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Phase ID list",
          "explode" : false,
          "in" : "query",
          "name" : "phase_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Status ID list",
          "explode" : false,
          "in" : "query",
          "name" : "status_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ElementTraceListResponse"
                }
              }
            },
            "description" : "ElementTrace list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "element trace list",
        "tags" : [ "ElementTrace" ]
      },
      "put" : {
        "operationId" : "elementtrace_bulk_element_trace",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkElementTraceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk ElementTrace",
        "tags" : [ "ElementTrace" ]
      }
    },
    "/element_traces/refresh" : {
      "put" : {
        "operationId" : "elementtrace_refresh",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : true,
          "in" : "query",
          "name" : "record_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ElementTraceResponse"
                }
              }
            },
            "description" : "ElementTrace"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Refresh Document of ElementTrace",
        "tags" : [ "ElementTrace" ]
      }
    },
    "/element_traces/{id}" : {
      "delete" : {
        "operationId" : "elementtrace_delete_element_trace",
        "parameters" : [ {
          "description" : "Element Trace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete ElementTrace",
        "tags" : [ "ElementTrace" ]
      },
      "get" : {
        "operationId" : "elementtrace_get_element_trace",
        "parameters" : [ {
          "description" : "Element Trace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ElementTraceResponse"
                }
              }
            },
            "description" : "ElementTrace"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get ElementTrace",
        "tags" : [ "ElementTrace" ]
      },
      "put" : {
        "operationId" : "elementtrace_update_element_trace",
        "parameters" : [ {
          "description" : "Element Trace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateElementTraceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ElementTraceResponse"
                }
              }
            },
            "description" : "ElementTrace"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update ElementTrace",
        "tags" : [ "ElementTrace" ]
      }
    },
    "/element_traces/{id}/meta" : {
      "get" : {
        "operationId" : "elementtrace_get_meta",
        "parameters" : [ {
          "description" : "Element Trace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get ElementTrace Meta",
        "tags" : [ "ElementTrace" ]
      },
      "put" : {
        "operationId" : "elementtrace_update_meta",
        "parameters" : [ {
          "description" : "Element Trace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update ElementTrace Meta",
        "tags" : [ "ElementTrace" ]
      }
    },
    "/element_traces/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "elementtrace_get_meta_by_key",
        "parameters" : [ {
          "description" : "Element Trace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get ElementTrace Meta by key",
        "tags" : [ "ElementTrace" ]
      },
      "put" : {
        "operationId" : "elementtrace_update_meta_by_key",
        "parameters" : [ {
          "description" : "Element Trace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update ElementTrace Meta",
        "tags" : [ "ElementTrace" ]
      }
    },
    "/elements" : {
      "get" : {
        "operationId" : "element_get_elements",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID",
          "explode" : true,
          "in" : "query",
          "name" : "bim_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Category ID",
          "explode" : true,
          "in" : "query",
          "name" : "category_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Workarea ID list",
          "explode" : false,
          "in" : "query",
          "name" : "workarea_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ElementListResponse"
                }
              }
            },
            "description" : "Element list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "element list",
        "tags" : [ "Element" ]
      },
      "put" : {
        "operationId" : "element_bulk_element",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkElementRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Element",
        "tags" : [ "Element" ]
      }
    },
    "/elements/revise" : {
      "put" : {
        "operationId" : "element_revise_elements",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ReviseElementRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Revise Element",
        "tags" : [ "Element" ]
      }
    },
    "/elements/{id}" : {
      "delete" : {
        "operationId" : "element_delete_element",
        "parameters" : [ {
          "description" : "Element ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Element",
        "tags" : [ "Element" ]
      },
      "get" : {
        "operationId" : "element_get_element",
        "parameters" : [ {
          "description" : "Element ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ElementResponse"
                }
              }
            },
            "description" : "Element"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Element",
        "tags" : [ "Element" ]
      },
      "put" : {
        "operationId" : "element_update_element",
        "parameters" : [ {
          "description" : "Element ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateElementRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ElementResponse"
                }
              }
            },
            "description" : "Element"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Element",
        "tags" : [ "Element" ]
      }
    },
    "/elements/{id}/meta" : {
      "get" : {
        "operationId" : "element_get_meta",
        "parameters" : [ {
          "description" : "Element ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Element Meta",
        "tags" : [ "Element" ]
      },
      "put" : {
        "operationId" : "element_update_meta",
        "parameters" : [ {
          "description" : "Element ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Element Meta",
        "tags" : [ "Element" ]
      }
    },
    "/elements/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "element_get_meta_by_key",
        "parameters" : [ {
          "description" : "Element ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Element Meta by key",
        "tags" : [ "Element" ]
      },
      "put" : {
        "operationId" : "element_update_meta_by_key",
        "parameters" : [ {
          "description" : "Element ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Element Meta",
        "tags" : [ "Element" ]
      }
    },
    "/facilities" : {
      "get" : {
        "operationId" : "facility_get_facilities",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workspace ID",
          "explode" : true,
          "in" : "query",
          "name" : "workspace_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\narchived: 아카이브 된 상태\nvisible: untrashed + archived\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent", "archived", "visible" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityListResponse"
                }
              }
            },
            "description" : "Facility list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Facility list",
        "tags" : [ "Facility" ]
      },
      "post" : {
        "operationId" : "facility_create_facility",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateFacilityRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityResponse"
                }
              }
            },
            "description" : "Facility"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create facility",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/mock" : {
      "get" : {
        "operationId" : "facility_mock_facilities",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityListResponse"
                }
              }
            },
            "description" : "Facility list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Facility mock list",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/share" : {
      "put" : {
        "operationId" : "facility_bulk_share_review",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkShareRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Share facilities with user or group",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/unshare" : {
      "put" : {
        "operationId" : "facility_bulk_unshare_review",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkShareRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Unshare facilities with user or group",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{facility_key}/bookmarks" : {
      "get" : {
        "operationId" : "facility_get_bookmarks",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkListResponse"
                }
              }
            },
            "description" : "Bookmark list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bookmark List",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{facility_key}/bookmarks/{key}" : {
      "delete" : {
        "operationId" : "facility_delete_bookmark",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Bookmark",
        "tags" : [ "Facility" ]
      },
      "get" : {
        "operationId" : "facility_get_bookmark",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkResponse"
                }
              }
            },
            "description" : "Bookmark"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bookmark",
        "tags" : [ "Facility" ]
      },
      "put" : {
        "operationId" : "facility_update_bookmark",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateBookmarkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkResponse"
                }
              }
            },
            "description" : "Bookmark"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Bookmark",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{facility_key}/bookmarks/{key}/meta" : {
      "get" : {
        "operationId" : "bookmark_get_meta",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bookmark Meta",
        "tags" : [ "Bookmark" ]
      },
      "put" : {
        "operationId" : "bookmark_update_meta",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Bookmark Meta",
        "tags" : [ "Bookmark" ]
      }
    },
    "/facilities/{facility_key}/bookmarks/{key}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "bookmark_get_meta_by_key",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bookmark Meta by key",
        "tags" : [ "Bookmark" ]
      },
      "put" : {
        "operationId" : "bookmark_update_meta_by_key",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Bookmark Meta",
        "tags" : [ "Bookmark" ]
      }
    },
    "/facilities/{facility_key}/connects" : {
      "get" : {
        "operationId" : "facility_get_connects",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "provider list",
          "explode" : false,
          "in" : "query",
          "name" : "providers",
          "required" : false,
          "schema" : {
            "items" : {
              "enum" : [ "matterport", "arcgis", "itwin", "cesium" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectListResponse"
                }
              }
            },
            "description" : "Connect list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Connect list",
        "tags" : [ "Facility" ]
      },
      "post" : {
        "operationId" : "facility_create_connect",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateConnectRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectResponse"
                }
              }
            },
            "description" : "Connect information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create connect",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{facility_key}/connects/{id}" : {
      "get" : {
        "operationId" : "facility_get_connect",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Connect ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectResponse"
                }
              }
            },
            "description" : "Connect information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Connect",
        "tags" : [ "Facility" ]
      },
      "put" : {
        "operationId" : "facility_update_connect",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Connect ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateConnectRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectResponse"
                }
              }
            },
            "description" : "Connect information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update connect",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{facility_key}/connects/{id}/trash" : {
      "put" : {
        "operationId" : "facility_trash_connect",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Connect ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash connect",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{facility_key}/integrations" : {
      "get" : {
        "operationId" : "facility_get_integrations",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "provider list",
          "explode" : false,
          "in" : "query",
          "name" : "providers",
          "required" : false,
          "schema" : {
            "items" : {
              "enum" : [ "bim360", "procore", "plangrid", "acc", "revizto" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "state list",
          "explode" : false,
          "in" : "query",
          "name" : "states",
          "required" : false,
          "schema" : {
            "items" : {
              "enum" : [ "created", "active" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationListResponse"
                }
              }
            },
            "description" : "Integration list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Integration list",
        "tags" : [ "Facility" ]
      },
      "post" : {
        "operationId" : "facility_create_integration",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateIntegrationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationResponse"
                }
              }
            },
            "description" : "Integration information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create integration",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{facility_key}/integrations/{provider}" : {
      "delete" : {
        "operationId" : "facility_delete_integration",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Integration provider code",
          "explode" : false,
          "in" : "path",
          "name" : "provider",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Integration deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete (unlink) integration",
        "tags" : [ "Facility" ]
      },
      "put" : {
        "operationId" : "facility_update_integration",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Integration provider code",
          "explode" : false,
          "in" : "path",
          "name" : "provider",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateIntegrationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationResponse"
                }
              }
            },
            "description" : "Integration information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update integration",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{facility_key}/integrations/{provider}/access_token" : {
      "post" : {
        "operationId" : "facility_create_integration_access_token",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Integration provider code",
          "explode" : false,
          "in" : "path",
          "name" : "provider",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccessTokenResponse"
                }
              }
            },
            "description" : "Integration access token"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create integration access token",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{facility_key}/siteinsights_configs" : {
      "get" : {
        "operationId" : "facility_get_siteinsights_config",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteinsightsConfigResponse"
                }
              }
            },
            "description" : "SiteInsight Config"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Siteinsight Config",
        "tags" : [ "Facility" ]
      },
      "put" : {
        "operationId" : "facility_update_siteinsights_config",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateSiteinsightsConfigRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteinsightsConfigResponse"
                }
              }
            },
            "description" : "SiteInsight Config"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Siteinsight Config",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}" : {
      "get" : {
        "operationId" : "facility_get_facility",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityResponse"
                }
              }
            },
            "description" : "Facility"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Facility",
        "tags" : [ "Facility" ]
      },
      "put" : {
        "operationId" : "facility_update_facility",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateFacilityRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityResponse"
                }
              }
            },
            "description" : "Facility"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Facility",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/add_bim_pack" : {
      "put" : {
        "operationId" : "facility_add_bim_pack",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityResponse"
                }
              }
            },
            "description" : "Facility"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Add bim_pack to Facility",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/archive" : {
      "put" : {
        "operationId" : "facility_archive_facility",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Archived"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Archive Facility",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/clear_fields" : {
      "put" : {
        "operationId" : "facility_clear_fields",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Facility fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "address", "facility_size", "location", "logo", "number" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/contact_sales" : {
      "post" : {
        "operationId" : "facility_contact_sales",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ContactSalesRequestBody"
        },
        "responses" : {
          "200" : {
            "description" : "ok"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Send e-mails to cupix sales team",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/default_workarea_group" : {
      "get" : {
        "operationId" : "facility_get_facility_default_workarea_group",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkareaGroupResponse"
                }
              }
            },
            "description" : "WorkareaGroup"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Facility Default Workarea Group",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/deny" : {
      "put" : {
        "operationId" : "facility_deny_facility",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Denied"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Deny facility with user or group",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/discard_schedules" : {
      "put" : {
        "description" : "Discard all TrackingPlans and Tasks in Facility",
        "operationId" : "facility_discard_schedules",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityResponse"
                }
              }
            },
            "description" : "Facility"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Discard schedule data",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/entity_parameters" : {
      "get" : {
        "operationId" : "Facility_get_entity_parameter",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterListResponse"
                }
              }
            },
            "description" : "EntityParameter list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Facility EntityParameter list",
        "tags" : [ "Facility" ]
      },
      "post" : {
        "operationId" : "facility_create_entity_parameter",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateEntityParameterRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterResponse"
                }
              }
            },
            "description" : "EntityParameter"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Facility EntityParameter",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/flush_siteinsights_report" : {
      "put" : {
        "description" : "Upload siteinsights report",
        "operationId" : "facility_flush_siteinsights_report",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityResponse"
                }
              }
            },
            "description" : "Facility"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/import_categories" : {
      "put" : {
        "description" : "Import Categories and phases from other facility",
        "operationId" : "facility_import_categories",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ImportCategoryRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Import Categories"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Import Categories and phases from other facility",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/invoke" : {
      "post" : {
        "operationId" : "facility_invoke_facility",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/InvokeFacilityRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityResponse"
                }
              }
            },
            "description" : "Facility"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Invoke Facility",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/last_task_updated_at" : {
      "get" : {
        "description" : "Get the latest updated at of tasks in the facility",
        "operationId" : "facility_get_last_task_updated_at",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/LastTaskUpdatedAtResponse"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/members" : {
      "get" : {
        "operationId" : "facility_get_members",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Memeber display option",
          "explode" : true,
          "in" : "query",
          "name" : "display_option",
          "required" : true,
          "schema" : {
            "enum" : [ "directly", "directly-flatten", "inherited", "inherited-flatten", "all" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "User ID list",
          "explode" : false,
          "in" : "query",
          "name" : "user_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "group_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "minimum permission",
          "explode" : true,
          "in" : "query",
          "name" : "min_permission",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get facility members",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/meta" : {
      "get" : {
        "operationId" : "facility_get_meta",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Facility Meta",
        "tags" : [ "Facility" ]
      },
      "put" : {
        "operationId" : "facility_update_meta",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Facility Meta",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "facility_get_meta_by_key",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Facility Meta by key",
        "tags" : [ "Facility" ]
      },
      "put" : {
        "operationId" : "facility_update_meta_by_key",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Facility Meta by key",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/progresses/bulk" : {
      "post" : {
        "operationId" : "progress_bulk_create",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateProgressBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create Progress",
        "tags" : [ "Progress" ]
      },
      "put" : {
        "operationId" : "progress_bulk_update",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateProgressBulkRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Progress bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete Progress",
        "tags" : [ "Progress" ]
      }
    },
    "/facilities/{key}/purge" : {
      "delete" : {
        "operationId" : "facility_purge_facility",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Facility",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/record_statuses/bulk" : {
      "post" : {
        "operationId" : "recordstatus_bulk_create",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateRecordStatusBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create RecordStatus",
        "tags" : [ "RecordStatus" ]
      },
      "put" : {
        "operationId" : "recordstatus_bulk_update",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateRecordStatusRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "RecordStatus bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete RecordStatus",
        "tags" : [ "RecordStatus" ]
      }
    },
    "/facilities/{key}/remove_bim_pack" : {
      "put" : {
        "operationId" : "facility_remove_bim_pack",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityResponse"
                }
              }
            },
            "description" : "Facility"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Remove bim_pack from Facility",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/resources" : {
      "get" : {
        "operationId" : "facility_get_resources",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceListResponse"
                }
              }
            },
            "description" : "Resource list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Facility Resources",
        "tags" : [ "Facility" ]
      },
      "post" : {
        "operationId" : "facility_create_resource",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateResourceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Facility Resource",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/resources/{kind}" : {
      "delete" : {
        "operationId" : "facility_delete_resource",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Facility Resource",
        "tags" : [ "Facility" ]
      },
      "get" : {
        "operationId" : "facility_get_resource",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Facility Resource",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/resources/{kind}/check_uploading" : {
      "put" : {
        "operationId" : "facility_check_resource_uploading",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Facility Resource uploading",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/resources/{kind}/download" : {
      "get" : {
        "description" : "Redirect to facility resource download link",
        "operationId" : "facility_download_resource",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Facility Resource",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/resources/{kind}/upload_url" : {
      "post" : {
        "operationId" : "facility_create_resource_upload_url",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Facility Resource upload url",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/review_members" : {
      "get" : {
        "operationId" : "facility_get_review_members",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get facility review members",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/share" : {
      "put" : {
        "operationId" : "facility_share_facility",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Share facility with user or group",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/site_insights" : {
      "get" : {
        "operationId" : "siteinsight_get_site_insights",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID list",
          "explode" : false,
          "in" : "query",
          "name" : "bim_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Sketch ID list",
          "explode" : false,
          "in" : "query",
          "name" : "sketch_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Progress ID list",
          "explode" : false,
          "in" : "query",
          "name" : "progress_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Category ID list",
          "explode" : false,
          "in" : "query",
          "name" : "category_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Status ID list",
          "explode" : false,
          "in" : "query",
          "name" : "status_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Texture ID list",
          "explode" : false,
          "in" : "query",
          "name" : "texture_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "name list",
          "explode" : false,
          "in" : "query",
          "name" : "name",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Progress Bim Object ID list",
          "explode" : false,
          "in" : "query",
          "name" : "bim_object_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Progress Bim External ID list",
          "explode" : false,
          "in" : "query",
          "name" : "bim_external_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workflow ID list",
          "explode" : false,
          "in" : "query",
          "name" : "workflow_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Vendor Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "vendor_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Room ID list",
          "explode" : false,
          "in" : "query",
          "name" : "room_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Activity String ID list",
          "explode" : false,
          "in" : "query",
          "name" : "activity_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Columns for Row Grouping",
          "explode" : false,
          "in" : "query",
          "name" : "row_group_columns",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Values for Row Grouping",
          "explode" : false,
          "in" : "query",
          "name" : "group_keys",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `to_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "from_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `from_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "to_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "RecordStatus Value",
          "explode" : true,
          "in" : "query",
          "name" : "record_status_value",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "CustomProperty Key",
          "explode" : true,
          "in" : "query",
          "name" : "custom_property_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteInsightCellListResponse"
                }
              }
            },
            "description" : "SiteInsightCell list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get siteInsights models with support for server-side row model, where response model can be different",
        "tags" : [ "SiteInsight" ]
      }
    },
    "/facilities/{key}/site_insights/cells" : {
      "get" : {
        "operationId" : "site_insight_get_cells",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID list",
          "explode" : false,
          "in" : "query",
          "name" : "bim_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Sketch ID list",
          "explode" : false,
          "in" : "query",
          "name" : "sketch_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Progress ID list",
          "explode" : false,
          "in" : "query",
          "name" : "progress_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Category ID list",
          "explode" : false,
          "in" : "query",
          "name" : "category_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workflow ID list",
          "explode" : false,
          "in" : "query",
          "name" : "workflow_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Status ID list",
          "explode" : false,
          "in" : "query",
          "name" : "status_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Texture ID list",
          "explode" : false,
          "in" : "query",
          "name" : "texture_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Activity String ID list",
          "explode" : false,
          "in" : "query",
          "name" : "activity_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `to_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "from_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `from_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "to_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "RecordStatus Value",
          "explode" : true,
          "in" : "query",
          "name" : "record_status_value",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "CustomProperty Key",
          "explode" : true,
          "in" : "query",
          "name" : "custom_property_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteInsightCellListResponse"
                }
              }
            },
            "description" : "SiteInsightCell list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get site insight cells which include Progress, RecordStatus, CustomProperty",
        "tags" : [ "SiteInsight" ]
      }
    },
    "/facilities/{key}/spacetimes" : {
      "get" : {
        "operationId" : "facility_get_spacetimes",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "UTC+0 based. Must be used together with `to_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "from_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `from_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "to_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "filter empty spacetime ( ex. extra_filter=exclude_empty_counts )",
          "explode" : true,
          "in" : "query",
          "name" : "extra_filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpacetimeListResponse"
                }
              }
            },
            "description" : "Spacetime list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Facility spacetime list",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/trash" : {
      "put" : {
        "operationId" : "facility_trash_facility",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash Facility",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/unarchive" : {
      "put" : {
        "description" : "Unarchive archived facility and return it.",
        "operationId" : "facility_unarchive_facility",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityResponse"
                }
              }
            },
            "description" : "Facility"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unarchive archived facility",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/unshare" : {
      "put" : {
        "operationId" : "facility_unshare_facility",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Unshared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unshare facility with user or group",
        "tags" : [ "Facility" ]
      }
    },
    "/facilities/{key}/untrash" : {
      "put" : {
        "description" : "Untrash trashed facility and return it.",
        "operationId" : "facility_untrash_facility",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Discarded"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash trashed facility",
        "tags" : [ "Facility" ]
      }
    },
    "/feeds" : {
      "get" : {
        "operationId" : "feed_get_feeds",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeedListResponse"
                }
              }
            },
            "description" : "Feed list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Feed list",
        "tags" : [ "Feed" ]
      }
    },
    "/fields" : {
      "get" : {
        "operationId" : "field_get_fields",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Annotation ID",
          "explode" : true,
          "in" : "query",
          "name" : "annotation_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FieldListResponse"
                }
              }
            },
            "description" : "Field list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Field list",
        "tags" : [ "Field" ]
      }
    },
    "/fields/{id}" : {
      "get" : {
        "operationId" : "field_get_field",
        "parameters" : [ {
          "description" : "Field ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FieldResponse"
                }
              }
            },
            "description" : "Field"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Field",
        "tags" : [ "Field" ]
      },
      "put" : {
        "operationId" : "field_update_field",
        "parameters" : [ {
          "description" : "Field ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateFieldRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FieldResponse"
                }
              }
            },
            "description" : "Field"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Field",
        "tags" : [ "Field" ]
      }
    },
    "/floorplan_sources" : {
      "get" : {
        "operationId" : "floorplansource_get_floorplan_sources",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanSourceListResponse"
                }
              }
            },
            "description" : "FloorplanSource list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "FloorplanSource list",
        "tags" : [ "FloorplanSource" ]
      },
      "post" : {
        "operationId" : "floorplansource_create_floorplan_source",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateFloorplanSourceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanSourceResponse"
                }
              }
            },
            "description" : "FloorplanSource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create FloorplanSource",
        "tags" : [ "FloorplanSource" ]
      }
    },
    "/floorplan_sources/mock" : {
      "get" : {
        "operationId" : "floorplansource_mock_floorplan_sources",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanSourceListResponse"
                }
              }
            },
            "description" : "FloorplanSource list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "FloorplanSource mock list",
        "tags" : [ "FloorplanSource" ]
      }
    },
    "/floorplan_sources/{id}" : {
      "delete" : {
        "operationId" : "floorplansource_delete_floorplan_source",
        "parameters" : [ {
          "description" : "FloorplanSource ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete FloorplanSource",
        "tags" : [ "FloorplanSource" ]
      },
      "get" : {
        "operationId" : "floorplansource_get_floorplan_source",
        "parameters" : [ {
          "description" : "FloorplanSource ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanSourceResponse"
                }
              }
            },
            "description" : "FloorplanSource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get FloorplanSource",
        "tags" : [ "FloorplanSource" ]
      },
      "put" : {
        "operationId" : "floorplansource_update_floorplan_source",
        "parameters" : [ {
          "description" : "FloorplanSource ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateFloorplanSourceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanSourceResponse"
                }
              }
            },
            "description" : "FloorplanSource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update FloorplanSource",
        "tags" : [ "FloorplanSource" ]
      }
    },
    "/floorplan_sources/{id}/check_uploading" : {
      "put" : {
        "operationId" : "floorplansource_check_uploading",
        "parameters" : [ {
          "description" : "FloorplanSource ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanSourceResponse"
                }
              }
            },
            "description" : "FloorplanSource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check floorplan source uploading",
        "tags" : [ "FloorplanSource" ]
      }
    },
    "/floorplan_sources/{id}/download" : {
      "get" : {
        "description" : "Redirect to floorplan source download link",
        "operationId" : "floorplansource_download_floorplan_source",
        "parameters" : [ {
          "description" : "FloorplanSource ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirects FloorplanSource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download floorplan source",
        "tags" : [ "FloorplanSource" ]
      }
    },
    "/floorplan_sources/{id}/upload_url" : {
      "post" : {
        "operationId" : "floorplansource_create_upload_url",
        "parameters" : [ {
          "description" : "FloorplanSource ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanSourceResponse"
                }
              }
            },
            "description" : "FloorplanSource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create floorplan source upload url",
        "tags" : [ "FloorplanSource" ]
      }
    },
    "/floorplans" : {
      "get" : {
        "operationId" : "floorplan_get_floorplans",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Floorplan Types",
          "explode" : false,
          "in" : "query",
          "name" : "floorplan_types",
          "required" : false,
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/FloorplanType"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID list",
          "explode" : false,
          "in" : "query",
          "name" : "bim_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\narchived: 아카이브 된 상태\nvisible: untrashed + archived\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent", "archived", "visible" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanListResponse"
                }
              }
            },
            "description" : "Floorplan list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Floorplan list",
        "tags" : [ "Floorplan" ]
      },
      "post" : {
        "operationId" : "floorplan_create_floorplan",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateFloorplanRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanResponse"
                }
              }
            },
            "description" : "Floorplan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Floorplan",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/mock" : {
      "get" : {
        "operationId" : "floorplan_mock_floorplans",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanListResponse"
                }
              }
            },
            "description" : "Floorplan list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Floorplan mock list",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{floorplan_id}/references" : {
      "get" : {
        "operationId" : "floorplan_get_references",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "floorplan_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceListResponse"
                }
              }
            },
            "description" : "Reference list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Reference list",
        "tags" : [ "Floorplan" ]
      },
      "post" : {
        "operationId" : "floorplan_create_reference",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "floorplan_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateFloorplanReferenceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceResponse"
                }
              }
            },
            "description" : "Reference"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Reference",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{floorplan_id}/references/{id}" : {
      "get" : {
        "operationId" : "floorplan_get_reference",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "floorplan_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceResponse"
                }
              }
            },
            "description" : "Reference"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Reference",
        "tags" : [ "Floorplan" ]
      },
      "put" : {
        "operationId" : "floorplan_update_reference",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "floorplan_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateReferenceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceResponse"
                }
              }
            },
            "description" : "Reference"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Reference",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{floorplan_id}/references/{id}/meta" : {
      "get" : {
        "operationId" : "floorplan_get_reference_meta",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "floorplan_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Reference Meta",
        "tags" : [ "Floorplan" ]
      },
      "put" : {
        "operationId" : "floorplan_update_reference_meta",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "floorplan_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Reference Meta",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{floorplan_id}/references/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "floorplan_get_reference_meta_by_key",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "floorplan_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Reference Meta by key",
        "tags" : [ "Floorplan" ]
      },
      "put" : {
        "operationId" : "floorplan_update_reference_meta_by_key",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "floorplan_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Reference Meta by key",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}" : {
      "delete" : {
        "operationId" : "floorplan_delete_floorplan",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Floorplan",
        "tags" : [ "Floorplan" ]
      },
      "get" : {
        "operationId" : "floorplan_get_floorplan",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanResponse"
                }
              }
            },
            "description" : "Floorplan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Floorplan",
        "tags" : [ "Floorplan" ]
      },
      "put" : {
        "operationId" : "floorplan_update_floorplan",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateFloorplanRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanResponse"
                }
              }
            },
            "description" : "Floorplan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Floorplan",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}/archive" : {
      "put" : {
        "operationId" : "floorplan_archive_floorplan",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanResponse"
                }
              }
            },
            "description" : "Floorplan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Archive Floorplan",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}/availability_state" : {
      "put" : {
        "operationId" : "floorplan_update_availability_state",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAvailabilityStateRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanResponse"
                }
              }
            },
            "description" : "Floorplan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Floorplan Availability_state",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}/check_cover_uploading" : {
      "put" : {
        "operationId" : "floorplan_check_cover_uploading",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanResponse"
                }
              }
            },
            "description" : "Floorplan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check floorplan cover uploading",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}/check_tile_uploading" : {
      "put" : {
        "operationId" : "floorplan_check_tile_uploading",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanResponse"
                }
              }
            },
            "description" : "Floorplan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check floorplan uploading",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}/check_uploading" : {
      "put" : {
        "operationId" : "floorplan_check_uploading",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanResponse"
                }
              }
            },
            "description" : "Floorplan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check floorplan uploading",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}/clear_fields" : {
      "put" : {
        "operationId" : "floorplan_clear_fields",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "fields list to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}/complete_creation" : {
      "put" : {
        "operationId" : "floorplan_complete_floorplan_creation",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanResponse"
                }
              }
            },
            "description" : "Floorplan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Complete Floorplan Creation",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}/cover_upload_url" : {
      "post" : {
        "operationId" : "floorplan_create_cover_upload_url",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanResponse"
                }
              }
            },
            "description" : "Floorplan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create floorplan cover upload url",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}/download" : {
      "get" : {
        "description" : "Redirect to floorplan download link",
        "operationId" : "floorplan_download_floorplan",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirects Floorplan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download floorplan",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}/linked_captures" : {
      "get" : {
        "operationId" : "floorplan_get_linked_captures",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureListResponse"
                }
              }
            },
            "description" : "Capture list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Linked captures with a Floorplan",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}/meta" : {
      "get" : {
        "operationId" : "floorplan_get_meta",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Floorplan Meta",
        "tags" : [ "Floorplan" ]
      },
      "put" : {
        "operationId" : "floorplan_update_meta",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Floorplan Meta",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "floorplan_get_meta_by_key",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Floorplan Meta by key",
        "tags" : [ "Floorplan" ]
      },
      "put" : {
        "operationId" : "floorplan_update_meta_by_key",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Floorplan Meta",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}/publish" : {
      "delete" : {
        "operationId" : "floorplan_unpublish_floorplan",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanResponse"
                }
              }
            },
            "description" : "Floorplan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish Floorplan",
        "tags" : [ "Floorplan" ]
      },
      "put" : {
        "operationId" : "floorplan_publish_floorplan",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanResponse"
                }
              }
            },
            "description" : "Floorplan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish Floorplan",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}/tile_upload_credentials" : {
      "post" : {
        "description" : "Tile 업로드를 위한 Credential을 생성",
        "operationId" : "floorplan_create_tile_upload_credentials",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Floorplan Tile Upload Credentials",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}/unarchive" : {
      "put" : {
        "description" : "Unarchive archived floorplan and return it.",
        "operationId" : "floorplan_unarchive_floorplan",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanResponse"
                }
              }
            },
            "description" : "Floorplan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unarchive archived floorplan",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}/upload_url" : {
      "post" : {
        "operationId" : "floorplan_create_upload_url",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanResponse"
                }
              }
            },
            "description" : "Floorplan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create floorplan upload url",
        "tags" : [ "Floorplan" ]
      }
    },
    "/floorplans/{id}/versions" : {
      "get" : {
        "operationId" : "floorplan_get_versions",
        "parameters" : [ {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanListResponse"
                }
              }
            },
            "description" : "Floorplan list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Floorplan version list",
        "tags" : [ "Floorplan" ]
      }
    },
    "/form_designs" : {
      "get" : {
        "operationId" : "formdesign_get_form_designs",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "AnnotationLayer ID",
          "explode" : true,
          "in" : "query",
          "name" : "annotation_layer_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FormDesignListResponse"
                }
              }
            },
            "description" : "FormDesign list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "FormDesign list",
        "tags" : [ "FormDesign" ]
      },
      "post" : {
        "operationId" : "formdesign_create_form_design",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateFormDesignRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FormDesignResponse"
                }
              }
            },
            "description" : "FormDesign"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create FormDesign",
        "tags" : [ "FormDesign" ]
      },
      "put" : {
        "operationId" : "formdesign_bulk_form_design",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkFormDesignRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk FormDesign",
        "tags" : [ "FormDesign" ]
      }
    },
    "/form_designs/bulk" : {
      "post" : {
        "operationId" : "formdesign_bulk_create",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateFormDesignBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create FormDesign",
        "tags" : [ "FormDesign" ]
      },
      "put" : {
        "operationId" : "formdesign_bulk_update",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateFormDesignBulkRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "FormDesign bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete FormDesign",
        "tags" : [ "FormDesign" ]
      }
    },
    "/form_designs/mock" : {
      "get" : {
        "operationId" : "formdesign_mock_form_designs",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FormDesignListResponse"
                }
              }
            },
            "description" : "FormDesign list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "FormDesign mock list",
        "tags" : [ "FormDesign" ]
      }
    },
    "/form_designs/{id}" : {
      "delete" : {
        "operationId" : "formdesign_delete_form_design",
        "parameters" : [ {
          "description" : "FormDesign ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete FormDesign",
        "tags" : [ "FormDesign" ]
      },
      "get" : {
        "operationId" : "formdesign_get_form_design",
        "parameters" : [ {
          "description" : "FormDesign ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FormDesignResponse"
                }
              }
            },
            "description" : "FormDesign"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get FormDesign",
        "tags" : [ "FormDesign" ]
      },
      "put" : {
        "operationId" : "formdesign_update_form_design",
        "parameters" : [ {
          "description" : "FormDesign ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateFormDesignRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FormDesignResponse"
                }
              }
            },
            "description" : "FormDesign"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update FormDesign",
        "tags" : [ "FormDesign" ]
      }
    },
    "/form_designs/{id}/annotation_layers" : {
      "get" : {
        "operationId" : "formdesign_get_annotation_layers",
        "parameters" : [ {
          "description" : "FormDesign ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerListResponse"
                }
              }
            },
            "description" : "AnnotationLayer list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "AnnotationLayer list with FormDesign",
        "tags" : [ "FormDesign" ]
      }
    },
    "/form_designs/{id}/annotations" : {
      "get" : {
        "operationId" : "formdesign_get_annotations",
        "parameters" : [ {
          "description" : "FormDesign ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationListResponse"
                }
              }
            },
            "description" : "Annotation list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Annotation list with FormDesign",
        "tags" : [ "FormDesign" ]
      }
    },
    "/form_designs/{id}/archive" : {
      "put" : {
        "operationId" : "formdesign_archive_formdesign",
        "parameters" : [ {
          "description" : "FormDesign ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Archived"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Archive FormDesign",
        "tags" : [ "FormDesign" ]
      }
    },
    "/form_designs/{id}/meta" : {
      "get" : {
        "operationId" : "formdesign_get_meta",
        "parameters" : [ {
          "description" : "FormDesign ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get FormDesign Meta",
        "tags" : [ "FormDesign" ]
      },
      "put" : {
        "operationId" : "formdesign_update_meta",
        "parameters" : [ {
          "description" : "FormDesign ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update FormDesign Meta",
        "tags" : [ "FormDesign" ]
      }
    },
    "/form_designs/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "formdesign_get_meta_by_key",
        "parameters" : [ {
          "description" : "FormDesign ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get FormDesign Meta by key",
        "tags" : [ "FormDesign" ]
      },
      "put" : {
        "operationId" : "formdesign_update_meta_by_key",
        "parameters" : [ {
          "description" : "FormDesign ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update FormDesign Meta by key",
        "tags" : [ "FormDesign" ]
      }
    },
    "/form_designs/{id}/unarchive" : {
      "put" : {
        "description" : "Unarchive archived FormDesign and return it.",
        "operationId" : "formdesign_unarchive_formdesign",
        "parameters" : [ {
          "description" : "FormDesign ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FormDesignResponse"
                }
              }
            },
            "description" : "FormDesign"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unarchive archived FormDesign",
        "tags" : [ "FormDesign" ]
      }
    },
    "/form_fields" : {
      "get" : {
        "operationId" : "formfield_get_form_fields",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "FormDesign ID",
          "explode" : true,
          "in" : "query",
          "name" : "form_design_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FormFieldListResponse"
                }
              }
            },
            "description" : "FormField list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "FormField list",
        "tags" : [ "FormField" ]
      },
      "post" : {
        "operationId" : "formfield_create_form_field",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateFormFieldRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FormFieldResponse"
                }
              }
            },
            "description" : "FormField"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create FormField",
        "tags" : [ "FormField" ]
      },
      "put" : {
        "operationId" : "formfield_bulk_form_field",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkFormFieldRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk FormField",
        "tags" : [ "FormField" ]
      }
    },
    "/form_fields/bulk" : {
      "post" : {
        "operationId" : "formfield_bulk_create",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateFormFieldBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create FormField",
        "tags" : [ "FormField" ]
      },
      "put" : {
        "operationId" : "formfield_bulk_update",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateFormFieldBulkRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "FormField bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete FormField",
        "tags" : [ "FormField" ]
      }
    },
    "/form_fields/{id}" : {
      "delete" : {
        "operationId" : "formfield_delete_form_field",
        "parameters" : [ {
          "description" : "FormField ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete FormField",
        "tags" : [ "FormField" ]
      },
      "get" : {
        "operationId" : "formfield_get_form_field",
        "parameters" : [ {
          "description" : "FormField ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FormFieldResponse"
                }
              }
            },
            "description" : "FormField"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get FormField",
        "tags" : [ "FormField" ]
      },
      "put" : {
        "operationId" : "formfield_update_form_field",
        "parameters" : [ {
          "description" : "FormField ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateFormFieldRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FormFieldResponse"
                }
              }
            },
            "description" : "FormField"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update FormField",
        "tags" : [ "FormField" ]
      }
    },
    "/form_fields/{id}/meta" : {
      "get" : {
        "operationId" : "formfield_get_meta",
        "parameters" : [ {
          "description" : "FormField ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get FormField Meta",
        "tags" : [ "FormField" ]
      },
      "put" : {
        "operationId" : "formfield_update_meta",
        "parameters" : [ {
          "description" : "FormField ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update FormField Meta",
        "tags" : [ "FormField" ]
      }
    },
    "/form_fields/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "formfield_get_meta_by_key",
        "parameters" : [ {
          "description" : "FormField ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get FormField Meta by key",
        "tags" : [ "FormField" ]
      },
      "put" : {
        "operationId" : "formfield_update_meta_by_key",
        "parameters" : [ {
          "description" : "FormField ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update FormField Meta",
        "tags" : [ "FormField" ]
      }
    },
    "/form_fields/{id}/position" : {
      "put" : {
        "operationId" : "formfield_update_position",
        "parameters" : [ {
          "description" : "FormField ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePositionRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FormFieldResponse"
                }
              }
            },
            "description" : "FormField"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update FormField Position",
        "tags" : [ "FormField" ]
      }
    },
    "/groups" : {
      "get" : {
        "operationId" : "group_get_groups",
        "parameters" : [ {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupListResponse"
                }
              }
            },
            "description" : "Group list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Group list of current team",
        "tags" : [ "Group" ]
      },
      "post" : {
        "operationId" : "group_create_group",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateGroupRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupResponse"
                }
              }
            },
            "description" : "Group"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Group",
        "tags" : [ "Group" ]
      }
    },
    "/groups/{id}" : {
      "delete" : {
        "description" : "Group을 삭제한다. 시스템 그룹은 삭제할 수 없으며 `normal` 타입의 그룹만 삭제가 가능하다.",
        "operationId" : "group_delete_group",
        "parameters" : [ {
          "description" : "Group ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Group",
        "tags" : [ "Group" ]
      },
      "get" : {
        "operationId" : "group_get_group",
        "parameters" : [ {
          "description" : "Group ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupResponse"
                }
              }
            },
            "description" : "Group"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Group",
        "tags" : [ "Group" ]
      },
      "put" : {
        "operationId" : "group_update_group",
        "parameters" : [ {
          "description" : "Group ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateGroupRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupResponse"
                }
              }
            },
            "description" : "Group"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Group",
        "tags" : [ "Group" ]
      }
    },
    "/groups/{id}/add_users" : {
      "put" : {
        "operationId" : "group_add_users",
        "parameters" : [ {
          "description" : "Group ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/AddUsersGroupRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupResponse"
                }
              }
            },
            "description" : "Group"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Add users into group",
        "tags" : [ "Group" ]
      }
    },
    "/groups/{id}/add_whitelist" : {
      "put" : {
        "operationId" : "group_add_whitelist",
        "parameters" : [ {
          "description" : "Group ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateGroupWhitelistRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailDomainListResponse"
                }
              }
            },
            "description" : "Email domain list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Add email domain into group whitelist",
        "tags" : [ "Group" ]
      }
    },
    "/groups/{id}/permitted_reviews" : {
      "get" : {
        "operationId" : "group_get_permitted_reviews",
        "parameters" : [ {
          "description" : "Group ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Workspace ID",
          "explode" : true,
          "in" : "query",
          "name" : "workspace_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Team ID",
          "explode" : true,
          "in" : "query",
          "name" : "team_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewListResponse"
                }
              }
            },
            "description" : "Review list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "permittted review list by group",
        "tags" : [ "Group" ]
      }
    },
    "/groups/{id}/remove_users" : {
      "put" : {
        "operationId" : "group_remove_users",
        "parameters" : [ {
          "description" : "Group ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/RemoveUsersGroupRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupResponse"
                }
              }
            },
            "description" : "Group"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Remove users from group",
        "tags" : [ "Group" ]
      }
    },
    "/groups/{id}/remove_whitelist" : {
      "put" : {
        "operationId" : "group_remove_whitelist",
        "parameters" : [ {
          "description" : "Group ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateGroupWhitelistRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailDomainListResponse"
                }
              }
            },
            "description" : "Email domain list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Remove email domain from group whitelist",
        "tags" : [ "Group" ]
      }
    },
    "/groups/{id}/users" : {
      "get" : {
        "operationId" : "group_get_users",
        "parameters" : [ {
          "description" : "Group ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserListResponse"
                }
              }
            },
            "description" : "User list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get users of group",
        "tags" : [ "Group" ]
      }
    },
    "/groups/{id}/whitelist" : {
      "get" : {
        "description" : "Whitelist에 포함된 email domain을 가진 사람만 self-signup 가능.",
        "operationId" : "group_get_whitelist",
        "parameters" : [ {
          "description" : "Group ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailDomainListResponse"
                }
              }
            },
            "description" : "Email domain list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get whitelist of group",
        "tags" : [ "Group" ]
      }
    },
    "/integrations/mock" : {
      "get" : {
        "operationId" : "integration_mock_integrations",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationListResponse"
                }
              }
            },
            "description" : "Integration list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Integration mock list",
        "tags" : [ "Integration" ]
      }
    },
    "/issue_types" : {
      "get" : {
        "operationId" : "issue_types_get_issue_types",
        "parameters" : [ {
          "description" : "Category name of Issue Type",
          "explode" : true,
          "in" : "query",
          "name" : "category",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueTypeListResponse"
                }
              }
            },
            "description" : "Issue Type list response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "List issue types",
        "tags" : [ "IssueType" ]
      }
    },
    "/issues" : {
      "get" : {
        "operationId" : "issue_get_issues",
        "parameters" : [ {
          "description" : "Capture IDs",
          "explode" : false,
          "in" : "query",
          "name" : "capture_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueListResponse"
                }
              }
            },
            "description" : "Issue list response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "List issues",
        "tags" : [ "Issue" ]
      },
      "post" : {
        "operationId" : "issue_create_issue",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateIssueRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueResponse"
                }
              }
            },
            "description" : "Issue response"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create issue",
        "tags" : [ "Issue" ]
      }
    },
    "/jobs/{id}" : {
      "get" : {
        "operationId" : "job_get_job",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobResponse"
                }
              }
            },
            "description" : "Job"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get job",
        "tags" : [ "Job" ]
      },
      "put" : {
        "operationId" : "job_update_job",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateJobRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobResponse"
                }
              }
            },
            "description" : "Job"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update job",
        "tags" : [ "Job" ]
      }
    },
    "/jobs/{id}/actions/{action_name}/complete" : {
      "put" : {
        "operationId" : "job_complete_action",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Action Name",
          "explode" : false,
          "in" : "path",
          "name" : "action_name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobResponse"
                }
              }
            },
            "description" : "Job"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Complete action",
        "tags" : [ "Job" ]
      }
    },
    "/jobs/{id}/actions/{action_name}/error" : {
      "put" : {
        "operationId" : "job_error_action",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Action Name",
          "explode" : false,
          "in" : "path",
          "name" : "action_name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobResponse"
                }
              }
            },
            "description" : "Job"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Error action",
        "tags" : [ "Job" ]
      }
    },
    "/jobs/{id}/actions/{action_name}/running" : {
      "put" : {
        "operationId" : "job_running_action",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Action Name",
          "explode" : false,
          "in" : "path",
          "name" : "action_name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobResponse"
                }
              }
            },
            "description" : "Job"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Running action",
        "tags" : [ "Job" ]
      }
    },
    "/levels" : {
      "get" : {
        "operationId" : "level_get_levels",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelListResponse"
                }
              }
            },
            "description" : "Level list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Level list",
        "tags" : [ "Level" ]
      },
      "post" : {
        "operationId" : "level_create_level",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateLevelRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelResponse"
                }
              }
            },
            "description" : "Level"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Level",
        "tags" : [ "Level" ]
      }
    },
    "/levels/mock" : {
      "get" : {
        "operationId" : "level_mock_levels",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelListResponse"
                }
              }
            },
            "description" : "Level list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Level mock list",
        "tags" : [ "Level" ]
      }
    },
    "/levels/{id}" : {
      "get" : {
        "operationId" : "level_get_level",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelResponse"
                }
              }
            },
            "description" : "Level"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Level",
        "tags" : [ "Level" ]
      },
      "put" : {
        "operationId" : "level_update_level",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateLevelRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelResponse"
                }
              }
            },
            "description" : "Level"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Level",
        "tags" : [ "Level" ]
      }
    },
    "/levels/{id}/availability_state" : {
      "put" : {
        "operationId" : "level_update_availability_state",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAvailabilityStateRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelResponse"
                }
              }
            },
            "description" : "Level"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Level Availability_state",
        "tags" : [ "Level" ]
      }
    },
    "/levels/{id}/clear_fields" : {
      "put" : {
        "operationId" : "level_clear_fields",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Level fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "default_floorplan" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear level's fields",
        "tags" : [ "Level" ]
      }
    },
    "/levels/{id}/default_workarea" : {
      "get" : {
        "operationId" : "level_get_level_default_workarea",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkareaResponse"
                }
              }
            },
            "description" : "Workarea"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Level Default Workarea",
        "tags" : [ "Level" ]
      }
    },
    "/levels/{id}/publish" : {
      "delete" : {
        "operationId" : "level_unpublish_level",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelResponse"
                }
              }
            },
            "description" : "Level"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish Levels",
        "tags" : [ "Level" ]
      },
      "put" : {
        "operationId" : "level_publish_level",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelResponse"
                }
              }
            },
            "description" : "Level"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish Levels",
        "tags" : [ "Level" ]
      }
    },
    "/levels/{id}/purge" : {
      "delete" : {
        "operationId" : "level_purge_level",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Level",
        "tags" : [ "Level" ]
      }
    },
    "/levels/{id}/trash" : {
      "put" : {
        "operationId" : "level_trash_level",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash Level",
        "tags" : [ "Level" ]
      }
    },
    "/levels/{id}/untrash" : {
      "put" : {
        "description" : "Untrash trashed level and return it.",
        "operationId" : "level_untrash_level",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelResponse"
                }
              }
            },
            "description" : "Level"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash trashed level",
        "tags" : [ "Level" ]
      }
    },
    "/levels/{id}/voxels" : {
      "get" : {
        "description" : "Redirect to merged voxels csv file link",
        "operationId" : "level_get_voxels",
        "parameters" : [ {
          "description" : "Level ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Record ID",
          "explode" : true,
          "in" : "query",
          "name" : "record_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "302" : {
            "content" : {
              "text/csv" : { }
            },
            "description" : "Redirect to voxel download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get csv File of Merged Voxels",
        "tags" : [ "Level" ]
      }
    },
    "/links" : {
      "post" : {
        "operationId" : "link_create_link",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateLinkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkResponse"
                }
              }
            },
            "description" : "Link"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Shorten URL",
        "tags" : [ "Link" ]
      }
    },
    "/me" : {
      "get" : {
        "operationId" : "me_get_me",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            },
            "description" : "User"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get my information",
        "tags" : [ "Me" ]
      },
      "put" : {
        "operationId" : "me_update_me",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCurrentUserRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            },
            "description" : "User"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update My Info",
        "tags" : [ "Me" ]
      }
    },
    "/me/clear_fields" : {
      "put" : {
        "operationId" : "me_clear_fields",
        "parameters" : [ {
          "description" : "Usaer fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "avatar" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Me" ]
      }
    },
    "/me/fcm_devices" : {
      "get" : {
        "operationId" : "me_get_fcm_devices",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FcmDeviceListResponse"
                }
              }
            },
            "description" : "FCM Device List"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Retrieve Firebase Cloud Messaging IDs",
        "tags" : [ "Me" ]
      },
      "post" : {
        "operationId" : "me_create_fcm_device",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateFcmDeviceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FcmDeviceResponse"
                }
              }
            },
            "description" : "FCM Device"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Regist Firebase Cloud Messaging registration ID",
        "tags" : [ "Me" ]
      }
    },
    "/me/fcm_devices/{id}" : {
      "delete" : {
        "operationId" : "me_delete_fcm_device",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "FcmDevice ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateFcmDeviceRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Firebase Cloud Messaging registration ID",
        "tags" : [ "Me" ]
      }
    },
    "/me/firebase_token" : {
      "post" : {
        "operationId" : "me_firebase_token",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthenticateResponse"
                }
              }
            },
            "description" : "Authentication"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Firebase custom token",
        "tags" : [ "Me" ]
      }
    },
    "/me/groups" : {
      "get" : {
        "description" : "현재 사용자가 속한 Group 목록 조회",
        "operationId" : "me_get_groups",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupListResponse"
                }
              }
            },
            "description" : "Group list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Group list by current user",
        "tags" : [ "Me" ]
      }
    },
    "/me/integrations" : {
      "get" : {
        "operationId" : "me_get_integrations",
        "parameters" : [ {
          "description" : "provider list",
          "explode" : false,
          "in" : "query",
          "name" : "providers",
          "required" : false,
          "schema" : {
            "items" : {
              "enum" : [ "bim360", "procore", "plangrid", "acc", "revizto" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "state list",
          "explode" : false,
          "in" : "query",
          "name" : "states",
          "required" : false,
          "schema" : {
            "items" : {
              "enum" : [ "created", "active" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationListResponse"
                }
              }
            },
            "description" : "Integration list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Integration list",
        "tags" : [ "Me" ]
      },
      "post" : {
        "operationId" : "me_create_integration",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateIntegrationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationResponse"
                }
              }
            },
            "description" : "Integration information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create integration",
        "tags" : [ "Me" ]
      }
    },
    "/me/integrations/{provider}" : {
      "delete" : {
        "operationId" : "me_delete_integration",
        "parameters" : [ {
          "description" : "Integration provider code",
          "explode" : false,
          "in" : "path",
          "name" : "provider",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Integration deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete (unlink) integration",
        "tags" : [ "Me" ]
      },
      "put" : {
        "operationId" : "me_update_integration",
        "parameters" : [ {
          "description" : "Integration provider code",
          "explode" : false,
          "in" : "path",
          "name" : "provider",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateIntegrationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationResponse"
                }
              }
            },
            "description" : "Integration information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update integration",
        "tags" : [ "Me" ]
      }
    },
    "/me/integrations/{provider}/access_token" : {
      "post" : {
        "operationId" : "me_create_integration_access_token",
        "parameters" : [ {
          "description" : "Integration provider code",
          "explode" : false,
          "in" : "path",
          "name" : "provider",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccessTokenResponse"
                }
              }
            },
            "description" : "Integration access token"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create integration access token",
        "tags" : [ "Me" ]
      }
    },
    "/me/onboards" : {
      "get" : {
        "description" : "사용자가 완료하지 않은 Onboard 목록만 조회",
        "operationId" : "me_get_onboards",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Onboard group name",
          "explode" : true,
          "in" : "query",
          "name" : "group",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OnboardListResponse"
                }
              }
            },
            "description" : "Onboard list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Onboard list",
        "tags" : [ "Me" ]
      }
    },
    "/me/onboards/reset" : {
      "put" : {
        "operationId" : "me_reset_onboard_completion",
        "responses" : {
          "200" : {
            "description" : "Onboard reset"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Reset all onboard completions",
        "tags" : [ "Me" ]
      }
    },
    "/me/onboards/{key}/completion" : {
      "post" : {
        "operationId" : "me_complete_onboard",
        "parameters" : [ {
          "description" : "Onboard ID",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OnboardCompletionResponse"
                }
              }
            },
            "description" : "Onboard list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Entity not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Complete onboard",
        "tags" : [ "Me" ]
      }
    },
    "/me/preferences" : {
      "get" : {
        "operationId" : "me_get_preferences",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPreferenceListResponse"
                }
              }
            },
            "description" : "User preference list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Preference list",
        "tags" : [ "Me" ]
      }
    },
    "/me/preferences/{name}" : {
      "put" : {
        "operationId" : "me_update_preference",
        "parameters" : [ {
          "description" : "preference name",
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "enum" : [ "annotation_member_assigned", "annotation_new_comment", "annotation_status_change", "facility_new_project", "record_preview_ready", "record_processing_completed", "record_waiting_for_panos" ],
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateUserPreferenceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPreferenceResponse"
                }
              }
            },
            "description" : "User preference"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update preference",
        "tags" : [ "Me" ]
      }
    },
    "/me/refresh_api_token" : {
      "put" : {
        "operationId" : "me_refresh_api_token",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            },
            "description" : "User"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Refresh API Token",
        "tags" : [ "Me" ]
      }
    },
    "/meshes" : {
      "get" : {
        "operationId" : "mesh_get_meshes",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Record ID",
          "explode" : true,
          "in" : "query",
          "name" : "record_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshListResponse"
                }
              }
            },
            "description" : "Mesh list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Mesh list",
        "tags" : [ "Mesh" ]
      },
      "post" : {
        "operationId" : "mesh_create_mesh",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateMeshRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Mesh",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/mock" : {
      "get" : {
        "operationId" : "mesh_mock_meshes",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshListResponse"
                }
              }
            },
            "description" : "Mesh list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Mesh mock list",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}" : {
      "get" : {
        "operationId" : "mesh_get_mesh",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Mesh",
        "tags" : [ "Mesh" ]
      },
      "put" : {
        "operationId" : "mesh_update_mesh",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMeshRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Mesh",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/check_mesh_uploading" : {
      "put" : {
        "operationId" : "mesh_check_mesh_uploading",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check translated mesh uploading",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/check_resource_uploading" : {
      "put" : {
        "operationId" : "mesh_check_resource_uploading",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check mesh resource uploading",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/clear_fields" : {
      "put" : {
        "operationId" : "mesh_clear_fields",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Mesh fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/download" : {
      "get" : {
        "description" : "Redirect to mesh download link",
        "operationId" : "mesh_download_mesh",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to mesh download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Mesh download",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/mesh_upload_credentials" : {
      "post" : {
        "description" : "Mesh result 업로드를 위한 Credential을 생성",
        "operationId" : "mesh_create_mesh_upload_credentials",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Mesh Upload Credentials",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/meta" : {
      "get" : {
        "operationId" : "mesh_get_meta",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Mesh Meta",
        "tags" : [ "Mesh" ]
      },
      "put" : {
        "operationId" : "mesh_update_meta",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Mesh Meta",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "mesh_get_meta_by_key",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Mesh Meta by key",
        "tags" : [ "Mesh" ]
      },
      "put" : {
        "operationId" : "mesh_update_meta_by_key",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Mesh Meta",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/publish" : {
      "delete" : {
        "operationId" : "mesh_unpublish_mesh",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish Mesh",
        "tags" : [ "Mesh" ]
      },
      "put" : {
        "operationId" : "mesh_publish_mesh",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish Mesh",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/purge" : {
      "delete" : {
        "operationId" : "mesh_purge_mesh",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Mesh",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/trash" : {
      "put" : {
        "operationId" : "mesh_trash_mesh",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash Mesh",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/untrash" : {
      "put" : {
        "description" : "Untrash trashed mesh and return it.",
        "operationId" : "mesh_untrash_mesh",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash trashed mesh",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{id}/upload_url" : {
      "post" : {
        "description" : "Upload URL을 생성하면서 옵션을 추가할 수 있다.",
        "operationId" : "mesh_create_upload_url",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshResponse"
                }
              }
            },
            "description" : "Mesh"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Mesh upload url",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{mesh_id}/references" : {
      "get" : {
        "operationId" : "mesh_get_references",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "mesh_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceListResponse"
                }
              }
            },
            "description" : "Reference list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Reference list",
        "tags" : [ "Mesh" ]
      },
      "post" : {
        "operationId" : "mesh_create_reference",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "mesh_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateMeshReferenceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceResponse"
                }
              }
            },
            "description" : "Reference"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Reference",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{mesh_id}/references/{id}" : {
      "get" : {
        "operationId" : "mesh_get_reference",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "mesh_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceResponse"
                }
              }
            },
            "description" : "Reference"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Reference",
        "tags" : [ "Mesh" ]
      },
      "put" : {
        "operationId" : "mesh_update_reference",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "mesh_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateReferenceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceResponse"
                }
              }
            },
            "description" : "Reference"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Reference",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{mesh_id}/references/{id}/meta" : {
      "get" : {
        "operationId" : "mesh_get_reference_meta",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "mesh_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Reference Meta",
        "tags" : [ "Mesh" ]
      },
      "put" : {
        "operationId" : "mesh_update_reference_meta",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "mesh_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Reference Meta",
        "tags" : [ "Mesh" ]
      }
    },
    "/meshes/{mesh_id}/references/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "mesh_get_reference_meta_by_key",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "mesh_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Reference Meta by key",
        "tags" : [ "Mesh" ]
      },
      "put" : {
        "operationId" : "mesh_update_reference_meta_by_key",
        "parameters" : [ {
          "description" : "Mesh ID",
          "explode" : false,
          "in" : "path",
          "name" : "mesh_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Reference Meta by key",
        "tags" : [ "Mesh" ]
      }
    },
    "/metrics" : {
      "get" : {
        "operationId" : "metric_get_metrics",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricListResponse"
                }
              }
            },
            "description" : "Metric list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "metric list",
        "tags" : [ "Metric" ]
      },
      "post" : {
        "operationId" : "metric_create_metric",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateMetricRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricResponse"
                }
              }
            },
            "description" : "Metric"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Metric",
        "tags" : [ "Metric" ]
      }
    },
    "/metrics/{id}" : {
      "delete" : {
        "operationId" : "metric_delete_metric",
        "parameters" : [ {
          "description" : "Metric ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Metric",
        "tags" : [ "Metric" ]
      },
      "get" : {
        "operationId" : "metric_get_metric",
        "parameters" : [ {
          "description" : "Metric ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricResponse"
                }
              }
            },
            "description" : "Metric"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Metric",
        "tags" : [ "Metric" ]
      },
      "put" : {
        "operationId" : "metric_update_metric",
        "parameters" : [ {
          "description" : "Metric ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetricRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricResponse"
                }
              }
            },
            "description" : "Metric"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Metric",
        "tags" : [ "Metric" ]
      }
    },
    "/metrics/{id}/purge" : {
      "delete" : {
        "operationId" : "metric_purge_metric",
        "parameters" : [ {
          "description" : "Metric ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Metric",
        "tags" : [ "Metric" ]
      }
    },
    "/nodes" : {
      "get" : {
        "operationId" : "node_get_nodes",
        "parameters" : [ {
          "description" : "Capture ID",
          "explode" : true,
          "in" : "query",
          "name" : "capture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeListResponse"
                }
              }
            },
            "description" : "Node list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Node list",
        "tags" : [ "Node" ]
      },
      "post" : {
        "operationId" : "node_create_node",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateNodeRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeResponse"
                }
              }
            },
            "description" : "Node"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Node",
        "tags" : [ "Node" ]
      }
    },
    "/nodes/mock" : {
      "get" : {
        "operationId" : "node_mock_nodes",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeListResponse"
                }
              }
            },
            "description" : "Node list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Node mock list",
        "tags" : [ "Node" ]
      }
    },
    "/nodes/{id}" : {
      "delete" : {
        "operationId" : "node_delete_node",
        "parameters" : [ {
          "description" : "Node ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Node",
        "tags" : [ "Node" ]
      },
      "get" : {
        "operationId" : "node_get_node",
        "parameters" : [ {
          "description" : "Node ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeResponse"
                }
              }
            },
            "description" : "Node"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Node",
        "tags" : [ "Node" ]
      }
    },
    "/nodes/{id}/meta" : {
      "get" : {
        "operationId" : "node_get_meta",
        "parameters" : [ {
          "description" : "Node ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Node Meta",
        "tags" : [ "Node" ]
      },
      "put" : {
        "operationId" : "node_update_meta",
        "parameters" : [ {
          "description" : "Node ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Node Meta",
        "tags" : [ "Node" ]
      }
    },
    "/nodes/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "node_get_meta_by_key",
        "parameters" : [ {
          "description" : "Node ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Node Meta by key",
        "tags" : [ "Node" ]
      },
      "put" : {
        "operationId" : "node_update_meta_by_key",
        "parameters" : [ {
          "description" : "Node ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Node Meta by key",
        "tags" : [ "Node" ]
      }
    },
    "/nodes/{id}/resources" : {
      "get" : {
        "operationId" : "node_get_resources",
        "parameters" : [ {
          "description" : "Node ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceListResponse"
                }
              }
            },
            "description" : "Resource list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Node Resources",
        "tags" : [ "Node" ]
      },
      "post" : {
        "operationId" : "node_create_resource",
        "parameters" : [ {
          "description" : "Node ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateResourceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Node Resource",
        "tags" : [ "Node" ]
      }
    },
    "/nodes/{id}/resources/{kind}" : {
      "delete" : {
        "operationId" : "node_delete_resource",
        "parameters" : [ {
          "description" : "Node ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Node Resource",
        "tags" : [ "Node" ]
      },
      "get" : {
        "operationId" : "node_get_resource",
        "parameters" : [ {
          "description" : "Node ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Node Resource",
        "tags" : [ "Node" ]
      }
    },
    "/nodes/{id}/resources/{kind}/check_uploading" : {
      "put" : {
        "operationId" : "node_check_resource_uploading",
        "parameters" : [ {
          "description" : "Node ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Node Resource uploading",
        "tags" : [ "Node" ]
      }
    },
    "/nodes/{id}/resources/{kind}/download" : {
      "get" : {
        "operationId" : "node_download_resource",
        "parameters" : [ {
          "description" : "Node ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to resource download URL"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Node Resource",
        "tags" : [ "Node" ]
      }
    },
    "/nodes/{id}/resources/{kind}/upload_url" : {
      "post" : {
        "operationId" : "node_create_resource_upload_url",
        "parameters" : [ {
          "description" : "Node ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Node Resource upload url",
        "tags" : [ "Node" ]
      }
    },
    "/panos" : {
      "get" : {
        "operationId" : "pano_get_panos",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Capture ID",
          "explode" : true,
          "in" : "query",
          "name" : "capture_id",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Pano IDs",
          "explode" : false,
          "in" : "query",
          "name" : "ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Revision Type",
          "explode" : true,
          "in" : "query",
          "name" : "revision_type",
          "required" : false,
          "schema" : {
            "enum" : [ "enhanced_image", "normal" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoListResponse"
                }
              }
            },
            "description" : "Pano list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano list",
        "tags" : [ "Pano" ]
      },
      "post" : {
        "operationId" : "pano_create_pano",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreatePanoRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Pano",
        "tags" : [ "Pano" ]
      },
      "put" : {
        "operationId" : "pano_bulk_pano",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkPanoRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Pano",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/bulk_update" : {
      "put" : {
        "operationId" : "pano_bulk_update",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkUpdatePanoRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Panos updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update Pano",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/mock" : {
      "get" : {
        "operationId" : "pano_mock_panos",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoListResponse"
                }
              }
            },
            "description" : "Pano list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano mock list",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/upload_candidates" : {
      "get" : {
        "operationId" : "pano_get_panos_to_upload",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workspace ID",
          "explode" : true,
          "in" : "query",
          "name" : "workspace_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoListResponse"
                }
              }
            },
            "description" : "Pano list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano upload candidates",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}" : {
      "delete" : {
        "operationId" : "pano_delete_pano",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Pano",
        "tags" : [ "Pano" ]
      },
      "get" : {
        "operationId" : "pano_get_pano",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Revision Type",
          "explode" : true,
          "in" : "query",
          "name" : "revision_type",
          "required" : false,
          "schema" : {
            "enum" : [ "enhanced_image", "normal" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pano",
        "tags" : [ "Pano" ]
      },
      "put" : {
        "operationId" : "pano_update_pano",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Revision Type",
          "explode" : true,
          "in" : "query",
          "name" : "revision_type",
          "required" : false,
          "schema" : {
            "enum" : [ "enhanced_image", "normal" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePanoRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Pano",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/actions/{action_name}/complete" : {
      "put" : {
        "operationId" : "pano_complete_action",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Action Name",
          "explode" : false,
          "in" : "path",
          "name" : "action_name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Complete action",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/actions/{action_name}/running" : {
      "put" : {
        "operationId" : "pano_running_action",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Action Name",
          "explode" : false,
          "in" : "path",
          "name" : "action_name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Running action",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/check_mask_uploading" : {
      "put" : {
        "operationId" : "pano_check_mask_uploading",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "mask Type",
          "explode" : true,
          "in" : "query",
          "name" : "mask_type",
          "required" : false,
          "schema" : {
            "enum" : [ "face", "body", "facebody", "custom" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MaskResponse"
                }
              }
            },
            "description" : "Mask"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check pano mask uploading",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/check_tile_uploading" : {
      "put" : {
        "operationId" : "pano_check_tile_uploading",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Revision Type",
          "explode" : true,
          "in" : "query",
          "name" : "revision_type",
          "required" : false,
          "schema" : {
            "enum" : [ "enhanced_image", "normal" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check pano uploading",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/check_uploading" : {
      "put" : {
        "operationId" : "pano_check_uploading",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check pano uploading",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/clear_fields" : {
      "put" : {
        "operationId" : "pano_clear_fields",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Pano fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail", "mask_id" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/download" : {
      "get" : {
        "description" : "Redirect to pano download link",
        "operationId" : "pano_download_pano",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to pano download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano download",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/entity_parameters" : {
      "get" : {
        "operationId" : "pano_get_entity_parameter",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterListResponse"
                }
              }
            },
            "description" : "EntityParameter list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano EntityParameter list",
        "tags" : [ "Pano" ]
      },
      "post" : {
        "operationId" : "pano_create_entity_parameter",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateEntityParameterRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterResponse"
                }
              }
            },
            "description" : "EntityParameter"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Pano EntityParameter",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/mask_upload_url" : {
      "post" : {
        "operationId" : "pano_create_mask_upload_url",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "mask Type",
          "explode" : true,
          "in" : "query",
          "name" : "mask_type",
          "required" : false,
          "schema" : {
            "enum" : [ "face", "body", "facebody", "custom" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MaskResponse"
                }
              }
            },
            "description" : "Mask"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano mask upload url",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/meta" : {
      "get" : {
        "operationId" : "pano_get_meta",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pano Meta",
        "tags" : [ "Pano" ]
      },
      "put" : {
        "operationId" : "pano_update_meta",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Pano Meta",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "pano_get_meta_by_key",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pano Meta by key",
        "tags" : [ "Pano" ]
      },
      "put" : {
        "operationId" : "pano_update_meta_by_key",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Pano Meta",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/publish" : {
      "delete" : {
        "operationId" : "pano_unpublish_pano",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish Pano",
        "tags" : [ "Pano" ]
      },
      "put" : {
        "operationId" : "pano_publish_pano",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish Pano",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/resources" : {
      "get" : {
        "operationId" : "pano_get_resources",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceListResponse"
                }
              }
            },
            "description" : "Resource list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pano Resources",
        "tags" : [ "Pano" ]
      },
      "post" : {
        "operationId" : "pano_create_resource",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateResourceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Pano Resource",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/resources/{kind}" : {
      "delete" : {
        "operationId" : "pano_delete_resource",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Pano Resource",
        "tags" : [ "Pano" ]
      },
      "get" : {
        "operationId" : "pano_get_resource",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pano Resource",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/resources/{kind}/check_uploading" : {
      "put" : {
        "operationId" : "pano_check_resource_uploading",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Pano Resource uploading",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/resources/{kind}/download" : {
      "get" : {
        "description" : "Redirect to pano resource download link",
        "operationId" : "pano_download_resource",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Pano Resource",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/resources/{kind}/upload_url" : {
      "post" : {
        "operationId" : "pano_create_resource_upload_url",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Pano Resource upload url",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/stitched" : {
      "put" : {
        "operationId" : "pano_update_pano_stitched",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePanoStitchRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update pano stitched",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/tile_upload_credentials" : {
      "post" : {
        "description" : "Tile 업로드를 위한 Credential을 생성",
        "operationId" : "pano_create_tile_upload_credentials",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano Tile Upload Credentials",
        "tags" : [ "Pano" ]
      }
    },
    "/panos/{id}/upload_url" : {
      "post" : {
        "description" : "Upload URL을 생성하면서 옵션을 추가할 수 있다.  merge_from: option_params 에 파노 ID를 입력하며, 입력된 파노가 현재 파노와 병합된다. 이 때, 현재 파노와 입력된 파노의 Resource는 현재 파노의 MultiResource가 되며, 각 master, slave 값을 갖는다. 두 파노의 버전이 1 이상이거나, 각 파노의 state가 resource_uploaded가 아니거나, 입력된 파노와 현재 파노의 캡쳐가 다르면 에러를 내려준다. 한 번 병합된 파노는 다시 분리할 수 없다. move_out_resource: 현재 파노의 Resource를 MultiResource로 이동시키며, 이 때 kind가 될 값을 option_params에서 입력받는다. 이후 이 파노의 새 Resource에 업로드할 수 있는 upload_url 을 제공한다.",
        "operationId" : "pano_create_upload_url",
        "parameters" : [ {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Revision Type",
          "explode" : true,
          "in" : "query",
          "name" : "revision_type",
          "required" : false,
          "schema" : {
            "enum" : [ "enhanced_image", "normal" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano upload url",
        "tags" : [ "Pano" ]
      }
    },
    "/phase_metrics" : {
      "get" : {
        "operationId" : "phasemetric_get_phase_metrics",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Phase ID",
          "explode" : true,
          "in" : "query",
          "name" : "phase_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Metric ID",
          "explode" : true,
          "in" : "query",
          "name" : "metric_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PhaseMetricListResponse"
                }
              }
            },
            "description" : "PhaseMetric List"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "PhaseMetric list",
        "tags" : [ "PhaseMetric" ]
      },
      "post" : {
        "operationId" : "phasemetric_create_phase_metric",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreatePhaseMetricRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PhaseMetricResponse"
                }
              }
            },
            "description" : "PhaseMetric"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create PhaseMetric",
        "tags" : [ "PhaseMetric" ]
      }
    },
    "/phase_metrics/{id}" : {
      "get" : {
        "operationId" : "phasemetric_get_phase_metric",
        "parameters" : [ {
          "description" : "PhaseMetric ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PhaseMetricResponse"
                }
              }
            },
            "description" : "PhaseMetric"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get PhaseMetric",
        "tags" : [ "PhaseMetric" ]
      },
      "put" : {
        "operationId" : "phasemetric_update_phase_metric",
        "parameters" : [ {
          "description" : "PhaseMetric ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePhaseMetricRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PhaseMetricResponse"
                }
              }
            },
            "description" : "PhaseMetric"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update PhaseMetric",
        "tags" : [ "PhaseMetric" ]
      }
    },
    "/phase_metrics/{id}/purge" : {
      "delete" : {
        "operationId" : "phasemetric_purge_phase_metric",
        "parameters" : [ {
          "description" : "PhaseMetric ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge PhaseMetric",
        "tags" : [ "PhaseMetric" ]
      }
    },
    "/phase_metrics/{id}/validate_formula" : {
      "put" : {
        "operationId" : "phasemetric_validate_formula",
        "parameters" : [ {
          "description" : "PhaseMetric ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Sample Size",
          "explode" : true,
          "in" : "query",
          "name" : "sample_size",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PhaseMetricFormulaValidationResponse"
                }
              }
            },
            "description" : "PhaseMetric Formula Validation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Validate formula of PhaseMetric",
        "tags" : [ "PhaseMetric" ]
      }
    },
    "/phases" : {
      "get" : {
        "operationId" : "phase_get_phases",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : true,
          "in" : "query",
          "name" : "workflow_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Workflow ID list",
          "explode" : false,
          "in" : "query",
          "name" : "workflow_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Category ID list",
          "explode" : false,
          "in" : "query",
          "name" : "category_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PhaseListResponse"
                }
              }
            },
            "description" : "Phase list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "phase list",
        "tags" : [ "Phase" ]
      },
      "post" : {
        "operationId" : "phase_create_phase",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreatePhaseRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PhaseResponse"
                }
              }
            },
            "description" : "Phase"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Phase",
        "tags" : [ "Phase" ]
      }
    },
    "/phases/{id}" : {
      "delete" : {
        "operationId" : "phase_delete_phase",
        "parameters" : [ {
          "description" : "Phase ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Phase",
        "tags" : [ "Phase" ]
      },
      "get" : {
        "operationId" : "phase_get_phase",
        "parameters" : [ {
          "description" : "Phase ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PhaseResponse"
                }
              }
            },
            "description" : "Phase"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Phase",
        "tags" : [ "Phase" ]
      },
      "put" : {
        "operationId" : "phase_update_phase",
        "parameters" : [ {
          "description" : "Phase ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePhaseRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PhaseResponse"
                }
              }
            },
            "description" : "Phase"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Phase",
        "tags" : [ "Phase" ]
      }
    },
    "/phases/{id}/position" : {
      "put" : {
        "operationId" : "phase_update_position",
        "parameters" : [ {
          "description" : "Phase ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePositionRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PhaseResponse"
                }
              }
            },
            "description" : "Phase"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Phase Position",
        "tags" : [ "Phase" ]
      }
    },
    "/pointclouds" : {
      "get" : {
        "operationId" : "pointcloud_get_pointclouds",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Pointcloud Type",
          "explode" : true,
          "in" : "query",
          "name" : "pointcloud_type",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/PointcloudType"
          },
          "style" : "form"
        }, {
          "description" : "Parent ID",
          "explode" : true,
          "in" : "query",
          "name" : "parent_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Parent IDs",
          "explode" : false,
          "in" : "query",
          "name" : "parent_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Record ID",
          "explode" : true,
          "in" : "query",
          "name" : "record_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Cluster ID",
          "explode" : true,
          "in" : "query",
          "name" : "cluster_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Capture ID",
          "explode" : true,
          "in" : "query",
          "name" : "capture_id",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudListResponse"
                }
              }
            },
            "description" : "Pointcloud list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pointcloud list",
        "tags" : [ "Pointcloud" ]
      },
      "post" : {
        "operationId" : "pointcloud_create_pointcloud",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreatePointcloudRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Pointcloud",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/mock" : {
      "get" : {
        "operationId" : "pointcloud_mock_pointclouds",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudListResponse"
                }
              }
            },
            "description" : "Pointcloud list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pointcloud mock list",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}" : {
      "get" : {
        "operationId" : "pointcloud_get_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pointcloud",
        "tags" : [ "Pointcloud" ]
      },
      "put" : {
        "operationId" : "pointcloud_update_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePointcloudRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Pointcloud",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/check_cpc_mesh_uploading" : {
      "put" : {
        "operationId" : "pointcloud_cpcmesh_check_uploading",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check pointcloud cpc mesh uploading",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/check_octree_uploading" : {
      "put" : {
        "operationId" : "pointcloud_octree_check_uploading",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check pointcloud octree uploading",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/check_uploading" : {
      "put" : {
        "operationId" : "pointcloud_check_uploading",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check pointcloud uploading",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/check_voxels_uploading" : {
      "put" : {
        "operationId" : "pointcloud_check_voxels_uploading",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/VoxelsResponse"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check pointcloud voxels uploading",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/clear_fields" : {
      "put" : {
        "operationId" : "pointcloud_clear_fields",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Pointcloud fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/cpc_mesh_upload_url" : {
      "post" : {
        "operationId" : "pointcloud_create_cpcmesh_upload_url",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pointcloud cpc mesh upload url",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/download" : {
      "get" : {
        "description" : "Redirect to pointcloud download link",
        "operationId" : "pointcloud_download_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to pointcloud download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pointcloud download",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/entity_parameters" : {
      "get" : {
        "operationId" : "pointcloud_get_entity_parameters",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterListResponse"
                }
              }
            },
            "description" : "EntityParameter list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pointcloud EntityParameter list",
        "tags" : [ "Pointcloud" ]
      },
      "post" : {
        "operationId" : "pointcloud_create_entity_parameter",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateEntityParameterRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterResponse"
                }
              }
            },
            "description" : "EntityParameter"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Pointcloud EntityParameter",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/invoke" : {
      "post" : {
        "operationId" : "pointcloud_invoke_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/InvokePointcloudRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Invoke Pointcloud",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/meta" : {
      "get" : {
        "operationId" : "pointcloud_get_meta",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pointcloud Meta",
        "tags" : [ "Pointcloud" ]
      },
      "put" : {
        "operationId" : "pointcloud_update_meta",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Pointcloud Meta",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "pointcloud_get_meta_by_key",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pointcloud Meta by key",
        "tags" : [ "Pointcloud" ]
      },
      "put" : {
        "operationId" : "pointcloud_update_meta_by_key",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Pointcloud Meta",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/octree_upload_url" : {
      "post" : {
        "operationId" : "pointcloud_create_octree_upload_url",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pointcloud octree upload url",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/potree_upload_credentials" : {
      "post" : {
        "description" : "Potree 업로드를 위한 Credential을 생성",
        "operationId" : "pointcloud_create_potree_upload_credentials",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pointcloud Potree Upload Credentials",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/publish" : {
      "delete" : {
        "operationId" : "pointcloud_unpublish_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish Pointcloud",
        "tags" : [ "Pointcloud" ]
      },
      "put" : {
        "operationId" : "pointcloud_publish_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish Pointcloud",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/purge" : {
      "delete" : {
        "operationId" : "pointcloud_purge_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Pointcloud",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/resources" : {
      "get" : {
        "operationId" : "pointcloud_get_resources",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceListResponse"
                }
              }
            },
            "description" : "Resource list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pointcloud Resources",
        "tags" : [ "Pointcloud" ]
      },
      "post" : {
        "operationId" : "pointcloud_create_resource",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreatePointcloudResourceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Pointcloud Resource",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/resources/{kind}" : {
      "delete" : {
        "operationId" : "pointcloud_delete_resource",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Pointcloud Resource",
        "tags" : [ "Pointcloud" ]
      },
      "get" : {
        "operationId" : "pointcloud_get_resource",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pointcloud Resource",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/resources/{kind}/check_uploading" : {
      "put" : {
        "operationId" : "pointcloud_check_resource_uploading",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Pointcloud Resource uploading",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/resources/{kind}/download" : {
      "get" : {
        "description" : "Redirect to pointcloud resource download link",
        "operationId" : "pointcloud_download_resource",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Pointcloud Resource",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/resources/{kind}/upload_url" : {
      "post" : {
        "operationId" : "pointcloud_create_resource_upload_url",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Pointcloud Resource upload url",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/trash" : {
      "put" : {
        "operationId" : "pointcloud_trash_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash Pointcloud",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/untrash" : {
      "put" : {
        "description" : "Untrash trashed pointcloud and return it.",
        "operationId" : "pointcloud_untrash_pointcloud",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash trashed pointcloud",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/upload_credentials" : {
      "post" : {
        "description" : "Pointcloud 업로드를 위한 Credential을 생성",
        "operationId" : "pointcloud_create_upload_credentials",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Pointcloud Upload Credentials",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/upload_url" : {
      "post" : {
        "description" : "Upload URL을 생성하면서 옵션을 추가할 수 있다.",
        "operationId" : "pointcloud_create_upload_url",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudResponse"
                }
              }
            },
            "description" : "Pointcloud"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pointcloud upload url",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/voxels" : {
      "get" : {
        "description" : "Get pointcloud voxels",
        "operationId" : "pointcloud_get_voxels",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/VoxelsResponse"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get pointcloud voxels",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/pointclouds/{id}/voxels_upload_credentials" : {
      "post" : {
        "description" : "Pointcloud voxels result 업로드를 위한 Credential을 생성",
        "operationId" : "pointcloud_create_voxels_upload_credentials",
        "parameters" : [ {
          "description" : "Pointcloud ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get pointcloud voxels upload credentials",
        "tags" : [ "Pointcloud" ]
      }
    },
    "/power_bi_reports" : {
      "get" : {
        "operationId" : "power_bi_report_get_report_lists",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PowerBiReportListResponse"
                }
              }
            },
            "description" : "Power BI Report List"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "get power bi report lists with team",
        "tags" : [ "PowerBiReport" ]
      }
    },
    "/power_bi_reports/{id}/access_token" : {
      "post" : {
        "operationId" : "power_bi_report_get_access_token",
        "parameters" : [ {
          "description" : "Power BI Report ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/PowerBiEmbeddedTokenResponse"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "get power bi report access token",
        "tags" : [ "PowerBiReport" ]
      }
    },
    "/progresses" : {
      "get" : {
        "operationId" : "progress_get_progresses",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Category ID",
          "explode" : true,
          "in" : "query",
          "name" : "category_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID",
          "explode" : true,
          "in" : "query",
          "name" : "bim_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Sketch ID",
          "explode" : true,
          "in" : "query",
          "name" : "sketch_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Aggregation",
          "explode" : true,
          "in" : "query",
          "name" : "aggs",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressListResponse"
                }
              }
            },
            "description" : "Progress list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "progress list",
        "tags" : [ "Progress" ]
      },
      "post" : {
        "operationId" : "progress_create_progress",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateProgressRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressResponse"
                }
              }
            },
            "description" : "Progress"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Progress",
        "tags" : [ "Progress" ]
      },
      "put" : {
        "operationId" : "progress_bulk_progress",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkProgressRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Progress",
        "tags" : [ "Progress" ]
      }
    },
    "/progresses/mock" : {
      "get" : {
        "operationId" : "progress_mock_progresses",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressListResponse"
                }
              }
            },
            "description" : "Progress list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "progress mock list",
        "tags" : [ "Progress" ]
      }
    },
    "/progresses/scroll" : {
      "get" : {
        "operationId" : "progress_scroll_progresses",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID",
          "explode" : true,
          "in" : "query",
          "name" : "bim_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Category ID",
          "explode" : true,
          "in" : "query",
          "name" : "category_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressListResponse"
                }
              }
            },
            "description" : "Progress list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "progress all list",
        "tags" : [ "Progress" ]
      }
    },
    "/progresses/{id}" : {
      "delete" : {
        "operationId" : "progress_delete_progress",
        "parameters" : [ {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Progress",
        "tags" : [ "Progress" ]
      },
      "get" : {
        "operationId" : "progress_get_progress",
        "parameters" : [ {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressResponse"
                }
              }
            },
            "description" : "Progress"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Progress",
        "tags" : [ "Progress" ]
      },
      "put" : {
        "operationId" : "progress_update_progress",
        "parameters" : [ {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateProgressRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressResponse"
                }
              }
            },
            "description" : "Progress"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Progress",
        "tags" : [ "Progress" ]
      }
    },
    "/progresses/{id}/meta" : {
      "get" : {
        "operationId" : "progress_get_meta",
        "parameters" : [ {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Progress Meta",
        "tags" : [ "Progress" ]
      },
      "put" : {
        "operationId" : "progress_update_meta",
        "parameters" : [ {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Progress Meta",
        "tags" : [ "Progress" ]
      }
    },
    "/progresses/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "progress_get_meta_by_key",
        "parameters" : [ {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Progress Meta by key",
        "tags" : [ "Progress" ]
      },
      "put" : {
        "operationId" : "progress_update_meta_by_key",
        "parameters" : [ {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Progress Meta",
        "tags" : [ "Progress" ]
      }
    },
    "/reality_captures" : {
      "get" : {
        "operationId" : "reality_capture_get_reality_captures",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Record ID",
          "explode" : true,
          "in" : "query",
          "name" : "record_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Cluster ID",
          "explode" : true,
          "in" : "query",
          "name" : "cluster_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Capture ID",
          "explode" : true,
          "in" : "query",
          "name" : "capture_id",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Pointcloud Type",
          "explode" : true,
          "in" : "query",
          "name" : "pointcloud_type",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/PointcloudType"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RealityCaptureListResponse"
                }
              }
            },
            "description" : "Mesh list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Reality Capture list",
        "tags" : [ "RealityCapture" ]
      }
    },
    "/record_statuses" : {
      "get" : {
        "operationId" : "recordstatus_get_record_statuses",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Progress ID list",
          "explode" : false,
          "in" : "query",
          "name" : "progress_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Status ID list",
          "explode" : false,
          "in" : "query",
          "name" : "status_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Aggregation",
          "explode" : true,
          "in" : "query",
          "name" : "aggs",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusListResponse"
                }
              }
            },
            "description" : "RecordStatus list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "record_status list",
        "tags" : [ "RecordStatus" ]
      },
      "post" : {
        "operationId" : "recordstatus_create_record_status",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateRecordStatusRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusResponse"
                }
              }
            },
            "description" : "RecordStatus"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create RecordStatus",
        "tags" : [ "RecordStatus" ]
      },
      "put" : {
        "operationId" : "recordstatus_bulk_record_status",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkRecordStatusRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk RecordStatus",
        "tags" : [ "RecordStatus" ]
      }
    },
    "/record_statuses/mock" : {
      "get" : {
        "operationId" : "recordstatus_mock_record_statuses",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusListResponse"
                }
              }
            },
            "description" : "RecordStatus list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "record_status mock list",
        "tags" : [ "RecordStatus" ]
      }
    },
    "/record_statuses/scroll" : {
      "get" : {
        "operationId" : "recordstatus_scroll_record_statuses",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Record ID",
          "explode" : true,
          "in" : "query",
          "name" : "record_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Status ID list",
          "explode" : false,
          "in" : "query",
          "name" : "status_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Progress ID list",
          "explode" : false,
          "in" : "query",
          "name" : "progress_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusListResponse"
                }
              }
            },
            "description" : "RecordStatus list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "record_status all list",
        "tags" : [ "RecordStatus" ]
      }
    },
    "/record_statuses/update_or_create" : {
      "post" : {
        "operationId" : "recordstatus_update_or_create",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusResponse"
                }
              }
            },
            "description" : "RecordStatus"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update if present, Create if not",
        "tags" : [ "RecordStatus" ]
      }
    },
    "/record_statuses/{id}" : {
      "delete" : {
        "operationId" : "recordstatus_delete_record_status",
        "parameters" : [ {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete RecordStatus",
        "tags" : [ "RecordStatus" ]
      },
      "get" : {
        "operationId" : "recordstatus_get_record_status",
        "parameters" : [ {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusResponse"
                }
              }
            },
            "description" : "RecordStatus"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get RecordStatus",
        "tags" : [ "RecordStatus" ]
      },
      "put" : {
        "operationId" : "recordstatus_update_record_status",
        "parameters" : [ {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateRecordStatusRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusResponse"
                }
              }
            },
            "description" : "RecordStatus"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update RecordStatus",
        "tags" : [ "RecordStatus" ]
      }
    },
    "/record_statuses/{id}/meta" : {
      "get" : {
        "operationId" : "recordstatus_get_meta",
        "parameters" : [ {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get RecordStatus Meta",
        "tags" : [ "RecordStatus" ]
      },
      "put" : {
        "operationId" : "recordstatus_update_meta",
        "parameters" : [ {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update RecordStatus Meta",
        "tags" : [ "RecordStatus" ]
      }
    },
    "/record_statuses/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "recordstatus_get_meta_by_key",
        "parameters" : [ {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get RecordStatus Meta by key",
        "tags" : [ "RecordStatus" ]
      },
      "put" : {
        "operationId" : "recordstatus_update_meta_by_key",
        "parameters" : [ {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update RecordStatus Meta",
        "tags" : [ "RecordStatus" ]
      }
    },
    "/records" : {
      "get" : {
        "description" : "`facility_key`가 있는 경우 해당 Facility에 포함된 Records 조회.",
        "operationId" : "record_get_records",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordListResponse"
                }
              }
            },
            "description" : "Record list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Record list",
        "tags" : [ "Record" ]
      },
      "post" : {
        "description" : "Create new Record for Facility. Record has specific date which called `captured_at`.",
        "operationId" : "record_create_record",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateRecordRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordResponse"
                }
              }
            },
            "description" : "Record"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Record",
        "tags" : [ "Record" ]
      }
    },
    "/records/mock" : {
      "get" : {
        "operationId" : "record_mock_records",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordListResponse"
                }
              }
            },
            "description" : "Record list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Record mock list",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}" : {
      "get" : {
        "operationId" : "record_get_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordResponse"
                }
              }
            },
            "description" : "Record"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Record",
        "tags" : [ "Record" ]
      },
      "put" : {
        "operationId" : "record_update_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateRecordRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordResponse"
                }
              }
            },
            "description" : "Record"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Record",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/clear_fields" : {
      "put" : {
        "operationId" : "record_clear_fields",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Record fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail", "note" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/deny" : {
      "put" : {
        "operationId" : "record_deny_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Denied"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Deny record with user or group",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/flush_geo_coordinate" : {
      "put" : {
        "operationId" : "record_flush_geo_coordinate",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordResponse"
                }
              }
            },
            "description" : "Record"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Flush geo_coordinate_url",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/flush_siteinsights_report" : {
      "put" : {
        "description" : "Upload siteinsights report",
        "operationId" : "record_flush_siteinsights_report",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordResponse"
                }
              }
            },
            "description" : "Record"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/invoke" : {
      "post" : {
        "description" : "invoke: https://cupixrnd.atlassian.net/browse/TSLA-1256",
        "operationId" : "record_invoke_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/InvokeRecordRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordResponse"
                }
              }
            },
            "description" : "Record"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Invoke Record",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/members" : {
      "get" : {
        "operationId" : "record_get_members",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Memeber display option",
          "explode" : true,
          "in" : "query",
          "name" : "display_option",
          "required" : true,
          "schema" : {
            "enum" : [ "directly", "directly-flatten", "inherited", "inherited-flatten", "all" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "User ID list",
          "explode" : false,
          "in" : "query",
          "name" : "user_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "group_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "minimum permission",
          "explode" : true,
          "in" : "query",
          "name" : "min_permission",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get record members",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/purge" : {
      "delete" : {
        "operationId" : "record_purge_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Record",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/refresh" : {
      "put" : {
        "operationId" : "record_refresh_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordResponse"
                }
              }
            },
            "description" : "Record"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Refresh Record",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/safe_trash" : {
      "put" : {
        "operationId" : "record_safe_trash",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/SafeTrashRecordRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Safe Trash Request Accepted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Move all areas to another record and trash itself",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/share" : {
      "put" : {
        "operationId" : "record_share_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Share record with user or group",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/trash" : {
      "put" : {
        "operationId" : "record_trash_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash Record",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/unshare" : {
      "put" : {
        "operationId" : "record_unshare_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Unshared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unshare record with user or group",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/untrash" : {
      "put" : {
        "description" : "Untrash trashed record and return it.",
        "operationId" : "record_untrash_record",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordResponse"
                }
              }
            },
            "description" : "Record"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash trashed record",
        "tags" : [ "Record" ]
      }
    },
    "/records/{id}/voxels" : {
      "get" : {
        "description" : "Redirect to merged voxels csv file link",
        "operationId" : "record_get_voxels",
        "parameters" : [ {
          "description" : "Record ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "302" : {
            "content" : {
              "text/csv" : { }
            },
            "description" : "Redirect to voxel download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get csv File of Merged Voxels",
        "tags" : [ "Record" ]
      }
    },
    "/references" : {
      "get" : {
        "operationId" : "reference_get_references",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Capture ID",
          "explode" : true,
          "in" : "query",
          "name" : "capture_id",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Capture IDs",
          "explode" : false,
          "in" : "query",
          "name" : "capture_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Pointcloud IDs",
          "explode" : false,
          "in" : "query",
          "name" : "pointcloud_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Mesh IDs",
          "explode" : false,
          "in" : "query",
          "name" : "mesh_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Floorplan IDs",
          "explode" : false,
          "in" : "query",
          "name" : "floorplan_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID list",
          "explode" : false,
          "in" : "query",
          "name" : "bim_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceListResponse"
                }
              }
            },
            "description" : "Reference list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Reference list",
        "tags" : [ "Reference" ]
      },
      "post" : {
        "operationId" : "reference_create_reference",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateReferenceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceResponse"
                }
              }
            },
            "description" : "Reference"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Reference",
        "tags" : [ "Reference" ]
      }
    },
    "/references/mock" : {
      "get" : {
        "operationId" : "reference_mock_references",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceListResponse"
                }
              }
            },
            "description" : "Reference list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Reference mock list",
        "tags" : [ "Reference" ]
      }
    },
    "/references/{id}" : {
      "delete" : {
        "operationId" : "reference_delete_reference",
        "parameters" : [ {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Reference",
        "tags" : [ "Reference" ]
      },
      "get" : {
        "operationId" : "reference_get_reference",
        "parameters" : [ {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceResponse"
                }
              }
            },
            "description" : "Reference"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Reference",
        "tags" : [ "Reference" ]
      },
      "put" : {
        "operationId" : "reference_update_reference",
        "parameters" : [ {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateReferenceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceResponse"
                }
              }
            },
            "description" : "Reference"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Reference",
        "tags" : [ "Reference" ]
      }
    },
    "/references/{id}/meta" : {
      "get" : {
        "operationId" : "reference_get_meta",
        "parameters" : [ {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Reference Meta",
        "tags" : [ "Reference" ]
      },
      "put" : {
        "operationId" : "reference_update_meta",
        "parameters" : [ {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Reference Meta",
        "tags" : [ "Reference" ]
      }
    },
    "/references/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "reference_get_meta_by_key",
        "parameters" : [ {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Reference Meta by key",
        "tags" : [ "Reference" ]
      },
      "put" : {
        "operationId" : "reference_update_meta_by_key",
        "parameters" : [ {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Reference Meta by key",
        "tags" : [ "Reference" ]
      }
    },
    "/references/{id}/sources" : {
      "delete" : {
        "operationId" : "reference_remove_sources",
        "parameters" : [ {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Remove Reference Sources",
        "tags" : [ "Reference" ]
      },
      "post" : {
        "operationId" : "reference_add_sources",
        "parameters" : [ {
          "description" : "Reference ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateReferenceSourcesRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceResponse"
                }
              }
            },
            "description" : "Reference"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Add Reference Sources",
        "tags" : [ "Reference" ]
      }
    },
    "/reports" : {
      "get" : {
        "description" : "`workspace_id`와 `facility_key`가 모두 비어있는 경우, team의 report 조회한다.",
        "operationId" : "report_get_reports",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : true,
          "in" : "query",
          "name" : "workspace_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportListResponse"
                }
              }
            },
            "description" : "Report list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Report list",
        "tags" : [ "Report" ]
      },
      "post" : {
        "description" : "`workspace_id`와 `facility_key`가 모두 비어있는 경우, team report로 생성한다.",
        "operationId" : "report_create_report",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateReportRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportResponse"
                }
              }
            },
            "description" : "Report"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create report",
        "tags" : [ "Report" ]
      }
    },
    "/reports/mock" : {
      "get" : {
        "operationId" : "report_mock_reports",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportListResponse"
                }
              }
            },
            "description" : "Report list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Report mock list",
        "tags" : [ "Report" ]
      }
    },
    "/reports/{id}" : {
      "delete" : {
        "operationId" : "report_delete_report",
        "parameters" : [ {
          "description" : "Report ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Report",
        "tags" : [ "Report" ]
      },
      "get" : {
        "operationId" : "report_get_report",
        "parameters" : [ {
          "description" : "Report ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportResponse"
                }
              }
            },
            "description" : "Report"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Report",
        "tags" : [ "Report" ]
      },
      "put" : {
        "operationId" : "report_update_report",
        "parameters" : [ {
          "description" : "Report ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateReportRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportResponse"
                }
              }
            },
            "description" : "Report"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Report",
        "tags" : [ "Report" ]
      }
    },
    "/reports/{id}/annotations" : {
      "get" : {
        "operationId" : "report_get_annotations",
        "parameters" : [ {
          "description" : "Report ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportAnnotationListResponse"
                }
              }
            },
            "description" : "Report annotation list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get report annotation list",
        "tags" : [ "Report" ]
      }
    },
    "/reports/{id}/members" : {
      "get" : {
        "operationId" : "report_get_members",
        "parameters" : [ {
          "description" : "Report ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Memeber display option",
          "explode" : true,
          "in" : "query",
          "name" : "display_option",
          "required" : true,
          "schema" : {
            "enum" : [ "directly", "directly-flatten", "inherited", "inherited-flatten", "all" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "User ID list",
          "explode" : false,
          "in" : "query",
          "name" : "user_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "group_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "minimum permission",
          "explode" : true,
          "in" : "query",
          "name" : "min_permission",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get report members",
        "tags" : [ "Report" ]
      }
    },
    "/reports/{id}/meta" : {
      "get" : {
        "operationId" : "report_get_meta",
        "parameters" : [ {
          "description" : "Report ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Report Meta",
        "tags" : [ "Report" ]
      },
      "put" : {
        "operationId" : "report_update_meta",
        "parameters" : [ {
          "description" : "Report ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Report Meta",
        "tags" : [ "Report" ]
      }
    },
    "/reports/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "report_get_meta_by_key",
        "parameters" : [ {
          "description" : "Report ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Report Meta by key",
        "tags" : [ "Report" ]
      },
      "put" : {
        "operationId" : "report_update_meta_by_key",
        "parameters" : [ {
          "description" : "Report ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Report Meta",
        "tags" : [ "Report" ]
      }
    },
    "/reports/{id}/share" : {
      "put" : {
        "operationId" : "report_share_report",
        "parameters" : [ {
          "description" : "Report ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Share report with user or group",
        "tags" : [ "Report" ]
      }
    },
    "/reports/{id}/unshare" : {
      "put" : {
        "operationId" : "report_unshare_report",
        "parameters" : [ {
          "description" : "Report ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Unshared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unshare report with user or group",
        "tags" : [ "Report" ]
      }
    },
    "/reviews" : {
      "get" : {
        "operationId" : "review_get_reviews",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "get only published reviews",
          "explode" : true,
          "in" : "query",
          "name" : "published",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "List of selected record IDs",
          "explode" : true,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewListResponse"
                }
              }
            },
            "description" : "Review list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Facility not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Review list",
        "tags" : [ "Review" ]
      },
      "post" : {
        "operationId" : "review_create_review",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateReviewRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewResponse"
                }
              }
            },
            "description" : "Review"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/mock" : {
      "get" : {
        "operationId" : "review_mock_reviews",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewListResponse"
                }
              }
            },
            "description" : "Review list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Review mock list",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/share" : {
      "put" : {
        "operationId" : "review_bulk_share_review",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkShareRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Share reviews with user or group",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/unshare" : {
      "put" : {
        "operationId" : "review_bulk_unshare_review",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkShareRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Unshare reviews with user or group",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}" : {
      "delete" : {
        "operationId" : "review_delete_review",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Review",
        "tags" : [ "Review" ]
      },
      "get" : {
        "operationId" : "review_get_review",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "draft",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewResponse"
                }
              }
            },
            "description" : "Review"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_review",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "draft",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateReviewRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewResponse"
                }
              }
            },
            "description" : "Review"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/clear_fields" : {
      "put" : {
        "operationId" : "review_clear_fields",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Review fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "record_id", "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/contact_sales" : {
      "post" : {
        "operationId" : "review_contact_sales",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ContactSalesRequestBody"
        },
        "responses" : {
          "200" : {
            "description" : "ok"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Send e-mails to cupix sales team",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/deny" : {
      "put" : {
        "operationId" : "review_deny_review",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Denied"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Deny review with user or group",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/disable_public_access" : {
      "put" : {
        "operationId" : "review_disable_public_access",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewResponse"
                }
              }
            },
            "description" : "Review"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Disable Public Access Review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/enable_public_access" : {
      "put" : {
        "operationId" : "review_enable_public_access",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewResponse"
                }
              }
            },
            "description" : "Review"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Enable Public Access Review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/entity_parameters" : {
      "get" : {
        "operationId" : "Review_get_entity_parameter",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterListResponse"
                }
              }
            },
            "description" : "EntityParameter list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Review EntityParameter list",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/events" : {
      "post" : {
        "operationId" : "review_create_event",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCustomEventRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Review Event",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/facilities/meta" : {
      "get" : {
        "operationId" : "facility_get_meta_by_review",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "draft",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Facility Meta",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "faciltiy_update_meta_by_review",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "draft",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Facility Meta",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/facilities/meta/{meta_key}" : {
      "get" : {
        "operationId" : "facility_get_meta_by_key_by_review",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Facility Meta by key",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "facility_update_meta_by_key_by_review",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Facility Meta",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/flush_records" : {
      "put" : {
        "operationId" : "review_flush_records",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewResponse"
                }
              }
            },
            "description" : "Review"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Flush Records in Review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/members" : {
      "get" : {
        "operationId" : "review_get_members",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Memeber display option",
          "explode" : true,
          "in" : "query",
          "name" : "display_option",
          "required" : true,
          "schema" : {
            "enum" : [ "directly", "directly-flatten", "inherited", "inherited-flatten", "all" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "User ID list",
          "explode" : false,
          "in" : "query",
          "name" : "user_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "group_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "minimum permission",
          "explode" : true,
          "in" : "query",
          "name" : "min_permission",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get review members",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/meta" : {
      "get" : {
        "operationId" : "review_get_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "draft",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Review Meta",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "draft",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Review Meta",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "review_get_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "draft",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Review Meta by key",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "draft",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Review Meta",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/panos/{id}/mask_upload_url" : {
      "post" : {
        "operationId" : "review_create_pano_mask_upload_url",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "mask Type",
          "explode" : true,
          "in" : "query",
          "name" : "mask_type",
          "required" : false,
          "schema" : {
            "enum" : [ "face", "body", "facebody", "custom" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MaskResponse"
                }
              }
            },
            "description" : "Mask"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano mask upload url",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/public" : {
      "get" : {
        "operationId" : "review_get_public_review",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicReviewResponse"
                }
              }
            },
            "description" : "Public Review"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "summary" : "Get Pubilc Review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/publish" : {
      "delete" : {
        "operationId" : "review_unpublish_review",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewResponse"
                }
              }
            },
            "description" : "Review"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish Review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_publish_review",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewResponse"
                }
              }
            },
            "description" : "Review"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish Review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/purge" : {
      "delete" : {
        "operationId" : "review_purge_review",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/share" : {
      "put" : {
        "operationId" : "review_share_review",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Share review with user or group",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/site_insights" : {
      "get" : {
        "operationId" : "review_get_site_insights",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID list",
          "explode" : false,
          "in" : "query",
          "name" : "bim_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Sketch ID list",
          "explode" : false,
          "in" : "query",
          "name" : "sketch_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Progress ID list",
          "explode" : false,
          "in" : "query",
          "name" : "progress_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Category ID list",
          "explode" : false,
          "in" : "query",
          "name" : "category_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Status ID list",
          "explode" : false,
          "in" : "query",
          "name" : "status_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Texture ID list",
          "explode" : false,
          "in" : "query",
          "name" : "texture_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "name list",
          "explode" : false,
          "in" : "query",
          "name" : "name",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Progress Bim Object ID list",
          "explode" : false,
          "in" : "query",
          "name" : "bim_object_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Progress Bim External ID list",
          "explode" : false,
          "in" : "query",
          "name" : "bim_external_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workflow ID list",
          "explode" : false,
          "in" : "query",
          "name" : "workflow_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Vendor Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "vendor_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Room ID list",
          "explode" : false,
          "in" : "query",
          "name" : "room_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Activity String ID list",
          "explode" : false,
          "in" : "query",
          "name" : "activity_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Columns for Row Grouping",
          "explode" : false,
          "in" : "query",
          "name" : "row_group_columns",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Values for Row Grouping",
          "explode" : false,
          "in" : "query",
          "name" : "group_keys",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `to_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "from_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `from_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "to_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "RecordStatus Value",
          "explode" : true,
          "in" : "query",
          "name" : "record_status_value",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "CustomProperty Key",
          "explode" : true,
          "in" : "query",
          "name" : "custom_property_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteInsightCellListResponse"
                }
              }
            },
            "description" : "SiteInsightCell list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get siteInsights models with support for server-side row model, where response model can be different",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/site_insights/cells" : {
      "get" : {
        "operationId" : "review_get_site_insight_cells",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID list",
          "explode" : false,
          "in" : "query",
          "name" : "bim_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Sketch ID list",
          "explode" : false,
          "in" : "query",
          "name" : "sketch_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Progress ID list",
          "explode" : false,
          "in" : "query",
          "name" : "progress_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Category ID list",
          "explode" : false,
          "in" : "query",
          "name" : "category_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workflow ID list",
          "explode" : false,
          "in" : "query",
          "name" : "workflow_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Status ID list",
          "explode" : false,
          "in" : "query",
          "name" : "status_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Texture ID list",
          "explode" : false,
          "in" : "query",
          "name" : "texture_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Activity String ID list",
          "explode" : false,
          "in" : "query",
          "name" : "activity_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `to_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "from_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `from_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "to_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "RecordStatus Value",
          "explode" : true,
          "in" : "query",
          "name" : "record_status_value",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "CustomProperty Key",
          "explode" : true,
          "in" : "query",
          "name" : "custom_property_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteInsightCellListResponse"
                }
              }
            },
            "description" : "SiteInsightCell list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get site insight cells which include Progress, RecordStatus, CustomProperty",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/spacetimes" : {
      "get" : {
        "operationId" : "review_get_spacetimes",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "draft",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `to_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "from_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `from_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "to_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "filter empty spacetime ( ex. extra_filter=exclude_empty_counts )",
          "explode" : true,
          "in" : "query",
          "name" : "extra_filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpacetimeListResponse"
                }
              }
            },
            "description" : "Spacetime list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Review spacetime list",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/trash" : {
      "put" : {
        "operationId" : "review_trash_review",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/unshare" : {
      "put" : {
        "operationId" : "review_unshare_review",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Review unshared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unshare review with user or group",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{key}/untrash" : {
      "put" : {
        "description" : "Untrash trashed review and return it.",
        "operationId" : "review_untrash_review",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewResponse"
                }
              }
            },
            "description" : "Review"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash trashed review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/activities" : {
      "get" : {
        "operationId" : "review_get_activities",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "UTC+0 based. Must be used together with `to_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "from_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `from_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "to_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Activity String ID list",
          "explode" : false,
          "in" : "query",
          "name" : "activity_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityListResponse"
                }
              }
            },
            "description" : "Activity list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Activity list of review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_activity",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkActivityRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Activity of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/activities/bulk" : {
      "post" : {
        "operationId" : "review_bulk_create_activity",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateActivityBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create Activity",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_update_activity",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateActivityBulkRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Activity bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete Activity",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/activities/{id}" : {
      "get" : {
        "operationId" : "review_get_activity",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Activity ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityResponse"
                }
              }
            },
            "description" : "Activity"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Activity",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_activity",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Activity ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateActivityRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityResponse"
                }
              }
            },
            "description" : "Activity"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Activity",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/activities/{id}/meta" : {
      "get" : {
        "operationId" : "review_activity_get_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Activity ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Activity Meta",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_activity_update_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Activity ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Activity Meta",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/activities/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "review_activity_get_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Activity ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Activity Meta by key",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_activity_update_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Activity ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Activity Meta",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotation_layers" : {
      "get" : {
        "operationId" : "review_get_annotation_layers",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Use draft review",
          "explode" : true,
          "in" : "query",
          "name" : "use_draft_on_review",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerListResponse"
                }
              }
            },
            "description" : "AnnotationLayer list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "AnnotationLayer list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotation_layers/{id}" : {
      "delete" : {
        "operationId" : "review_delete_annotation_layer",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Review AnnotationLayer",
        "tags" : [ "Review" ]
      },
      "get" : {
        "operationId" : "review_get_annotation_layer",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Review AnnotationLayer",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_annotation_layer",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAnnotationLayerRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationLayerResponse"
                }
              }
            },
            "description" : "AnnotationLayer"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Review AnnotationLayer",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotation_layers/{id}/form_designs" : {
      "get" : {
        "operationId" : "review_get_annotation_layer_associated_form_designs",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FormDesignListResponse"
                }
              }
            },
            "description" : "FormDesign list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "AnnotationLayer associated FormDesign list",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations" : {
      "get" : {
        "description" : "Annotation 목록을 조회한다. `capture_id` 또는 `annotation_layer_ids`를 필수로 입력해야한다.",
        "operationId" : "review_get_annotations",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "AnnotationLayer ID list",
          "explode" : false,
          "in" : "query",
          "name" : "annotation_layer_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationListResponse"
                }
              }
            },
            "description" : "Annotation list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Review Annotation List",
        "tags" : [ "Review" ]
      },
      "post" : {
        "operationId" : "review_create_annotation",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAnnotationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationResponse"
                }
              }
            },
            "description" : "Annotation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Review Annotation",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/badges" : {
      "get" : {
        "operationId" : "review_get_annotations_by_badge_id",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Badge IDs",
          "explode" : true,
          "in" : "query",
          "name" : "badge_ids",
          "required" : true,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationListResponse"
                }
              }
            },
            "description" : "Annotation list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Annotation filtered by badge",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/trash" : {
      "put" : {
        "operationId" : "review_bulk_trash_annotations",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkTrashAnnotationsRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk trash Annotation",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{annotation_id}/attachments" : {
      "get" : {
        "operationId" : "review_get_annotation_attachments",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentListResponse"
                }
              }
            },
            "description" : "Attachment list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Annotation Attachments",
        "tags" : [ "Review" ]
      },
      "post" : {
        "operationId" : "review_create_annotation_attachment",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAttachmentRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Annotation Attachment",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{annotation_id}/attachments/{key}" : {
      "delete" : {
        "operationId" : "review_delete_annotation_attachment",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Annotation Attachment",
        "tags" : [ "Review" ]
      },
      "get" : {
        "operationId" : "review_get_annotation_attachment",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Annotation Attachment",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_annotation_attachment",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAttachmentRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Annotation Attachment",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{annotation_id}/attachments/{key}/check_uploading" : {
      "put" : {
        "operationId" : "review_check_annotation_attachment_uploading",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Annotation Attachment uploading",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{annotation_id}/attachments/{key}/clear_fields" : {
      "put" : {
        "operationId" : "review_clear_annotation_attachment_fields",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{annotation_id}/attachments/{key}/download" : {
      "get" : {
        "description" : "Redirect to annotation attachment download link",
        "operationId" : "review_download_annotation_attachment",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to attachment download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Annotation Attachment",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{annotation_id}/attachments/{key}/upload_url" : {
      "post" : {
        "operationId" : "review_create_annotation_attachment_upload_url",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Annotation Attachment upload url",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{annotation_id}/comments" : {
      "get" : {
        "operationId" : "review_get_annotation_comments",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommentListResponse"
                }
              }
            },
            "description" : "Comment list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get comment list",
        "tags" : [ "Review" ]
      },
      "post" : {
        "operationId" : "review_create_annotation_comment",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCommentRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommentResponse"
                }
              }
            },
            "description" : "Comment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create comment",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{annotation_id}/comments/{id}" : {
      "delete" : {
        "operationId" : "review_delete_annotation_comment",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Comment ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Annotation Comment",
        "tags" : [ "Review" ]
      },
      "get" : {
        "operationId" : "review_get_annotation_comment",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Comment ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommentResponse"
                }
              }
            },
            "description" : "Comment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get comment",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_annotation_comment",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Comment ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCommentRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommentResponse"
                }
              }
            },
            "description" : "Comment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update comment",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{annotation_id}/fields" : {
      "get" : {
        "operationId" : "review_get_annotation_fields",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FieldListResponse"
                }
              }
            },
            "description" : "Field list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Field list",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{annotation_id}/fields/{id}" : {
      "get" : {
        "operationId" : "review_get_annotation_field",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Field ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FieldResponse"
                }
              }
            },
            "description" : "Field"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Field",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_annotation_field",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Field ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateFieldRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FieldResponse"
                }
              }
            },
            "description" : "Field"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Field",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{annotation_id}/fields/{id}/clear_fields" : {
      "put" : {
        "operationId" : "review_clear_annotation_field_fields",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "annotation_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Field ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Field fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "value" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear annotation field fields on review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}" : {
      "delete" : {
        "operationId" : "review_delete_annotation",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Review Annotation",
        "tags" : [ "Review" ]
      },
      "get" : {
        "operationId" : "review_get_annotation",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationResponse"
                }
              }
            },
            "description" : "Annotation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Review Annotation",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_annotation",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAnnotationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationResponse"
                }
              }
            },
            "description" : "Annotation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Review Annotation",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/assets" : {
      "get" : {
        "operationId" : "review_get_annotation_associated_assets",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetListResponse"
                }
              }
            },
            "description" : "Asset list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Annotation associated Asset list",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/associate_assets" : {
      "put" : {
        "operationId" : "annotation_associate_assets",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAnnotationAssociationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationResponse"
                }
              }
            },
            "description" : "Annotation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Associate annotation with assets",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/associate_badges" : {
      "put" : {
        "operationId" : "AnnotationAssociateBadges",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAnnotationBadgeAssociationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationResponse"
                }
              }
            },
            "description" : "Annotation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Associate annotation with badges",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/badges" : {
      "get" : {
        "operationId" : "review_get_annotation_associated_badges",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadgeListResponse"
                }
              }
            },
            "description" : "Badge list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Annotation associated Badge list",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/clear_fields" : {
      "put" : {
        "operationId" : "review_clear_annotation_fields",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Annoation fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail", "parent_id", "value", "annotatable" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear annotation fields on review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/disassociate_assets" : {
      "put" : {
        "operationId" : "annotation_disassociate_assets",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "AnnotationLayer ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAnnotationAssociationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationResponse"
                }
              }
            },
            "description" : "Annotation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Disassociate annotation with assets",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/disassociate_badges" : {
      "put" : {
        "operationId" : "AnnotationDisassociateBadges",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAnnotationBadgeAssociationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnotationResponse"
                }
              }
            },
            "description" : "Annotation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Associate annotation with badges",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/meta" : {
      "get" : {
        "operationId" : "review_get_annotation_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Review Annotation Meta",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_annotation_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Review Annotation Meta",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "review_get_annotation_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Review Annotation Meta by key",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_annotation_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Review Annotation Meta by key",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/position" : {
      "put" : {
        "operationId" : "review_update_annotation_position",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePositionRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Position updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Annotation Position",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/resources" : {
      "get" : {
        "operationId" : "review_get_annotation_resources",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceListResponse"
                }
              }
            },
            "description" : "Resource list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Resource list",
        "tags" : [ "Review" ]
      },
      "post" : {
        "operationId" : "review_create_annotation_resource",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateResourceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Review Annotation Resource",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/resources/{kind}" : {
      "delete" : {
        "operationId" : "review_delete_annotation_resource_by_kind",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Annotation Resource",
        "tags" : [ "Review" ]
      },
      "get" : {
        "operationId" : "review_get_annotation_resource_by_kind",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Annotation Resource",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/resources/{kind}/check_uploading" : {
      "put" : {
        "operationId" : "review_check_annotation_resource_uploading_by_kind",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Annotation Resource uploading",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/resources/{kind}/download" : {
      "get" : {
        "description" : "Redirect to annotation resource download link",
        "operationId" : "review_download_annotation_resource_by_kind",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to resource download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Annotation Resource",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/resources/{kind}/upload_url" : {
      "post" : {
        "operationId" : "review_create_annotation_resource_upload_url_by_kind",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Annotation Resource upload url",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/resources/{resource_id}" : {
      "get" : {
        "operationId" : "review_get_annotation_resource_by_resource_id",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource ID",
          "explode" : false,
          "in" : "path",
          "name" : "resource_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Annotation Resource",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/resources/{resource_key}" : {
      "delete" : {
        "operationId" : "review_delete_annotation_resource_by_resource_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource key",
          "explode" : false,
          "in" : "path",
          "name" : "resource_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Annotation Resource",
        "tags" : [ "Review" ]
      },
      "get" : {
        "operationId" : "review_get_annotation_resource_by_resource_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource key",
          "explode" : false,
          "in" : "path",
          "name" : "resource_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Annotation Resource",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/resources/{resource_key}/check_uploading" : {
      "put" : {
        "operationId" : "review_check_annotation_resource_uploading_by_resource_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource key",
          "explode" : false,
          "in" : "path",
          "name" : "resource_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Annotation Resource uploading",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/resources/{resource_key}/download" : {
      "get" : {
        "description" : "Redirect to annotation resource download link",
        "operationId" : "review_download_annotation_resource_by_resource_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource key",
          "explode" : false,
          "in" : "path",
          "name" : "resource_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to resource download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Annotation Resource",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/annotations/{id}/resources/{resource_key}/upload_url" : {
      "post" : {
        "operationId" : "review_create_annotation_resource_upload_url_by_resource_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Annotation ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource key",
          "explode" : false,
          "in" : "path",
          "name" : "resource_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Annotation Resource upload url",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/assets" : {
      "get" : {
        "operationId" : "review_get_assets",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetListResponse"
                }
              }
            },
            "description" : "Asset list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Review Asset List",
        "tags" : [ "Review" ]
      },
      "post" : {
        "operationId" : "review_create_asset",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAssetRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetResponse"
                }
              }
            },
            "description" : "Asset"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Review Asset",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/assets/badges" : {
      "get" : {
        "operationId" : "review_get_assets_by_badge_id",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Badge IDs",
          "explode" : true,
          "in" : "query",
          "name" : "badge_ids",
          "required" : true,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetListResponse"
                }
              }
            },
            "description" : "Asset list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Asset filtered by bdage",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/assets/{key}" : {
      "delete" : {
        "operationId" : "review_delete_asset",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Review Asset",
        "tags" : [ "Review" ]
      },
      "get" : {
        "operationId" : "review_get_asset",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetResponse"
                }
              }
            },
            "description" : "Asset"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Review Asset",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_asset",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAssetRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetResponse"
                }
              }
            },
            "description" : "Asset"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Review Asset",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/assets/{key}/associate_badges" : {
      "put" : {
        "operationId" : "AssetAssociateBadges",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAssetBadgeAssociationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetResponse"
                }
              }
            },
            "description" : "Asset"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Associate asset with badges",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/assets/{key}/badges" : {
      "get" : {
        "operationId" : "review_get_asset_associated_badges",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadgeListResponse"
                }
              }
            },
            "description" : "Badge list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Asset associated Badge list",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/assets/{key}/disassociate_badges" : {
      "put" : {
        "operationId" : "AssetDisassociateBadges",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Asset key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateAssetBadgeAssociationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetResponse"
                }
              }
            },
            "description" : "Asset"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Associate asset with badges",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/badges" : {
      "get" : {
        "operationId" : "review_get_badges",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Badge Kind",
          "explode" : true,
          "in" : "query",
          "name" : "badge_kind",
          "required" : true,
          "schema" : {
            "enum" : [ "asset", "annotation" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadgeListResponse"
                }
              }
            },
            "description" : "Badge list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Review Badge List",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/bims" : {
      "get" : {
        "operationId" : "review_get_bims",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Use draft review",
          "explode" : true,
          "in" : "query",
          "name" : "use_draft_on_review",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BimListResponse"
                }
              }
            },
            "description" : "Bim list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bim list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/bims/{id}/download" : {
      "get" : {
        "description" : "Bim 다운로드 URL로 redirect.",
        "operationId" : "review_download_bim",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to bim download url"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download bim",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/bims/{id}/forge_access_token" : {
      "post" : {
        "operationId" : "review_create_forge_access_token",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Bim ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AutodeskForgeTokenResponse"
                }
              }
            },
            "description" : "Redirect to Autodesk Forge"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create forge access token",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/bookmarks" : {
      "get" : {
        "operationId" : "review_get_bookmarks",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkListResponse"
                }
              }
            },
            "description" : "Bookmark list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Review Bookmark List",
        "tags" : [ "Review" ]
      },
      "post" : {
        "operationId" : "review_create_bookmark",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateBookmarkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkResponse"
                }
              }
            },
            "description" : "Bookmark"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Bookmark",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/bookmarks/me" : {
      "get" : {
        "operationId" : "review_get_me_bookmarks",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkListResponse"
                }
              }
            },
            "description" : "Bookmark list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Review Me Bookmark List",
        "tags" : [ "Review" ]
      },
      "post" : {
        "operationId" : "review_create_me_bookmark",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateBookmarkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkResponse"
                }
              }
            },
            "description" : "Bookmark"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Me Bookmark",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/bookmarks/team" : {
      "get" : {
        "operationId" : "review_get_team_bookmarks",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkListResponse"
                }
              }
            },
            "description" : "Bookmark list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Review Team Bookmark List",
        "tags" : [ "Review" ]
      },
      "post" : {
        "operationId" : "review_create_team_bookmark",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateBookmarkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkResponse"
                }
              }
            },
            "description" : "Bookmark"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Team Bookmark",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/bookmarks/{key}" : {
      "delete" : {
        "operationId" : "review_delete_bookmark",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Bookmark",
        "tags" : [ "Review" ]
      },
      "get" : {
        "operationId" : "review_get_bookmark",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkResponse"
                }
              }
            },
            "description" : "Bookmark"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bookmark",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_bookmark",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateBookmarkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkResponse"
                }
              }
            },
            "description" : "Bookmark"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Bookmark",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/bookmarks/{key}/meta" : {
      "get" : {
        "operationId" : "review_bookmark_get_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bookmark Meta",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bookmark_update_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Bookmark Meta",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/bookmarks/{key}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "review_bookmark_get_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bookmark Meta by key",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bookmark_update_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Bookmark Meta",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/bookmarks/{key}/position" : {
      "put" : {
        "operationId" : "review_update_bookmark_position",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePositionRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Position updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Bookmark Position",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/captures" : {
      "get" : {
        "operationId" : "review_get_captures",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CaptureListResponse"
                }
              }
            },
            "description" : "Capture list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Capture list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/categories" : {
      "get" : {
        "operationId" : "review_get_categories",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Category Type",
          "explode" : true,
          "in" : "query",
          "name" : "category_type",
          "required" : false,
          "schema" : {
            "enum" : [ "main", "sub" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Parent ID",
          "explode" : true,
          "in" : "query",
          "name" : "parent_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryListResponse"
                }
              }
            },
            "description" : "Category list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Category list of review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_category",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkCategoryRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Category of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/categories/bulk" : {
      "post" : {
        "operationId" : "review_bulk_create_category",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateCategoryBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create Category",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_update_category",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCategoryBulkRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Category bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete Category",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/categories/{id}" : {
      "get" : {
        "operationId" : "review_get_category",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Category ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryResponse"
                }
              }
            },
            "description" : "Category"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Category",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_category",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Category ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateCategoryRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryResponse"
                }
              }
            },
            "description" : "Category"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Category",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/connects" : {
      "get" : {
        "operationId" : "review_get_connects",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "provider list",
          "explode" : false,
          "in" : "query",
          "name" : "providers",
          "required" : false,
          "schema" : {
            "items" : {
              "enum" : [ "matterport", "arcgis", "itwin", "cesium" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectListResponse"
                }
              }
            },
            "description" : "Connect list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Connect list",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/floorplans" : {
      "get" : {
        "operationId" : "review_get_floorplans",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Use draft review",
          "explode" : true,
          "in" : "query",
          "name" : "use_draft_on_review",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanListResponse"
                }
              }
            },
            "description" : "Floorplan list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Floorplan list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/floorplans/{id}" : {
      "get" : {
        "operationId" : "review_get_floorplan",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FloorplanResponse"
                }
              }
            },
            "description" : "Floorplan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Floorplan by Review key",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/floorplans/{id}/download" : {
      "get" : {
        "description" : "Floorplan 다운로드 URL로 리디렉션",
        "operationId" : "review_download_floorplan",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Floorplan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to floorplan download URL"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download floorplan",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/form_designs" : {
      "put" : {
        "operationId" : "review_bulk_form_design",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkFormDesignRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk FormDesign of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/form_fields" : {
      "put" : {
        "operationId" : "review_bulk_form_field",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkFormFieldRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk FormField of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/integrations" : {
      "get" : {
        "operationId" : "review_get_integrations",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "provider list",
          "explode" : false,
          "in" : "query",
          "name" : "providers",
          "required" : false,
          "schema" : {
            "items" : {
              "enum" : [ "bim360", "procore", "plangrid", "acc", "revizto" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "state list",
          "explode" : false,
          "in" : "query",
          "name" : "states",
          "required" : false,
          "schema" : {
            "items" : {
              "enum" : [ "created", "active" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationListResponse"
                }
              }
            },
            "description" : "Integration list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Integration list",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/integrations/{provider}/access_token" : {
      "post" : {
        "operationId" : "review_create_integration_access_token",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Integration provider code",
          "explode" : false,
          "in" : "path",
          "name" : "provider",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationAccessTokenResponse"
                }
              }
            },
            "description" : "Integration access token"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create integration access token",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/levels" : {
      "get" : {
        "operationId" : "review_get_levels",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Use draft review",
          "explode" : true,
          "in" : "query",
          "name" : "use_draft_on_review",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LevelListResponse"
                }
              }
            },
            "description" : "Level list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Level list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/measurements" : {
      "get" : {
        "operationId" : "review_get_measurements",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Measurement type array",
          "explode" : true,
          "in" : "query",
          "name" : "measurement_types",
          "required" : false,
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/MeasurementType"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeasurementListResponse"
                }
              }
            },
            "description" : "Measurement list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Measurement list of review",
        "tags" : [ "Review" ]
      },
      "post" : {
        "operationId" : "review_create_measurement",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateMeasurementRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeasurementResponse"
                }
              }
            },
            "description" : "Measurement"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Measurement",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/measurements/trash" : {
      "put" : {
        "operationId" : "review_bulk_trash_measurements",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkTrashMeasurementsRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk trash Measurement",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/measurements/{id}" : {
      "delete" : {
        "operationId" : "review_delete_measurement",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Measurement ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Measurement",
        "tags" : [ "Review" ]
      },
      "get" : {
        "operationId" : "review_get_measurement",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Measurement ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeasurementResponse"
                }
              }
            },
            "description" : "Measurement"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Measurement",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_measurement",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Measurement ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMeasurementRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeasurementResponse"
                }
              }
            },
            "description" : "Measurement"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Measurement",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/measurements/{id}/meta" : {
      "get" : {
        "operationId" : "review_measurement_get_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Measurement ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Measurement Meta",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_measurement_update_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Measurement ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Measurement Meta",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/measurements/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "review_measurement_get_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Measurement ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Measurement Meta by key",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_measurement_update_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Measurement ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Measurement Meta",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/measurements/{id}/purge" : {
      "delete" : {
        "operationId" : "review_measurement_purge_measurement",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Measurement ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Measurement",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/measurements/{id}/resources" : {
      "get" : {
        "operationId" : "review_measurement_get_resources",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Measurement ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceListResponse"
                }
              }
            },
            "description" : "Resource list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Measurement Resources",
        "tags" : [ "Review" ]
      },
      "post" : {
        "operationId" : "review_measurement_create_resource",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Measurement ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateResourceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Measurement Resource",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/measurements/{id}/resources/{kind}" : {
      "delete" : {
        "operationId" : "review_measurement_delete_resource",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Measurement ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Measurement Resource",
        "tags" : [ "Review" ]
      },
      "get" : {
        "operationId" : "review_measurement_get_resource",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Measurement ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Measurement Resource",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/measurements/{id}/resources/{kind}/check_uploading" : {
      "put" : {
        "operationId" : "review_measurement_check_resource_uploading",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Measurement ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Measurement Resource uploading",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/measurements/{id}/resources/{kind}/download" : {
      "get" : {
        "description" : "Redirect to measurement resource download link",
        "operationId" : "review_measurement_download_resource",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Measurement ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Measurement Resource",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/measurements/{id}/resources/{kind}/upload_url" : {
      "post" : {
        "operationId" : "review_measurement_create_resource_upload_url",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Measurement ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create measurement Resource upload url",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/meshes" : {
      "get" : {
        "operationId" : "review_get_meshes",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Use draft review",
          "explode" : true,
          "in" : "query",
          "name" : "use_draft_on_review",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeshListResponse"
                }
              }
            },
            "description" : "Mesh list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Mesh list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/panos" : {
      "get" : {
        "operationId" : "review_get_panos",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Aread ID list",
          "explode" : false,
          "in" : "query",
          "name" : "area_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `to_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "from_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `from_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "to_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Pano IDs",
          "explode" : false,
          "in" : "query",
          "name" : "ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Revision Type",
          "explode" : true,
          "in" : "query",
          "name" : "revision_type",
          "required" : false,
          "schema" : {
            "enum" : [ "enhanced_image", "normal" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Use draft review",
          "explode" : true,
          "in" : "query",
          "name" : "use_draft_on_review",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoListResponse"
                }
              }
            },
            "description" : "Pano list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pano list of review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_pano",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkPanoRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Pano of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/panos/bulk_update" : {
      "put" : {
        "operationId" : "review_bulk_update_pano",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkUpdatePanoRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Panos updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update Pano",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/panos/{id}" : {
      "get" : {
        "operationId" : "review_get_pano",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Pano ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Revision Type",
          "explode" : true,
          "in" : "query",
          "name" : "revision_type",
          "required" : false,
          "schema" : {
            "enum" : [ "enhanced_image", "normal" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PanoResponse"
                }
              }
            },
            "description" : "Pano"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Pano",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/pointclouds" : {
      "get" : {
        "operationId" : "review_get_pointclouds",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Pointcloud Type",
          "explode" : true,
          "in" : "query",
          "name" : "pointcloud_type",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/PointcloudType"
          },
          "style" : "form"
        }, {
          "description" : "Parent IDs",
          "explode" : false,
          "in" : "query",
          "name" : "parent_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Use draft review",
          "explode" : true,
          "in" : "query",
          "name" : "use_draft_on_review",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PointcloudListResponse"
                }
              }
            },
            "description" : "Pointcloud list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Pointcloud list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/progresses" : {
      "get" : {
        "operationId" : "review_get_progresses",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Category ID",
          "explode" : true,
          "in" : "query",
          "name" : "category_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID",
          "explode" : true,
          "in" : "query",
          "name" : "bim_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Sketch ID",
          "explode" : true,
          "in" : "query",
          "name" : "sketch_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Aggregation",
          "explode" : true,
          "in" : "query",
          "name" : "aggs",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressListResponse"
                }
              }
            },
            "description" : "Progress list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Progress list of review",
        "tags" : [ "Review" ]
      },
      "post" : {
        "operationId" : "review_create_progress",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateProgressRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressResponse"
                }
              }
            },
            "description" : "Progress"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Progress on Review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_progress",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkProgressRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Progress of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/progresses/bulk" : {
      "post" : {
        "operationId" : "review_bulk_create_progress",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateProgressBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create Progress on Review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_update_progress",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateProgressBulkRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Progress bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete Progress on Review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/progresses/{id}" : {
      "delete" : {
        "operationId" : "review_delete_progress",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Progress on Review",
        "tags" : [ "Review" ]
      },
      "get" : {
        "operationId" : "review_get_progress",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressResponse"
                }
              }
            },
            "description" : "Progress"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Progress on Review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_progress",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateProgressRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressResponse"
                }
              }
            },
            "description" : "Progress"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Progress on Review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/progresses/{id}/meta" : {
      "get" : {
        "operationId" : "review_get_progress_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Progress Meta on Review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_progress_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Progress Meta on Review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/progresses/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "review_get_progress_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Progress Meta by key on Review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_progress_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Progress Meta on Review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/progresses/{progress_id}/fields" : {
      "get" : {
        "operationId" : "review_get_progress_fields",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : true,
          "in" : "query",
          "name" : "progress_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FieldListResponse"
                }
              }
            },
            "description" : "Field list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Field list",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/progresses/{progress_id}/fields/{id}" : {
      "get" : {
        "operationId" : "review_get_progress_field",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "progress_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Field ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FieldResponse"
                }
              }
            },
            "description" : "Field"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Field",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_progress_field",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "progress_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Field ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateFieldRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FieldResponse"
                }
              }
            },
            "description" : "Field"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Field",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/progresses/{progress_id}/fields/{id}/clear_fields" : {
      "put" : {
        "operationId" : "review_clear_progress_field_fields",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID",
          "explode" : false,
          "in" : "path",
          "name" : "progress_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Field ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Field fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "value" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear progress field fields on review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/reality_captures" : {
      "get" : {
        "operationId" : "review_get_reality_captures",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Pointcloud Type",
          "explode" : true,
          "in" : "query",
          "name" : "pointcloud_type",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/PointcloudType"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RealityCaptureListResponse"
                }
              }
            },
            "description" : "Mesh list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "RealityCapture list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/record_statuses" : {
      "get" : {
        "operationId" : "review_get_record_statuses",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Progress ID list",
          "explode" : false,
          "in" : "query",
          "name" : "progress_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
          "explode" : false,
          "in" : "query",
          "name" : "record_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Status ID list",
          "explode" : false,
          "in" : "query",
          "name" : "status_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Aggregation",
          "explode" : true,
          "in" : "query",
          "name" : "aggs",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusListResponse"
                }
              }
            },
            "description" : "RecordStatus list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "RecordStatus list of review",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_record_status",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkRecordStatusRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk RecordStatus of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/record_statuses/bulk" : {
      "post" : {
        "operationId" : "review_bulk_create_record_status",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateRecordStatusBulkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkCreationResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Create RecordStatus",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_bulk_update_record_status",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateRecordStatusBulkRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "RecordStatus bulk updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Update or Delete RecordStatus",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/record_statuses/update_or_create" : {
      "post" : {
        "operationId" : "review_recordstatus_update_or_create",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusResponse"
                }
              }
            },
            "description" : "RecordStatus"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update if present, Create if not",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/record_statuses/{id}" : {
      "get" : {
        "operationId" : "review_get_record_status",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusResponse"
                }
              }
            },
            "description" : "RecordStatus"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get RecordStatus",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_record_status",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "RecordStatus ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateRecordStatusRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordStatusResponse"
                }
              }
            },
            "description" : "RecordStatus"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update RecordStatus",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/records" : {
      "get" : {
        "description" : "Retrieve record list which included in review.",
        "operationId" : "review_get_records",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `to_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "from_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `from_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "to_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Use draft review",
          "explode" : true,
          "in" : "query",
          "name" : "use_draft_on_review",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecordListResponse"
                }
              }
            },
            "description" : "Record list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Record list",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/rooms" : {
      "get" : {
        "operationId" : "review_get_rooms",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID",
          "explode" : true,
          "in" : "query",
          "name" : "bim_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID list",
          "explode" : false,
          "in" : "query",
          "name" : "bim_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoomListResponse"
                }
              }
            },
            "description" : "Room list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Room list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/sketches" : {
      "get" : {
        "operationId" : "review_get_sketches",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Use draft review",
          "explode" : true,
          "in" : "query",
          "name" : "use_draft_on_review",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SketchListResponse"
                }
              }
            },
            "description" : "Sketch list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Sketch list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/sketches/{id}/download" : {
      "get" : {
        "description" : "Redirect to sketch download link",
        "operationId" : "review_download_sketch",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to sketch download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download sketch",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/sketches/{id}/resources/{kind}/download" : {
      "get" : {
        "description" : "Redirect to sketch resource download link",
        "operationId" : "review_download_sketch_resource_by_kind",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Sketch Resource",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/statuses" : {
      "get" : {
        "operationId" : "review_get_statuses",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow ID",
          "explode" : true,
          "in" : "query",
          "name" : "workflow_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatusListResponse"
                }
              }
            },
            "description" : "Status list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Status list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/statuses/{id}" : {
      "get" : {
        "operationId" : "review_get_status",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatusResponse"
                }
              }
            },
            "description" : "Status"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Status",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_status",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateStatusRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatusResponse"
                }
              }
            },
            "description" : "Status"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Status",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/statuses/{id}/meta" : {
      "get" : {
        "operationId" : "review_status_get_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Status Meta",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_status_update_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Status Meta",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/statuses/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "review_status_get_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Status Meta by key",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_status_update_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Status Meta",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/teleports" : {
      "get" : {
        "operationId" : "review_get_teleports",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Record ID",
          "explode" : true,
          "in" : "query",
          "name" : "record_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Teleport Source Key",
          "explode" : true,
          "in" : "query",
          "name" : "source_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Teleport Source Type",
          "explode" : true,
          "in" : "query",
          "name" : "source_type",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeleportListResponse"
                }
              }
            },
            "description" : "Teleport list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Teleport list of review",
        "tags" : [ "Review" ]
      },
      "post" : {
        "operationId" : "review_create_teleport",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateTeleportRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeleportResponse"
                }
              }
            },
            "description" : "Teleport"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Teleport",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/teleports/{id}" : {
      "delete" : {
        "operationId" : "review_delete_teleport",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Teleport ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Teleport",
        "tags" : [ "Review" ]
      },
      "get" : {
        "operationId" : "review_get_teleport",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Teleport ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeleportResponse"
                }
              }
            },
            "description" : "Teleport"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Teleport",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_teleport",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Teleport ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateTeleportRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeleportResponse"
                }
              }
            },
            "description" : "Teleport"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Teleport",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/teleports/{id}/meta" : {
      "get" : {
        "operationId" : "review_teleport_get_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Teleport ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Teleport Meta",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_teleport_update_meta",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Teleport ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Teleport Meta",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/teleports/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "review_teleport_get_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Teleport ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Teleport Meta by key",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_teleport_update_meta_by_key",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Teleport ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Teleport Meta",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/textures" : {
      "get" : {
        "operationId" : "review_get_textures",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "kind",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "True if System Texture",
          "explode" : true,
          "in" : "query",
          "name" : "is_system_texture",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureListResponse"
                }
              }
            },
            "description" : "Texture list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Texture list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/textures/{id}" : {
      "get" : {
        "operationId" : "review_get_texture",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureResponse"
                }
              }
            },
            "description" : "Texture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Texture",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/textures/{kind}" : {
      "get" : {
        "operationId" : "review_get_textures_by_kind",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureListResponse"
                }
              }
            },
            "description" : "Texture list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Textures by kind",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/workarea_groups" : {
      "get" : {
        "operationId" : "review_get_workarea_groups",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkareaGroupListResponse"
                }
              }
            },
            "description" : "WorkareaGroup list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "WorkareaGroup list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/workareas" : {
      "get" : {
        "operationId" : "review_get_workareas",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workarea Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "workarea_group_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkareaListResponse"
                }
              }
            },
            "description" : "Workarea list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Workarea list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/workflows" : {
      "get" : {
        "operationId" : "review_get_workflows",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "kind",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "True if System Workflow",
          "explode" : true,
          "in" : "query",
          "name" : "is_system_workflow",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "Workflow Type list",
          "explode" : true,
          "in" : "query",
          "name" : "workflow_types",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowListResponse"
                }
              }
            },
            "description" : "Workflow list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Workflow list of review",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/workflows/textures" : {
      "get" : {
        "operationId" : "review_workflow_get_workflow_textures",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTextureIdListResponse"
                }
              }
            },
            "description" : "Texture Ids for each Workflows"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get texture_ids for each workflows",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/workflows/{id}" : {
      "get" : {
        "operationId" : "review_get_workflow",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowResponse"
                }
              }
            },
            "description" : "Workflow"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workflow",
        "tags" : [ "Review" ]
      },
      "put" : {
        "operationId" : "review_update_workflow",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateWorkflowRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowResponse"
                }
              }
            },
            "description" : "Workflow"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Workflow",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/workflows/{id}/clear_fields" : {
      "put" : {
        "operationId" : "review_workflow_clear_fields",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "texture_id" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/workflows/{id}/textures" : {
      "get" : {
        "operationId" : "review_workflow_get_textures",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureListResponse"
                }
              }
            },
            "description" : "Texture list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workflow's textures",
        "tags" : [ "Review" ]
      }
    },
    "/reviews/{review_key}/workflows/{kind}" : {
      "get" : {
        "operationId" : "review_get_workflows_by_kind",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow Type list",
          "explode" : true,
          "in" : "query",
          "name" : "workflow_types",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowListResponse"
                }
              }
            },
            "description" : "Workflow list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workflow by kind",
        "tags" : [ "Review" ]
      },
      "post" : {
        "operationId" : "review_create_workflow_with_kind",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : false,
          "in" : "path",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateWorkflowRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureResponse"
                }
              }
            },
            "description" : "Texture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Workflow with kind",
        "tags" : [ "Review" ]
      }
    },
    "/rooms" : {
      "get" : {
        "operationId" : "room_get_rooms",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID",
          "explode" : true,
          "in" : "query",
          "name" : "bim_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "BimRevision ID",
          "explode" : true,
          "in" : "query",
          "name" : "bim_revision_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoomListResponse"
                }
              }
            },
            "description" : "Room list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Room list",
        "tags" : [ "Room" ]
      },
      "post" : {
        "operationId" : "room_create_room",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateRoomRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoomResponse"
                }
              }
            },
            "description" : "Room"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Room",
        "tags" : [ "Room" ]
      }
    },
    "/rooms/mock" : {
      "get" : {
        "operationId" : "room_mock_rooms",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoomListResponse"
                }
              }
            },
            "description" : "Room list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Room mock list",
        "tags" : [ "Room" ]
      }
    },
    "/rooms/{id}" : {
      "delete" : {
        "operationId" : "room_delete_room",
        "parameters" : [ {
          "description" : "Room ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Room",
        "tags" : [ "Room" ]
      },
      "get" : {
        "operationId" : "room_get_room",
        "parameters" : [ {
          "description" : "Room ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoomResponse"
                }
              }
            },
            "description" : "Room"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Room",
        "tags" : [ "Room" ]
      },
      "put" : {
        "operationId" : "room_update_room",
        "parameters" : [ {
          "description" : "Room ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateRoomRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoomResponse"
                }
              }
            },
            "description" : "Room"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Room",
        "tags" : [ "Room" ]
      }
    },
    "/rooms/{id}/clear_fields" : {
      "put" : {
        "operationId" : "room_clear_fields",
        "parameters" : [ {
          "description" : "Room ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Room fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "phase", "style", "geometry" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Room" ]
      }
    },
    "/rooms/{id}/publish" : {
      "delete" : {
        "operationId" : "room_unpublish_room",
        "parameters" : [ {
          "description" : "Room ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoomResponse"
                }
              }
            },
            "description" : "Room"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish AnnotationLayer",
        "tags" : [ "Room" ]
      },
      "put" : {
        "operationId" : "room_publish_room",
        "parameters" : [ {
          "description" : "Room ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoomResponse"
                }
              }
            },
            "description" : "Room"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish Room",
        "tags" : [ "Room" ]
      }
    },
    "/searches/counts" : {
      "get" : {
        "operationId" : "search_get_search_counts",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "조건에 맞는 Workspace를 필터링 하며, 콤마(,)로 구분된 여러개의 조건을 입력할 수 있다.\n\n가능한 조건 및 입력값\n* state={created, active, inactive}\n",
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Pointcloud Filter",
          "explode" : false,
          "in" : "query",
          "name" : "pointcloud_filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "kind!:sub",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchCountResponse"
                }
              }
            },
            "description" : "Search counts"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Counts of Search Result",
        "tags" : [ "Search" ]
      }
    },
    "/sessions" : {
      "delete" : {
        "description" : "현재 세션을 삭제하여 로그아웃 한다. 이후에는 이 세션으로부터 생성된 모든 access token 또는 refresh token을 사용할 수 없다.",
        "operationId" : "session_delete_session",
        "responses" : {
          "204" : {
            "description" : "Session destroyed"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Session Destroy",
        "tags" : [ "Session" ]
      },
      "get" : {
        "description" : "현재 사용자의 세션을 전달하며, 현재 팀, 현재 워크스페이스 등의 내용을 포함한다.",
        "operationId" : "session_get_session",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionResponse"
                }
              }
            },
            "description" : "Session"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get current session",
        "tags" : [ "Session" ]
      }
    },
    "/sessions/sagemaker_invoke_credentials" : {
      "post" : {
        "description" : "Sagemaker의 endpoint를 invoke하기 위한 임시 credential 생성",
        "operationId" : "session_create_sagemaker_invoke_credentials",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AwsCredentialsResponse"
                }
              }
            },
            "description" : "AWS Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Sagemaker Invoke Credentials",
        "tags" : [ "Session" ]
      }
    },
    "/sightinsights/bookmarks/{key}" : {
      "delete" : {
        "operationId" : "siteinsights_delete_bookmark",
        "parameters" : [ {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Bookmark",
        "tags" : [ "Siteinsights" ]
      },
      "get" : {
        "operationId" : "siteinsights_get_bookmark",
        "parameters" : [ {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkResponse"
                }
              }
            },
            "description" : "Bookmark"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bookmark",
        "tags" : [ "Siteinsights" ]
      },
      "put" : {
        "operationId" : "siteinsights_update_bookmark",
        "parameters" : [ {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateBookmarkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkResponse"
                }
              }
            },
            "description" : "Bookmark"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Bookmark",
        "tags" : [ "Siteinsights" ]
      }
    },
    "/sightinsights/bookmarks/{key}/meta" : {
      "get" : {
        "operationId" : "siteinsights_bookmark_get_meta",
        "parameters" : [ {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bookmark Meta",
        "tags" : [ "Siteinsights" ]
      },
      "put" : {
        "operationId" : "siteinsights_bookmark_update_meta",
        "parameters" : [ {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Bookmark Meta",
        "tags" : [ "Siteinsights" ]
      }
    },
    "/sightinsights/bookmarks/{key}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "siteinsights_bookmark_get_meta_by_key",
        "parameters" : [ {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Bookmark Meta by key",
        "tags" : [ "Siteinsights" ]
      },
      "put" : {
        "operationId" : "siteinsights_bookmark_update_meta_by_key",
        "parameters" : [ {
          "description" : "Bookmark key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Bookmark Meta",
        "tags" : [ "Siteinsights" ]
      }
    },
    "/signups" : {
      "post" : {
        "operationId" : "signup_signup",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/SignUpRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthenticateResponse"
                }
              }
            },
            "description" : "Authentication"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          }
        },
        "summary" : "Signup with new team",
        "tags" : [ "Signup" ]
      }
    },
    "/signups/facility" : {
      "post" : {
        "operationId" : "signup_signup_on_facility",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/FacilitySignupRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthenticateResponse"
                }
              }
            },
            "description" : "Authentication"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "summary" : "Signup with facility",
        "tags" : [ "Signup" ]
      }
    },
    "/signups/facility/request_email_confirmation" : {
      "post" : {
        "operationId" : "signup_request_email_confirmation_for_facility",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/FacilityRequestEmailConfirmationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestEmailConfirmationResponse"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "summary" : "Request email confirmation to facility signup",
        "tags" : [ "Signup" ]
      }
    },
    "/signups/facility/whitelist" : {
      "get" : {
        "operationId" : "signup_get_facility_whitelist",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SelfSignupWhitelistResponse"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "summary" : "Get whitelist of facility",
        "tags" : [ "Signup" ]
      }
    },
    "/signups/request_email_confirmation" : {
      "post" : {
        "operationId" : "signup_request_email_confirmation",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/RequestEmailConfirmationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestEmailConfirmationResponse"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          }
        },
        "summary" : "Request email confirmation to signup",
        "tags" : [ "Signup" ]
      }
    },
    "/signups/review" : {
      "post" : {
        "operationId" : "signup_signup_on_review",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ReviewSignupRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthenticateResponse"
                }
              }
            },
            "description" : "Authentication"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "summary" : "Signup with review",
        "tags" : [ "Signup" ]
      }
    },
    "/signups/review/request_email_confirmation" : {
      "post" : {
        "operationId" : "signup_request_email_confirmation_for_review",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ReviewRequestEmailConfirmationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestEmailConfirmationResponse"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "summary" : "Request email confirmation to review signup",
        "tags" : [ "Signup" ]
      }
    },
    "/signups/review/whitelist" : {
      "get" : {
        "operationId" : "signup_get_review_whitelist",
        "parameters" : [ {
          "description" : "Review key",
          "explode" : true,
          "in" : "query",
          "name" : "review_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SelfSignupWhitelistResponse"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "summary" : "Get whitelist of review",
        "tags" : [ "Signup" ]
      }
    },
    "/signups/team" : {
      "post" : {
        "description" : "기존 팀에 가입한다. Self-signup의 경우는 `confirmation_token`이, 초대 받은 경우는 `invitation_token`이 필요하다.",
        "operationId" : "signup_signup_on_team",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TeamSignupRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthenticateResponse"
                }
              }
            },
            "description" : "Authentication"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "summary" : "Signup to exist team by invitation or self-signup",
        "tags" : [ "Signup" ]
      }
    },
    "/signups/team/request_email_confirmation" : {
      "post" : {
        "operationId" : "signup_request_email_confirmation_for_team",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TeamRequestEmailConfirmationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestEmailConfirmationResponse"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          }
        },
        "summary" : "Request email confirmation to team signup",
        "tags" : [ "Signup" ]
      }
    },
    "/signups/workspace" : {
      "post" : {
        "operationId" : "signup_signup_on_workspace",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/WorkspaceSignupRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthenticateResponse"
                }
              }
            },
            "description" : "Authentication"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "summary" : "Signup with workspace",
        "tags" : [ "Signup" ]
      }
    },
    "/signups/workspace/request_email_confirmation" : {
      "post" : {
        "operationId" : "signup_request_email_confirmation_for_workspace",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/WorkspaceRequestEmailConfirmationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestEmailConfirmationResponse"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          }
        },
        "summary" : "Request email confirmation to workspace signup",
        "tags" : [ "Signup" ]
      }
    },
    "/signups/workspace/whitelist" : {
      "get" : {
        "operationId" : "signup_get_workspace_whitelist",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : true,
          "in" : "query",
          "name" : "workspace_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SelfSignupWhitelistResponse"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "summary" : "Get whitelist of workspace",
        "tags" : [ "Signup" ]
      }
    },
    "/siteinsights/boomarks/me" : {
      "get" : {
        "operationId" : "siteinsights_get_me_bookmarks",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkListResponse"
                }
              }
            },
            "description" : "Bookmark list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Siteinsights Bookmark List",
        "tags" : [ "Siteinsights" ]
      },
      "post" : {
        "operationId" : "siteinsights_create_me_bookmark",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateBookmarkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkResponse"
                }
              }
            },
            "description" : "Bookmark"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Me Siteinsights Bookmark",
        "tags" : [ "Siteinsights" ]
      }
    },
    "/siteinsights/boomarks/team" : {
      "get" : {
        "operationId" : "siteinsights_get_team_bookmarks",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkListResponse"
                }
              }
            },
            "description" : "Bookmark list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Siteinsights Bookmark List",
        "tags" : [ "Siteinsights" ]
      },
      "post" : {
        "operationId" : "siteinsights_create_team_bookmark",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateBookmarkRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkResponse"
                }
              }
            },
            "description" : "Bookmark"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Team Siteinsights Bookmark",
        "tags" : [ "Siteinsights" ]
      }
    },
    "/siteinsights/completion_history" : {
      "get" : {
        "operationId" : "siteinsights_get_completion_history",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `from_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "to_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Metric ID",
          "explode" : true,
          "in" : "query",
          "name" : "metric_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Vendor Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "vendor_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Task Id array",
          "explode" : false,
          "in" : "query",
          "name" : "task_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Phase ID list",
          "explode" : false,
          "in" : "query",
          "name" : "phase_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Category ID list",
          "explode" : false,
          "in" : "query",
          "name" : "category_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workarea ID list",
          "explode" : false,
          "in" : "query",
          "name" : "workarea_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "text/csv" : { }
            },
            "description" : "Completion history csv"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get csv file of completion history",
        "tags" : [ "Siteinsights" ]
      }
    },
    "/siteinsights/element_records" : {
      "get" : {
        "operationId" : "siteinsights_get_element_records",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Vendor Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "vendor_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Category ID list",
          "explode" : false,
          "in" : "query",
          "name" : "category_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Phase ID list",
          "explode" : false,
          "in" : "query",
          "name" : "phase_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workarea ID list",
          "explode" : false,
          "in" : "query",
          "name" : "workarea_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "timestamp of the version to bypass cache and ensure the retrieval of the most recent version of the data",
          "explode" : true,
          "in" : "query",
          "name" : "versioned_at",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ElementRecordListResponse"
                }
              }
            },
            "description" : "ElementRecord list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "element record list",
        "tags" : [ "Siteinsights" ]
      },
      "put" : {
        "operationId" : "siteinsights_bulk_element_record",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkElementRecordRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk ElementRecord",
        "tags" : [ "Siteinsights" ]
      }
    },
    "/siteinsights/element_records/{oid}" : {
      "put" : {
        "operationId" : "siteinsights_update_element_record",
        "parameters" : [ {
          "description" : "Element Trace Document ID",
          "explode" : false,
          "in" : "path",
          "name" : "oid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateElementRecordRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ElementRecordUpdateResponse"
                }
              }
            },
            "description" : "ElementRecord"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update ElementRecord",
        "tags" : [ "Siteinsights" ]
      }
    },
    "/siteinsights/scroll" : {
      "get" : {
        "operationId" : "siteinsights_scroll_progresses",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Bim ID",
          "explode" : true,
          "in" : "query",
          "name" : "bim_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProgressListResponse"
                }
              }
            },
            "description" : "Progress list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "list all of progresses with schedules",
        "tags" : [ "Siteinsights" ]
      }
    },
    "/siteinsights/task_records" : {
      "get" : {
        "operationId" : "siteinsights_get_task_records",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `to_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "from_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "UTC+0 based. Must be used together with `from_at`.",
          "explode" : true,
          "in" : "query",
          "name" : "to_at",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Metric ID",
          "explode" : true,
          "in" : "query",
          "name" : "metric_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Vendor Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "vendor_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Task Id array",
          "explode" : false,
          "in" : "query",
          "name" : "task_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Phase ID list",
          "explode" : false,
          "in" : "query",
          "name" : "phase_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Category ID list",
          "explode" : false,
          "in" : "query",
          "name" : "category_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workarea ID list",
          "explode" : false,
          "in" : "query",
          "name" : "workarea_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "text/csv" : { }
            },
            "description" : "Task records csv"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get csv file of task records",
        "tags" : [ "Siteinsights" ]
      }
    },
    "/sketches" : {
      "get" : {
        "operationId" : "sketch_get_sketches",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SketchListResponse"
                }
              }
            },
            "description" : "Sketch list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Sketch list",
        "tags" : [ "Sketch" ]
      },
      "post" : {
        "operationId" : "sketch_create_sketch",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateSketchRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SketchResponse"
                }
              }
            },
            "description" : "Sketch"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Sketch",
        "tags" : [ "Sketch" ]
      }
    },
    "/sketches/mock" : {
      "get" : {
        "operationId" : "sketch_mock_sketches",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SketchListResponse"
                }
              }
            },
            "description" : "Sketch list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Sketch mock list",
        "tags" : [ "Sketch" ]
      }
    },
    "/sketches/{id}" : {
      "delete" : {
        "operationId" : "sketch_delete_sketch",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Sketch",
        "tags" : [ "Sketch" ]
      },
      "get" : {
        "operationId" : "sketch_get_sketch",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SketchResponse"
                }
              }
            },
            "description" : "Sketch"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Sketch",
        "tags" : [ "Sketch" ]
      },
      "put" : {
        "operationId" : "sketch_update_sketch",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateSketchRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SketchResponse"
                }
              }
            },
            "description" : "Sketch"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Sketch",
        "tags" : [ "Sketch" ]
      }
    },
    "/sketches/{id}/check_uploading" : {
      "put" : {
        "operationId" : "sketch_check_uploading",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SketchResponse"
                }
              }
            },
            "description" : "Sketch"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check sketch uploading",
        "tags" : [ "Sketch" ]
      }
    },
    "/sketches/{id}/clear_fields" : {
      "put" : {
        "operationId" : "sketch_clear_fields",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Sketch fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Sketch" ]
      }
    },
    "/sketches/{id}/download" : {
      "get" : {
        "description" : "Redirect to sketch download link",
        "operationId" : "sketch_download_sketch",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to sketch download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download sketch",
        "tags" : [ "Sketch" ]
      }
    },
    "/sketches/{id}/invoke" : {
      "post" : {
        "description" : "invoke: https://cupixrnd.atlassian.net/browse/TSLA-2122 참조",
        "operationId" : "sketch_invoke_sketch",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/InvokeSketchRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SketchResponse"
                }
              }
            },
            "description" : "Sketch"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Invoke Sketch",
        "tags" : [ "Sketch" ]
      }
    },
    "/sketches/{id}/meta" : {
      "get" : {
        "operationId" : "sketch_get_meta",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Sketch Meta",
        "tags" : [ "Sketch" ]
      },
      "put" : {
        "operationId" : "sketch_update_meta",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Sketch Meta",
        "tags" : [ "Sketch" ]
      }
    },
    "/sketches/{id}/meta/{meta_key}" : {
      "get" : {
        "description" : "Returns Sketch Meta",
        "operationId" : "sketch_get_meta_by_key",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Sketch Meta by key",
        "tags" : [ "Sketch" ]
      },
      "put" : {
        "operationId" : "sketch_update_meta_by_key",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Sketch Meta by key",
        "tags" : [ "Sketch" ]
      }
    },
    "/sketches/{id}/resources" : {
      "get" : {
        "operationId" : "sketch_get_resources",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceListResponse"
                }
              }
            },
            "description" : "Resource list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Sketch Resources",
        "tags" : [ "Sketch" ]
      },
      "post" : {
        "operationId" : "sketch_create_resource",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateResourceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Sketch Resource",
        "tags" : [ "Sketch" ]
      }
    },
    "/sketches/{id}/resources/{kind}" : {
      "delete" : {
        "operationId" : "sketch_delete_resource",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Sketch Resource",
        "tags" : [ "Sketch" ]
      },
      "get" : {
        "operationId" : "sketch_get_resource",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Sketch Resource",
        "tags" : [ "Sketch" ]
      }
    },
    "/sketches/{id}/resources/{kind}/check_uploading" : {
      "put" : {
        "operationId" : "sketch_check_resource_uploading",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Sketch Resource uploading",
        "tags" : [ "Sketch" ]
      }
    },
    "/sketches/{id}/resources/{kind}/download" : {
      "get" : {
        "description" : "Redirect to sketch resource download link",
        "operationId" : "sketch_download_resource",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Sketch Resource",
        "tags" : [ "Sketch" ]
      }
    },
    "/sketches/{id}/resources/{kind}/upload_url" : {
      "post" : {
        "operationId" : "sketch_create_resource_upload_url",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Resource kind",
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceResponse"
                }
              }
            },
            "description" : "Resource"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Sketch Resource upload url",
        "tags" : [ "Sketch" ]
      }
    },
    "/sketches/{id}/upload_url" : {
      "post" : {
        "operationId" : "sketch_create_upload_url",
        "parameters" : [ {
          "description" : "Sketch ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SketchResponse"
                }
              }
            },
            "description" : "Sketch"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create sketch upload url",
        "tags" : [ "Sketch" ]
      }
    },
    "/statistics" : {
      "get" : {
        "operationId" : "statistics_get_statistics",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/StatisticListResponse"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Statistics List",
        "tags" : [ "Statistics" ]
      }
    },
    "/statuses" : {
      "get" : {
        "operationId" : "status_get_statuses",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : true,
          "in" : "query",
          "name" : "workflow_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Workflow ID list",
          "explode" : false,
          "in" : "query",
          "name" : "workflow_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Status ID List",
          "explode" : true,
          "in" : "query",
          "name" : "ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatusListResponse"
                }
              }
            },
            "description" : "Status list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "status list",
        "tags" : [ "Status" ]
      },
      "post" : {
        "operationId" : "status_create_status",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateStatusRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatusResponse"
                }
              }
            },
            "description" : "Status"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Status",
        "tags" : [ "Status" ]
      }
    },
    "/statuses/{id}" : {
      "delete" : {
        "operationId" : "status_delete_status",
        "parameters" : [ {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Status",
        "tags" : [ "Status" ]
      },
      "get" : {
        "operationId" : "status_get_status",
        "parameters" : [ {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatusResponse"
                }
              }
            },
            "description" : "Status"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Status",
        "tags" : [ "Status" ]
      },
      "put" : {
        "operationId" : "status_update_status",
        "parameters" : [ {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateStatusRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatusResponse"
                }
              }
            },
            "description" : "Status"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Status",
        "tags" : [ "Status" ]
      }
    },
    "/statuses/{id}/meta" : {
      "get" : {
        "operationId" : "status_get_meta",
        "parameters" : [ {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Status Meta",
        "tags" : [ "Status" ]
      },
      "put" : {
        "operationId" : "status_update_meta",
        "parameters" : [ {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Status Meta",
        "tags" : [ "Status" ]
      }
    },
    "/statuses/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "status_get_meta_by_key",
        "parameters" : [ {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Status Meta by key",
        "tags" : [ "Status" ]
      },
      "put" : {
        "operationId" : "status_update_meta_by_key",
        "parameters" : [ {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Status Meta",
        "tags" : [ "Status" ]
      }
    },
    "/statuses/{id}/position" : {
      "put" : {
        "operationId" : "status_update_position",
        "parameters" : [ {
          "description" : "Status ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePositionRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatusResponse"
                }
              }
            },
            "description" : "Status"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Status Position",
        "tags" : [ "Status" ]
      }
    },
    "/storages" : {
      "get" : {
        "operationId" : "storage_get_storages",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageListResponse"
                }
              }
            },
            "description" : "Storage list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Storage List",
        "tags" : [ "Storage" ]
      }
    },
    "/storages/mock" : {
      "get" : {
        "operationId" : "storage_mock_storages",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageListResponse"
                }
              }
            },
            "description" : "Storage list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Storage mock List",
        "tags" : [ "Storage" ]
      }
    },
    "/storages/{id}/finalize" : {
      "put" : {
        "operationId" : "storage_finalize_storage_creation",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Storage ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/FinalizeStorageCreationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageResponse"
                }
              }
            },
            "description" : "Storage"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Finalize storage creation with token",
        "tags" : [ "Storage" ]
      }
    },
    "/subscriptions" : {
      "delete" : {
        "operationId" : "subscription_unsubscribe",
        "parameters" : [ {
          "description" : "Model Type",
          "explode" : true,
          "in" : "query",
          "name" : "model_type",
          "required" : true,
          "schema" : {
            "enum" : [ "Facility" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Model ID or Key",
          "explode" : true,
          "in" : "query",
          "name" : "model_id",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionResponse"
                }
              }
            },
            "description" : "Subscription"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete subscription",
        "tags" : [ "Subscription" ]
      },
      "get" : {
        "operationId" : "subscription_get_subscriptions",
        "parameters" : [ {
          "description" : "Model Type",
          "explode" : true,
          "in" : "query",
          "name" : "model_type",
          "required" : true,
          "schema" : {
            "enum" : [ "Facility" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Model ID or Key",
          "explode" : true,
          "in" : "query",
          "name" : "model_id",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionListResponse"
                }
              }
            },
            "description" : "Subscription list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Subscription list",
        "tags" : [ "Subscription" ]
      },
      "put" : {
        "operationId" : "subscription_subscribe",
        "parameters" : [ {
          "description" : "Model Type",
          "explode" : true,
          "in" : "query",
          "name" : "model_type",
          "required" : true,
          "schema" : {
            "enum" : [ "Facility" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Model ID or Key",
          "explode" : true,
          "in" : "query",
          "name" : "model_id",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionResponse"
                }
              }
            },
            "description" : "Subscription"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create subscription",
        "tags" : [ "Subscription" ]
      }
    },
    "/tasks" : {
      "get" : {
        "operationId" : "task_get_tasks",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Phase ID list",
          "explode" : false,
          "in" : "query",
          "name" : "phase_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Category ID list",
          "explode" : false,
          "in" : "query",
          "name" : "category_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Vendor Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "vendor_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workarea ID list",
          "explode" : false,
          "in" : "query",
          "name" : "workarea_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskListResponse"
                }
              }
            },
            "description" : "Task list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Task list",
        "tags" : [ "Task" ]
      },
      "post" : {
        "operationId" : "task_create_task",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateTaskRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskResponse"
                }
              }
            },
            "description" : "Task"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Task",
        "tags" : [ "Task" ]
      },
      "put" : {
        "operationId" : "task_bulk_task",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkTaskRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Task",
        "tags" : [ "Task" ]
      }
    },
    "/tasks/validate" : {
      "put" : {
        "operationId" : "task_validate_bulk_parameter_task",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TaskValidationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Validate Task Bulk Parameter",
        "tags" : [ "Task" ]
      }
    },
    "/tasks/{id}" : {
      "get" : {
        "operationId" : "task_get_task",
        "parameters" : [ {
          "description" : "Task ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskResponse"
                }
              }
            },
            "description" : "Task"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Task",
        "tags" : [ "Task" ]
      },
      "put" : {
        "operationId" : "task_update_task",
        "parameters" : [ {
          "description" : "Task ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateTaskRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskResponse"
                }
              }
            },
            "description" : "Task"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Task",
        "tags" : [ "Task" ]
      }
    },
    "/tasks/{id}/meta" : {
      "get" : {
        "operationId" : "task_get_meta",
        "parameters" : [ {
          "description" : "Task ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Task Meta",
        "tags" : [ "Task" ]
      },
      "put" : {
        "operationId" : "task_update_meta",
        "parameters" : [ {
          "description" : "Task ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Task Meta",
        "tags" : [ "Task" ]
      }
    },
    "/tasks/{id}/meta/{meta_key}" : {
      "get" : {
        "description" : "Returns Task Meta",
        "operationId" : "task_get_meta_by_key",
        "parameters" : [ {
          "description" : "Task ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Task Meta by key",
        "tags" : [ "Task" ]
      },
      "put" : {
        "operationId" : "task_update_meta_by_key",
        "parameters" : [ {
          "description" : "Task ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Task Meta",
        "tags" : [ "Task" ]
      }
    },
    "/tasks/{id}/purge" : {
      "delete" : {
        "operationId" : "task_purge_task",
        "parameters" : [ {
          "description" : "Task ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Task",
        "tags" : [ "Task" ]
      }
    },
    "/teams" : {
      "get" : {
        "operationId" : "team_get_team",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamResponse"
                }
              }
            },
            "description" : "Team"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get current team information",
        "tags" : [ "Team" ]
      },
      "patch" : {
        "operationId" : "team_update_team",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateTeamRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamResponse"
                }
              }
            },
            "description" : "Team"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update team information",
        "tags" : [ "Team" ]
      }
    },
    "/teams/clear_fields" : {
      "put" : {
        "operationId" : "team_clear_fields",
        "parameters" : [ {
          "description" : "Team fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "logo", "email_domain" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Team" ]
      }
    },
    "/teams/contact_sales" : {
      "post" : {
        "operationId" : "team_contact_sales",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ContactSalesRequestBody"
        },
        "responses" : {
          "200" : {
            "description" : "ok"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Send e-mails to cupix sales team",
        "tags" : [ "Team" ]
      }
    },
    "/teams/credit_transactions" : {
      "get" : {
        "operationId" : "team_get_credit_transactions",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditTransactionListResponse"
                }
              }
            },
            "description" : "License list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get credit transactions history on Team",
        "tags" : [ "Team" ]
      }
    },
    "/teams/disable_mfa" : {
      "put" : {
        "operationId" : "team_disable_mfa",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamResponse"
                }
              }
            },
            "description" : "Team"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Disable MFA",
        "tags" : [ "Team" ]
      }
    },
    "/teams/disable_review_preview_capture" : {
      "put" : {
        "operationId" : "team_disable_review_preview_capture",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamResponse"
                }
              }
            },
            "description" : "Team"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Disable review preview capture access",
        "tags" : [ "Team" ]
      }
    },
    "/teams/disable_review_public_access" : {
      "put" : {
        "operationId" : "team_disable_review_public_access",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamResponse"
                }
              }
            },
            "description" : "Team"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Disable review publish",
        "tags" : [ "Team" ]
      }
    },
    "/teams/disable_signed_content" : {
      "put" : {
        "operationId" : "team_disable_signed_content",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamResponse"
                }
              }
            },
            "description" : "Team"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Disable signed content",
        "tags" : [ "Team" ]
      }
    },
    "/teams/enable_mfa" : {
      "put" : {
        "operationId" : "team_enable_mfa",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamResponse"
                }
              }
            },
            "description" : "Team"
          },
          "401" : {
            "description" : "Unauthorized request"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Enable MFA",
        "tags" : [ "Team" ]
      }
    },
    "/teams/enable_review_preview_capture" : {
      "put" : {
        "operationId" : "team_enable_review_preview_capture",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamResponse"
                }
              }
            },
            "description" : "Team"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Enable review preview capture access",
        "tags" : [ "Team" ]
      }
    },
    "/teams/enable_review_public_access" : {
      "put" : {
        "operationId" : "team_enable_review_public_access",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamResponse"
                }
              }
            },
            "description" : "Team"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Enable review publish",
        "tags" : [ "Team" ]
      }
    },
    "/teams/enable_signed_content" : {
      "put" : {
        "operationId" : "team_enable_signed_content",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamResponse"
                }
              }
            },
            "description" : "Team"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Enable signed content",
        "tags" : [ "Team" ]
      }
    },
    "/teams/entity_parameters" : {
      "get" : {
        "operationId" : "team_get_entity_parameter",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterListResponse"
                }
              }
            },
            "description" : "EntityParameter list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Team EntityParameter list",
        "tags" : [ "Team" ]
      },
      "post" : {
        "operationId" : "team_create_entity_parameter",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateEntityParameterRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterResponse"
                }
              }
            },
            "description" : "EntityParameter"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Team EntityParameter",
        "tags" : [ "Team" ]
      }
    },
    "/teams/find_by_domain/{domain}" : {
      "get" : {
        "operationId" : "team_find_by_domain",
        "parameters" : [ {
          "description" : "Team domain",
          "explode" : false,
          "in" : "path",
          "name" : "domain",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamResponse"
                }
              }
            },
            "description" : "Team"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "summary" : "Find team by domain",
        "tags" : [ "Team" ]
      }
    },
    "/teams/invitation" : {
      "post" : {
        "description" : "다른 사용자를 본인의 팀에 초대한다.",
        "operationId" : "team_invitation",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TeamInvitationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamInvitationSentResponse"
                }
              }
            },
            "description" : "Invitation sent"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Invite people to team",
        "tags" : [ "Team" ]
      }
    },
    "/teams/licenses" : {
      "get" : {
        "operationId" : "team_get_licenses",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "billing_state filter\n",
          "explode" : true,
          "in" : "query",
          "name" : "billing_state",
          "required" : false,
          "schema" : {
            "enum" : [ "none", "active", "expired" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "trial_state filter\n",
          "explode" : true,
          "in" : "query",
          "name" : "trial_state",
          "required" : false,
          "schema" : {
            "enum" : [ "none", "active", "expired" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LicenseListResponse"
                }
              }
            },
            "description" : "License list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get licenses on Team",
        "tags" : [ "Team" ]
      }
    },
    "/teams/resend_invitation" : {
      "post" : {
        "description" : "이미 초대한 사용자에게 초대 메일을 재전송한다.",
        "operationId" : "team_resend_invitation",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ResendTeamInvitationRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResendTeamInvitationSentResponse"
                }
              }
            },
            "description" : "Invitation sent"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Resend invitation mail",
        "tags" : [ "Team" ]
      }
    },
    "/teleports" : {
      "get" : {
        "operationId" : "teleport_get_teleports",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Record ID",
          "explode" : true,
          "in" : "query",
          "name" : "record_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Teleport Source Key",
          "explode" : true,
          "in" : "query",
          "name" : "source_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Teleport Source Type",
          "explode" : true,
          "in" : "query",
          "name" : "source_type",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeleportListResponse"
                }
              }
            },
            "description" : "Teleport list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "teleport list",
        "tags" : [ "Teleport" ]
      },
      "post" : {
        "operationId" : "teleport_create_teleport",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateTeleportRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeleportResponse"
                }
              }
            },
            "description" : "Teleport"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Teleport",
        "tags" : [ "Teleport" ]
      }
    },
    "/teleports/mock" : {
      "get" : {
        "operationId" : "teleport_mock_teleports",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeleportListResponse"
                }
              }
            },
            "description" : "Teleport list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "teleport mock list",
        "tags" : [ "Teleport" ]
      }
    },
    "/teleports/{id}" : {
      "delete" : {
        "operationId" : "teleport_delete_teleport",
        "parameters" : [ {
          "description" : "Teleport ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Teleport",
        "tags" : [ "Teleport" ]
      },
      "get" : {
        "operationId" : "teleport_get_teleport",
        "parameters" : [ {
          "description" : "Teleport ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeleportResponse"
                }
              }
            },
            "description" : "Teleport"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Teleport",
        "tags" : [ "Teleport" ]
      },
      "put" : {
        "operationId" : "teleport_update_teleport",
        "parameters" : [ {
          "description" : "Teleport ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateTeleportRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeleportResponse"
                }
              }
            },
            "description" : "Teleport"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Teleport",
        "tags" : [ "Teleport" ]
      }
    },
    "/teleports/{id}/meta" : {
      "get" : {
        "operationId" : "teleport_get_meta",
        "parameters" : [ {
          "description" : "Teleport ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Teleport Meta",
        "tags" : [ "Teleport" ]
      },
      "put" : {
        "operationId" : "teleport_update_meta",
        "parameters" : [ {
          "description" : "Teleport ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Teleport Meta",
        "tags" : [ "Teleport" ]
      }
    },
    "/teleports/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "teleport_get_meta_by_key",
        "parameters" : [ {
          "description" : "Teleport ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Teleport Meta by key",
        "tags" : [ "Teleport" ]
      },
      "put" : {
        "operationId" : "teleport_update_meta_by_key",
        "parameters" : [ {
          "description" : "Teleport ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Teleport Meta",
        "tags" : [ "Teleport" ]
      }
    },
    "/textures" : {
      "get" : {
        "operationId" : "texture_get_textures",
        "parameters" : [ {
          "explode" : true,
          "in" : "query",
          "name" : "kind",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "True if System Texture",
          "explode" : true,
          "in" : "query",
          "name" : "is_system_texture",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureListResponse"
                }
              }
            },
            "description" : "Texture list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "texture list",
        "tags" : [ "Texture" ]
      },
      "post" : {
        "operationId" : "texture_create_texture",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateTextureRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureResponse"
                }
              }
            },
            "description" : "Texture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Texture",
        "tags" : [ "Texture" ]
      }
    },
    "/textures/{id}" : {
      "get" : {
        "operationId" : "texture_get_texture",
        "parameters" : [ {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureResponse"
                }
              }
            },
            "description" : "Texture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Texture",
        "tags" : [ "Texture" ]
      },
      "put" : {
        "operationId" : "texture_update_texture",
        "parameters" : [ {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateTextureRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureResponse"
                }
              }
            },
            "description" : "Texture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Texture",
        "tags" : [ "Texture" ]
      }
    },
    "/textures/{id}/meta" : {
      "get" : {
        "operationId" : "texture_get_meta",
        "parameters" : [ {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Texture Meta",
        "tags" : [ "Texture" ]
      },
      "put" : {
        "operationId" : "texture_update_meta",
        "parameters" : [ {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Texture Meta",
        "tags" : [ "Texture" ]
      }
    },
    "/textures/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "texture_get_meta_by_key",
        "parameters" : [ {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Texture Meta by key",
        "tags" : [ "Texture" ]
      },
      "put" : {
        "operationId" : "texture_update_meta_by_key",
        "parameters" : [ {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Texture Meta",
        "tags" : [ "Texture" ]
      }
    },
    "/textures/{id}/trash" : {
      "put" : {
        "operationId" : "texture_trash_texture",
        "parameters" : [ {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash texture",
        "tags" : [ "Texture" ]
      }
    },
    "/textures/{kind}" : {
      "get" : {
        "operationId" : "texture_get_textures_by_kind",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureListResponse"
                }
              }
            },
            "description" : "Texture list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Textures by kind",
        "tags" : [ "Texture" ]
      },
      "post" : {
        "operationId" : "texture_create_texture_with_kind",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateTextureRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureResponse"
                }
              }
            },
            "description" : "Texture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Texture with kind",
        "tags" : [ "Texture" ]
      }
    },
    "/textures/{texture_id}/attachments" : {
      "get" : {
        "operationId" : "texture_get_attachments",
        "parameters" : [ {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "texture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment Attachable Id",
          "explode" : true,
          "in" : "query",
          "name" : "attachable_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Attachment Attachable Type",
          "explode" : true,
          "in" : "query",
          "name" : "attachable_type",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Attachment State",
          "explode" : true,
          "in" : "query",
          "name" : "state",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentListResponse"
                }
              }
            },
            "description" : "Attachment list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Texture Attachments",
        "tags" : [ "Texture" ]
      },
      "post" : {
        "operationId" : "texture_create_attachment",
        "parameters" : [ {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "texture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAttachmentRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Texture Attachment",
        "tags" : [ "Texture" ]
      }
    },
    "/textures/{texture_id}/attachments/{key}" : {
      "delete" : {
        "operationId" : "texture_delete_attachment",
        "parameters" : [ {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "texture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Texture Attachment",
        "tags" : [ "Texture" ]
      },
      "get" : {
        "operationId" : "texture_get_attachment",
        "parameters" : [ {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "texture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Texture Attachment",
        "tags" : [ "Texture" ]
      },
      "put" : {
        "operationId" : "texture_update_attachment",
        "parameters" : [ {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "texture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAttachmentRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Texture Attachment",
        "tags" : [ "Texture" ]
      }
    },
    "/textures/{texture_id}/attachments/{key}/check_uploading" : {
      "put" : {
        "operationId" : "texture_check_attachment_uploading",
        "parameters" : [ {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "texture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check Texture Attachment uploading",
        "tags" : [ "Texture" ]
      }
    },
    "/textures/{texture_id}/attachments/{key}/clear_fields" : {
      "put" : {
        "operationId" : "texture_clear_attachment_fields",
        "parameters" : [ {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "texture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Texture" ]
      }
    },
    "/textures/{texture_id}/attachments/{key}/download" : {
      "get" : {
        "description" : "Redirect to texture attachment download link",
        "operationId" : "texture_download_attachment",
        "parameters" : [ {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "texture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to attachment download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download Texture Attachment",
        "tags" : [ "Texture" ]
      }
    },
    "/textures/{texture_id}/attachments/{key}/upload_url" : {
      "post" : {
        "operationId" : "texture_create_attachment_upload_url",
        "parameters" : [ {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "texture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Texture Attachment upload url",
        "tags" : [ "Texture" ]
      }
    },
    "/tracking_plans" : {
      "get" : {
        "operationId" : "trackingplan_get_tracking_plans",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Phase ID list",
          "explode" : false,
          "in" : "query",
          "name" : "phase_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Category ID list",
          "explode" : false,
          "in" : "query",
          "name" : "category_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Vendor Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "vendor_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workarea Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "workarea_group_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrackingPlanListResponse"
                }
              }
            },
            "description" : "TrackingPlan list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Tracking Plan list",
        "tags" : [ "TrackingPlan" ]
      },
      "post" : {
        "operationId" : "trackingplan_create_tracking_plan",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateTrackingPlanRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrackingPlanResponse"
                }
              }
            },
            "description" : "TrackingPlan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Tracking Plan",
        "tags" : [ "TrackingPlan" ]
      },
      "put" : {
        "operationId" : "trackingplan_bulk_tracking_plan",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkTrackingPlanRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk TrackingPlan",
        "tags" : [ "TrackingPlan" ]
      }
    },
    "/tracking_plans/{id}" : {
      "get" : {
        "operationId" : "trackingplan_get_tracking_plan",
        "parameters" : [ {
          "description" : "Tracking Plan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrackingPlanResponse"
                }
              }
            },
            "description" : "TrackingPlan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Tracking Plan",
        "tags" : [ "TrackingPlan" ]
      },
      "put" : {
        "operationId" : "trackingplan_update_tracking_plan",
        "parameters" : [ {
          "description" : "Tracking Plan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateTrackingPlanRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrackingPlanResponse"
                }
              }
            },
            "description" : "TrackingPlan"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Tracking Plan",
        "tags" : [ "TrackingPlan" ]
      }
    },
    "/tracking_plans/{id}/meta" : {
      "get" : {
        "operationId" : "trackingplan_get_meta",
        "parameters" : [ {
          "description" : "Tracking Plan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Tracking Plan Meta",
        "tags" : [ "TrackingPlan" ]
      },
      "put" : {
        "operationId" : "trackingplan_update_meta",
        "parameters" : [ {
          "description" : "Tracking Plan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Tracking Plan Meta",
        "tags" : [ "TrackingPlan" ]
      }
    },
    "/tracking_plans/{id}/meta/{meta_key}" : {
      "get" : {
        "description" : "Returns Tracking Plan Meta",
        "operationId" : "trackingplan_get_meta_by_key",
        "parameters" : [ {
          "description" : "Tracking Plan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Tracking Plan Meta by key",
        "tags" : [ "TrackingPlan" ]
      },
      "put" : {
        "operationId" : "trackingplan_update_meta_by_key",
        "parameters" : [ {
          "description" : "Tracking Plan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Tracking Plan Meta",
        "tags" : [ "TrackingPlan" ]
      }
    },
    "/tracking_plans/{id}/purge" : {
      "delete" : {
        "operationId" : "trackingplan_purge_tracking_plan",
        "parameters" : [ {
          "description" : "Tracking Plan ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Tracking Plan",
        "tags" : [ "TrackingPlan" ]
      }
    },
    "/trashes" : {
      "get" : {
        "description" : "명시적으로 삭제된 아이템 (Workspace, Facility, Record, Level, Bim, Capture) 조회.",
        "operationId" : "trash_get_trashes",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TrashListResponse"
                }
              }
            },
            "description" : "Trashed item list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get trashed items",
        "tags" : [ "Trash" ]
      }
    },
    "/trashes/empty" : {
      "put" : {
        "description" : "Delete items in the Trash",
        "operationId" : "trash_empty",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trash is empty"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Empty trashed items",
        "tags" : [ "Trash" ]
      }
    },
    "/users" : {
      "get" : {
        "description" : "요청자의 Team에 속한 User 목록 조회",
        "operationId" : "user_get_users",
        "parameters" : [ {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserListResponse"
                }
              }
            },
            "description" : "User list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "User list",
        "tags" : [ "User" ]
      }
    },
    "/users/find_by_email" : {
      "get" : {
        "operationId" : "user_find_by_email",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "email",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            },
            "description" : "User"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "summary" : "Find user by email",
        "tags" : [ "User" ]
      }
    },
    "/users/mock" : {
      "get" : {
        "operationId" : "user_mock_users",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserListResponse"
                }
              }
            },
            "description" : "User list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "User mock list",
        "tags" : [ "User" ]
      }
    },
    "/users/request_reset_password" : {
      "post" : {
        "operationId" : "user_request_reset_password",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/RequestResetPasswordRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailResponse"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          }
        },
        "summary" : "Request reset password instruction email",
        "tags" : [ "User" ]
      }
    },
    "/users/reset_password" : {
      "put" : {
        "operationId" : "user_reset_password",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ResetPasswordRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailResponse"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          }
        },
        "summary" : "Reset password with token",
        "tags" : [ "User" ]
      }
    },
    "/users/{id}" : {
      "delete" : {
        "operationId" : "user_delete_user",
        "parameters" : [ {
          "description" : "User ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete user",
        "tags" : [ "User" ]
      },
      "put" : {
        "description" : "사용자의 정보 변경",
        "operationId" : "user_update_user",
        "parameters" : [ {
          "description" : "User ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateUserRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            },
            "description" : "User"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update user",
        "tags" : [ "User" ]
      }
    },
    "/users/{id}/disable_mfa" : {
      "put" : {
        "operationId" : "user_disable_mfa",
        "parameters" : [ {
          "description" : "User ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            },
            "description" : "User"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Disable MFA",
        "tags" : [ "User" ]
      }
    },
    "/users/{id}/enable_mfa" : {
      "put" : {
        "operationId" : "user_enable_mfa",
        "parameters" : [ {
          "description" : "User ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/MfaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            },
            "description" : "User"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Enable MFA",
        "tags" : [ "User" ]
      }
    },
    "/users/{id}/groups" : {
      "get" : {
        "description" : "선택한 사용자가 속한 Group 목록 조회",
        "operationId" : "user_get_groups",
        "parameters" : [ {
          "description" : "User ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupListResponse"
                }
              }
            },
            "description" : "Group list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Group list by user",
        "tags" : [ "User" ]
      }
    },
    "/users/{id}/permitted_reviews" : {
      "get" : {
        "operationId" : "user_get_permitted_reviews",
        "parameters" : [ {
          "description" : "User ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Workspace ID",
          "explode" : true,
          "in" : "query",
          "name" : "workspace_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Team ID",
          "explode" : true,
          "in" : "query",
          "name" : "team_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewListResponse"
                }
              }
            },
            "description" : "Review list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "permittted review list by user",
        "tags" : [ "User" ]
      }
    },
    "/videos" : {
      "get" : {
        "operationId" : "video_get_videos",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Capture ID",
          "explode" : true,
          "in" : "query",
          "name" : "capture_id",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoListResponse"
                }
              }
            },
            "description" : "Video list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Video list",
        "tags" : [ "Video" ]
      },
      "post" : {
        "operationId" : "video_create_video",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateVideoRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoResponse"
                }
              }
            },
            "description" : "Video"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Video",
        "tags" : [ "Video" ]
      }
    },
    "/videos/mock" : {
      "get" : {
        "operationId" : "video_mock_videos",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoListResponse"
                }
              }
            },
            "description" : "Video list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Video mock list",
        "tags" : [ "Video" ]
      }
    },
    "/videos/upload_candidates" : {
      "get" : {
        "operationId" : "video_get_videos_to_upload",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workspace ID",
          "explode" : true,
          "in" : "query",
          "name" : "workspace_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoListResponse"
                }
              }
            },
            "description" : "Video list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Video upload candidates",
        "tags" : [ "Video" ]
      }
    },
    "/videos/{id}" : {
      "delete" : {
        "operationId" : "video_delete_video",
        "parameters" : [ {
          "description" : "Video ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Video",
        "tags" : [ "Video" ]
      },
      "get" : {
        "operationId" : "video_get_video",
        "parameters" : [ {
          "description" : "Video ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoResponse"
                }
              }
            },
            "description" : "Video"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Video",
        "tags" : [ "Video" ]
      },
      "put" : {
        "operationId" : "video_update_video",
        "parameters" : [ {
          "description" : "Video ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateVideoRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoResponse"
                }
              }
            },
            "description" : "Video"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Video",
        "tags" : [ "Video" ]
      }
    },
    "/videos/{id}/check_uploading" : {
      "put" : {
        "operationId" : "video_check_uploading",
        "parameters" : [ {
          "description" : "Video ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoResponse"
                }
              }
            },
            "description" : "Video"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check video uploading",
        "tags" : [ "Video" ]
      }
    },
    "/videos/{id}/clear_fields" : {
      "put" : {
        "operationId" : "video_clear_fields",
        "parameters" : [ {
          "description" : "Video ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Video fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Video" ]
      }
    },
    "/videos/{id}/download" : {
      "get" : {
        "description" : "Redirect video resource",
        "operationId" : "video_download_video",
        "parameters" : [ {
          "description" : "Video ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirects Video"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Video",
        "tags" : [ "Video" ]
      }
    },
    "/videos/{id}/upload_credentials" : {
      "post" : {
        "description" : "Video 업로드를 위한 Credential을 생성",
        "operationId" : "video_create_upload_credentials",
        "parameters" : [ {
          "description" : "Video ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCredentialResponse"
                }
              }
            },
            "description" : "S3 Upload Credential"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Video Upload Credentials",
        "tags" : [ "Video" ]
      }
    },
    "/videos/{id}/upload_url" : {
      "post" : {
        "operationId" : "video_create_upload_url",
        "parameters" : [ {
          "description" : "Video ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoResponse"
                }
              }
            },
            "description" : "Video"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Video upload url",
        "tags" : [ "Video" ]
      }
    },
    "/work_items" : {
      "get" : {
        "operationId" : "workitem_get_work_items",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Record ID",
          "explode" : true,
          "in" : "query",
          "name" : "record_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Level ID",
          "explode" : true,
          "in" : "query",
          "name" : "level_id",
          "required" : false,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "kind of work item",
          "explode" : true,
          "in" : "query",
          "name" : "work_action",
          "required" : false,
          "schema" : {
            "enum" : [ "siteinsights_qa", "capture_qa", "pointcloud_qa" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "priority level",
          "explode" : true,
          "in" : "query",
          "name" : "priority",
          "required" : false,
          "schema" : {
            "enum" : [ "high", "medium", "low" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkItemListResponse"
                }
              }
            },
            "description" : "WorkItem list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "work_item list",
        "tags" : [ "WorkItem" ]
      },
      "post" : {
        "operationId" : "workitem_create_work_item",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateWorkItemRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkItemResponse"
                }
              }
            },
            "description" : "WorkItem"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create WorkItem",
        "tags" : [ "WorkItem" ]
      }
    },
    "/work_items/mock" : {
      "get" : {
        "operationId" : "workitem_mock_work_items",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkItemListResponse"
                }
              }
            },
            "description" : "WorkItem list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "work_item mock list",
        "tags" : [ "WorkItem" ]
      }
    },
    "/work_items/{id}" : {
      "get" : {
        "operationId" : "workitem_get_work_item",
        "parameters" : [ {
          "description" : "WorkItem ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkItemResponse"
                }
              }
            },
            "description" : "WorkItem"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get WorkItem",
        "tags" : [ "WorkItem" ]
      },
      "put" : {
        "operationId" : "workitem_update_work_item",
        "parameters" : [ {
          "description" : "WorkItem ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateWorkItemRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkItemResponse"
                }
              }
            },
            "description" : "WorkItem"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update WorkItem",
        "tags" : [ "WorkItem" ]
      }
    },
    "/work_items/{id}/meta" : {
      "get" : {
        "operationId" : "workitem_get_meta",
        "parameters" : [ {
          "description" : "WorkItem ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get WorkItem Meta",
        "tags" : [ "WorkItem" ]
      },
      "put" : {
        "operationId" : "workitem_update_meta",
        "parameters" : [ {
          "description" : "WorkItem ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update WorkItem Meta",
        "tags" : [ "WorkItem" ]
      }
    },
    "/work_items/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "workitem_get_meta_by_key",
        "parameters" : [ {
          "description" : "WorkItem ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get WorkItem Meta by key",
        "tags" : [ "WorkItem" ]
      },
      "put" : {
        "operationId" : "workitem_update_meta_by_key",
        "parameters" : [ {
          "description" : "WorkItem ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update WorkItem Meta",
        "tags" : [ "WorkItem" ]
      }
    },
    "/work_items/{work_item_id}/attachments" : {
      "get" : {
        "operationId" : "workitem_get_attachments",
        "parameters" : [ {
          "description" : "WorkItem ID",
          "explode" : false,
          "in" : "path",
          "name" : "work_item_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment State",
          "explode" : true,
          "in" : "query",
          "name" : "state",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentListResponse"
                }
              }
            },
            "description" : "Attachment list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get WorkItem Attachments",
        "tags" : [ "WorkItem" ]
      },
      "post" : {
        "operationId" : "workitem_create_attachment",
        "parameters" : [ {
          "description" : "WorkItem ID",
          "explode" : false,
          "in" : "path",
          "name" : "work_item_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAttachmentRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create WorkItem Attachment",
        "tags" : [ "WorkItem" ]
      }
    },
    "/work_items/{work_item_id}/attachments/{key}" : {
      "delete" : {
        "operationId" : "workitem_delete_attachment",
        "parameters" : [ {
          "description" : "WorkItem ID",
          "explode" : false,
          "in" : "path",
          "name" : "work_item_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete WorkItem Attachment",
        "tags" : [ "WorkItem" ]
      },
      "get" : {
        "operationId" : "workitem_get_attachment",
        "parameters" : [ {
          "description" : "WorkItem ID",
          "explode" : false,
          "in" : "path",
          "name" : "work_item_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get WorkItem Attachment",
        "tags" : [ "WorkItem" ]
      },
      "put" : {
        "operationId" : "workitem_update_attachment",
        "parameters" : [ {
          "description" : "WorkItem ID",
          "explode" : false,
          "in" : "path",
          "name" : "work_item_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateAttachmentRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update WorkItem Attachment",
        "tags" : [ "WorkItem" ]
      }
    },
    "/work_items/{work_item_id}/attachments/{key}/check_uploading" : {
      "put" : {
        "operationId" : "workitem_check_attachment_uploading",
        "parameters" : [ {
          "description" : "WorkItem ID",
          "explode" : false,
          "in" : "path",
          "name" : "work_item_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Check WorkItem Attachment uploading",
        "tags" : [ "WorkItem" ]
      }
    },
    "/work_items/{work_item_id}/attachments/{key}/clear_fields" : {
      "put" : {
        "operationId" : "workitem_clear_attachment_fields",
        "parameters" : [ {
          "description" : "WorkItem ID",
          "explode" : false,
          "in" : "path",
          "name" : "work_item_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "thumbnail" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "WorkItem" ]
      }
    },
    "/work_items/{work_item_id}/attachments/{key}/download" : {
      "get" : {
        "description" : "Redirect to work_item attachment download link",
        "operationId" : "workitem_download_attachment",
        "parameters" : [ {
          "description" : "WorkItem ID",
          "explode" : false,
          "in" : "path",
          "name" : "work_item_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect to attachment download link"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Download WorkItem Attachment",
        "tags" : [ "WorkItem" ]
      }
    },
    "/work_items/{work_item_id}/attachments/{key}/upload_url" : {
      "post" : {
        "operationId" : "workitem_create_attachment_upload_url",
        "parameters" : [ {
          "description" : "WorkItem ID",
          "explode" : false,
          "in" : "path",
          "name" : "work_item_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Attachment key",
          "explode" : false,
          "in" : "path",
          "name" : "key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateUploadUrlRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "Attachment"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create WorkItem Attachment upload url",
        "tags" : [ "WorkItem" ]
      }
    },
    "/workarea_groups" : {
      "get" : {
        "operationId" : "workareagroup_get_workarea_groups",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Predefined Filter",
          "explode" : true,
          "in" : "query",
          "name" : "p_filter",
          "required" : false,
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/PredefinedFilter"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkareaGroupListResponse"
                }
              }
            },
            "description" : "WorkareaGroup list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "WorkareaGroup list",
        "tags" : [ "WorkareaGroup" ]
      },
      "post" : {
        "operationId" : "workareagroup_create_workarea_group",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateWorkareaGroupRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkareaGroupResponse"
                }
              }
            },
            "description" : "WorkareaGroup"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create WorkareaGroup",
        "tags" : [ "WorkareaGroup" ]
      }
    },
    "/workarea_groups/{id}" : {
      "get" : {
        "operationId" : "workareagroup_get_workarea_group",
        "parameters" : [ {
          "description" : "WorkareaGroup ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkareaGroupResponse"
                }
              }
            },
            "description" : "WorkareaGroup"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get WorkareaGroup",
        "tags" : [ "WorkareaGroup" ]
      },
      "put" : {
        "operationId" : "workareagroup_update_workarea_group",
        "parameters" : [ {
          "description" : "WorkareaGroup ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateWorkareaGroupRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkareaGroupResponse"
                }
              }
            },
            "description" : "WorkareaGroup"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update WorkareaGroup",
        "tags" : [ "WorkareaGroup" ]
      }
    },
    "/workarea_groups/{id}/publish" : {
      "delete" : {
        "operationId" : "workareagroup_unpublish_workarea_group",
        "parameters" : [ {
          "description" : "WorkareaGroup ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Unpublish"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish WorkareaGroup",
        "tags" : [ "WorkareaGroup" ]
      },
      "put" : {
        "operationId" : "workareagroup_publish_workarea_group",
        "parameters" : [ {
          "description" : "WorkareaGroup ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Publish"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish WorkareaGroup",
        "tags" : [ "WorkareaGroup" ]
      }
    },
    "/workarea_groups/{id}/purge" : {
      "delete" : {
        "operationId" : "workareagroup_purge_workarea_group",
        "parameters" : [ {
          "description" : "WorkareaGroup ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge WorkareaGroup",
        "tags" : [ "WorkareaGroup" ]
      }
    },
    "/workareas" : {
      "get" : {
        "operationId" : "workarea_get_workareas",
        "parameters" : [ {
          "description" : "Facility key",
          "explode" : true,
          "in" : "query",
          "name" : "facility_key",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Level ID list",
          "explode" : false,
          "in" : "query",
          "name" : "level_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workarea Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "workarea_group_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Predefined Filter",
          "explode" : true,
          "in" : "query",
          "name" : "p_filter",
          "required" : false,
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/PredefinedFilter"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkareaListResponse"
                }
              }
            },
            "description" : "Workarea list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Workarea list",
        "tags" : [ "Workarea" ]
      },
      "post" : {
        "operationId" : "workarea_create_workarea",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateWorkareaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkareaResponse"
                }
              }
            },
            "description" : "Workarea"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Workarea",
        "tags" : [ "Workarea" ]
      },
      "put" : {
        "operationId" : "workarea_bulk_workarea",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BulkWorkareaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "Ids created by bulk operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Bulk Workarea",
        "tags" : [ "Workarea" ]
      }
    },
    "/workareas/{id}" : {
      "get" : {
        "operationId" : "workarea_get_workarea",
        "parameters" : [ {
          "description" : "Workarea ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkareaResponse"
                }
              }
            },
            "description" : "Workarea"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workarea",
        "tags" : [ "Workarea" ]
      },
      "put" : {
        "operationId" : "workarea_update_workarea",
        "parameters" : [ {
          "description" : "Workarea ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateWorkareaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkareaResponse"
                }
              }
            },
            "description" : "Workarea"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Workarea",
        "tags" : [ "Workarea" ]
      }
    },
    "/workareas/{id}/archive" : {
      "put" : {
        "operationId" : "workarea_archive_workarea",
        "parameters" : [ {
          "description" : "Workarea ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Archived"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Archive Workarea",
        "tags" : [ "Workarea" ]
      }
    },
    "/workareas/{id}/meta" : {
      "get" : {
        "operationId" : "workarea_get_meta",
        "parameters" : [ {
          "description" : "Workarea ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workarea Meta",
        "tags" : [ "Workarea" ]
      },
      "put" : {
        "operationId" : "workarea_update_meta",
        "parameters" : [ {
          "description" : "Workarea ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Workarea Meta",
        "tags" : [ "Workarea" ]
      }
    },
    "/workareas/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "workarea_get_meta_by_key",
        "parameters" : [ {
          "description" : "Workarea ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workarea Meta by key",
        "tags" : [ "Workarea" ]
      },
      "put" : {
        "operationId" : "workarea_update_meta_by_key",
        "parameters" : [ {
          "description" : "Workarea ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Workarea Meta",
        "tags" : [ "Workarea" ]
      }
    },
    "/workareas/{id}/publish" : {
      "delete" : {
        "operationId" : "workarea_unpublish_workarea",
        "parameters" : [ {
          "description" : "Workarea ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Unpublish"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unpublish Workarea",
        "tags" : [ "Workarea" ]
      },
      "put" : {
        "operationId" : "workarea_publish_workarea",
        "parameters" : [ {
          "description" : "Workarea ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Publish"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Publish Workarea",
        "tags" : [ "Workarea" ]
      }
    },
    "/workareas/{id}/purge" : {
      "delete" : {
        "operationId" : "workarea_purge_workarea",
        "parameters" : [ {
          "description" : "Workarea ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Workarea",
        "tags" : [ "Workarea" ]
      }
    },
    "/workflows" : {
      "get" : {
        "operationId" : "workflow_get_workflows",
        "parameters" : [ {
          "explode" : true,
          "in" : "query",
          "name" : "kind",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "True if System Workflow",
          "explode" : true,
          "in" : "query",
          "name" : "is_system_workflow",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "Workflow Type list",
          "explode" : true,
          "in" : "query",
          "name" : "workflow_types",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowListResponse"
                }
              }
            },
            "description" : "Workflow list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "workflow list",
        "tags" : [ "Workflow" ]
      },
      "post" : {
        "operationId" : "workflow_create_workflow",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateWorkflowRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowResponse"
                }
              }
            },
            "description" : "Workflow"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Workflow",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/mock" : {
      "get" : {
        "operationId" : "workflow_mock_workflows",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowListResponse"
                }
              }
            },
            "description" : "Workflow list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "workflow mock list",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/textures" : {
      "get" : {
        "operationId" : "workflow_get_workflow_textures",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTextureIdListResponse"
                }
              }
            },
            "description" : "Texture Ids for each Workflows"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get texture_ids for each workflows",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/{id}" : {
      "delete" : {
        "operationId" : "workflow_delete_workflow",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Workflow",
        "tags" : [ "Workflow" ]
      },
      "get" : {
        "operationId" : "workflow_get_workflow",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowResponse"
                }
              }
            },
            "description" : "Workflow"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workflow",
        "tags" : [ "Workflow" ]
      },
      "put" : {
        "operationId" : "workflow_update_workflow",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateWorkflowRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowResponse"
                }
              }
            },
            "description" : "Workflow"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Workflow",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/{id}/clear_fields" : {
      "put" : {
        "operationId" : "workflow_clear_fields",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "texture_id" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/{id}/meta" : {
      "get" : {
        "operationId" : "workflow_get_meta",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workflow Meta",
        "tags" : [ "Workflow" ]
      },
      "put" : {
        "operationId" : "workflow_update_meta",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Workflow Meta",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/{id}/meta/{meta_key}" : {
      "get" : {
        "operationId" : "workflow_get_meta_by_key",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workflow Meta by key",
        "tags" : [ "Workflow" ]
      },
      "put" : {
        "operationId" : "workflow_update_meta_by_key",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Meta key",
          "explode" : false,
          "in" : "path",
          "name" : "meta_key",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateMetaRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetaResponse"
                }
              }
            },
            "description" : "Meta information"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Workflow Meta",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/{id}/position" : {
      "put" : {
        "operationId" : "workflow_update_position",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdatePositionRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Position updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update Workflow Position",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/{id}/textures" : {
      "get" : {
        "operationId" : "workflow_get_textures",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureListResponse"
                }
              }
            },
            "description" : "Texture list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workflow's textures",
        "tags" : [ "Workflow" ]
      },
      "post" : {
        "operationId" : "workflow_create_texture",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateWorkflowTextureRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureResponse"
                }
              }
            },
            "description" : "Texture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Workflow's textures",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/{id}/textures/{texture_id}" : {
      "delete" : {
        "operationId" : "workflow_delete_textures",
        "parameters" : [ {
          "description" : "Workflow ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Texture ID",
          "explode" : false,
          "in" : "path",
          "name" : "texture_id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Delete Workflow's textures",
        "tags" : [ "Workflow" ]
      }
    },
    "/workflows/{kind}" : {
      "get" : {
        "operationId" : "workflow_get_workflows_by_kind",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Workflow Type list",
          "explode" : true,
          "in" : "query",
          "name" : "workflow_types",
          "required" : false,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
          "explode" : false,
          "in" : "header",
          "name" : "X-CUPIX-UPDATED-SINCE",
          "required" : false,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Filter",
          "explode" : false,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "items" : {
              "example" : "capture_id=1",
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowListResponse"
                }
              }
            },
            "description" : "Workflow list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workflow by kind",
        "tags" : [ "Workflow" ]
      },
      "post" : {
        "operationId" : "workflow_create_workflow_with_kind",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "kind",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateWorkflowRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TextureResponse"
                }
              }
            },
            "description" : "Texture"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Workflow with kind",
        "tags" : [ "Workflow" ]
      }
    },
    "/workspaces" : {
      "get" : {
        "operationId" : "workspace_get_workspaces",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "조건에 맞는 Workspace를 필터링 하며, 콤마(,)로 구분된 여러개의 조건을 입력할 수 있다.\n\n가능한 조건 및 입력값\n* state={created, active, inactive}\n",
          "explode" : true,
          "in" : "query",
          "name" : "filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "explode" : true,
          "in" : "query",
          "name" : "q",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
          "explode" : true,
          "in" : "query",
          "name" : "visibility",
          "required" : false,
          "schema" : {
            "enum" : [ "untrashed", "in_trash_by_parent" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkspaceListResponse"
                }
              }
            },
            "description" : "Workspace list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workspace List",
        "tags" : [ "Workspace" ]
      },
      "post" : {
        "operationId" : "workspace_create_workspace",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateWorkspaceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkspaceResponse"
                }
              }
            },
            "description" : "Workspace"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create Workspace",
        "tags" : [ "Workspace" ]
      }
    },
    "/workspaces/mock" : {
      "get" : {
        "operationId" : "workspace_mock_workspaces",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkspaceListResponse"
                }
              }
            },
            "description" : "Workspace list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Workspace mock List",
        "tags" : [ "Workspace" ]
      }
    },
    "/workspaces/{id}" : {
      "get" : {
        "operationId" : "workspace_get_workspace",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkspaceResponse"
                }
              }
            },
            "description" : "Workspace"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get Workspace",
        "tags" : [ "Workspace" ]
      },
      "put" : {
        "operationId" : "workspace_update_workspace",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UpdateWorkspaceRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkspaceResponse"
                }
              }
            },
            "description" : "Workspace"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Update workspace",
        "tags" : [ "Workspace" ]
      }
    },
    "/workspaces/{id}/clear_fields" : {
      "put" : {
        "operationId" : "workspace_clear_fields",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Workspace fields to clear",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "enum" : [ "logo" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "204" : {
            "description" : "Fields are cleared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Clear fields",
        "tags" : [ "Workspace" ]
      }
    },
    "/workspaces/{id}/contact_sales" : {
      "post" : {
        "operationId" : "workspace_contact_sales",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ContactSalesRequestBody"
        },
        "responses" : {
          "200" : {
            "description" : "ok"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Send e-mails to cupix sales team",
        "tags" : [ "Workspace" ]
      }
    },
    "/workspaces/{id}/credit_transactions" : {
      "get" : {
        "operationId" : "workspace_get_credit_transactions",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreditTransactionListResponse"
                }
              }
            },
            "description" : "License list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get credit transactions history on Workspace",
        "tags" : [ "Workspace" ]
      }
    },
    "/workspaces/{id}/deny" : {
      "put" : {
        "operationId" : "workspace_deny_workspace",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Denied"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Deny workspace with user or group",
        "tags" : [ "Workspace" ]
      }
    },
    "/workspaces/{id}/entity_parameters" : {
      "get" : {
        "operationId" : "workspace_get_entity_parameter",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterListResponse"
                }
              }
            },
            "description" : "EntityParameter list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Workspace EntityParameter list",
        "tags" : [ "Workspace" ]
      },
      "post" : {
        "operationId" : "workspace_create_entity_parameter",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateEntityParameterRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityParameterResponse"
                }
              }
            },
            "description" : "EntityParameter"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Create workspace EntityParameter",
        "tags" : [ "Workspace" ]
      }
    },
    "/workspaces/{id}/licenses" : {
      "get" : {
        "operationId" : "workspace_get_licenses",
        "parameters" : [ {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "billing_state filter\n",
          "explode" : true,
          "in" : "query",
          "name" : "billing_state",
          "required" : false,
          "schema" : {
            "enum" : [ "none", "active", "expired" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "trial_state filter\n",
          "explode" : true,
          "in" : "query",
          "name" : "trial_state",
          "required" : false,
          "schema" : {
            "enum" : [ "none", "active", "expired" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LicenseListResponse"
                }
              }
            },
            "description" : "License list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get licenses on Workspace",
        "tags" : [ "Workspace" ]
      }
    },
    "/workspaces/{id}/members" : {
      "get" : {
        "operationId" : "workspace_get_members",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Memeber display option",
          "explode" : true,
          "in" : "query",
          "name" : "display_option",
          "required" : true,
          "schema" : {
            "enum" : [ "directly", "directly-flatten", "inherited", "inherited-flatten", "all" ],
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "User ID list",
          "explode" : false,
          "in" : "query",
          "name" : "user_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Group ID list",
          "explode" : false,
          "in" : "query",
          "name" : "group_ids",
          "required" : false,
          "schema" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "minimum permission",
          "explode" : true,
          "in" : "query",
          "name" : "min_permission",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Field name to order",
          "explode" : true,
          "in" : "query",
          "name" : "order_by",
          "required" : false,
          "schema" : {
            "example" : "created_at",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Sort direction",
          "explode" : true,
          "in" : "query",
          "name" : "sort",
          "required" : false,
          "schema" : {
            "example" : "desc",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Page number",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Item count per page",
          "explode" : true,
          "in" : "query",
          "name" : "per_page",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Get workspace members",
        "tags" : [ "Workspace" ]
      }
    },
    "/workspaces/{id}/purge" : {
      "delete" : {
        "operationId" : "workspace_purge_workspace",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Purged"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Purge Workspace",
        "tags" : [ "Workspace" ]
      }
    },
    "/workspaces/{id}/share" : {
      "put" : {
        "operationId" : "workspace_share_workspace",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareListResponse"
                }
              }
            },
            "description" : "Shared memeber list"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Share workspace with user or group",
        "tags" : [ "Workspace" ]
      }
    },
    "/workspaces/{id}/trash" : {
      "put" : {
        "operationId" : "workspace_trash_workspace",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Trashed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Trash workspace",
        "tags" : [ "Workspace" ]
      }
    },
    "/workspaces/{id}/unshare" : {
      "put" : {
        "operationId" : "workspace_unshare_workspace",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ShareRequestBody"
        },
        "responses" : {
          "204" : {
            "description" : "Unshared"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Unshare workspace with user or group",
        "tags" : [ "Workspace" ]
      }
    },
    "/workspaces/{id}/untrash" : {
      "put" : {
        "description" : "Untrash trashed workspace and return it.",
        "operationId" : "workspace_untrash_workspace",
        "parameters" : [ {
          "description" : "Workspace ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Fields list to response",
          "explode" : false,
          "in" : "query",
          "name" : "fields",
          "required" : true,
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkspaceResponse"
                }
              }
            },
            "description" : "Workspace"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized request"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "CupixAuth" : [ ]
        } ],
        "summary" : "Untrash trashed workspace",
        "tags" : [ "Workspace" ]
      }
    }
  },
  "components" : {
    "callbacks" : { },
    "examples" : { },
    "headers" : { },
    "links" : { },
    "parameters" : {
      "actionNamePathParam" : {
        "description" : "Action Name",
        "explode" : false,
        "in" : "path",
        "name" : "action_name",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "activityIdsQueryParam" : {
        "description" : "Activity ID list",
        "explode" : false,
        "in" : "query",
        "name" : "activity_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "activityStringIdsQueryParam" : {
        "description" : "Activity String ID list",
        "explode" : false,
        "in" : "query",
        "name" : "activity_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "aggsQueryParam" : {
        "description" : "Aggregation",
        "explode" : true,
        "in" : "query",
        "name" : "aggs",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "annotationClearFieldsParam" : {
        "description" : "Annoation fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail", "parent_id", "value", "annotatable" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "annotationIdPathParam" : {
        "description" : "Annotation ID",
        "explode" : false,
        "in" : "path",
        "name" : "annotation_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "annotationIdQueryParam" : {
        "description" : "Annotation ID",
        "explode" : true,
        "in" : "query",
        "name" : "annotation_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "annotationLayerClearFieldsParam" : {
        "description" : "AnnotationLayer fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "description", "allowed_annotation_kind" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "annotationLayerIdsQueryParam" : {
        "description" : "AnnotationLayer ID list",
        "explode" : false,
        "in" : "query",
        "name" : "annotation_layer_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "areaIdsQueryParam" : {
        "description" : "Aread ID list",
        "explode" : false,
        "in" : "query",
        "name" : "area_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "attachableIdQueryParam" : {
        "description" : "Attachment Attachable Id",
        "explode" : true,
        "in" : "query",
        "name" : "attachable_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "attachableTypeQueryParam" : {
        "description" : "Attachment Attachable Type",
        "explode" : true,
        "in" : "query",
        "name" : "attachable_type",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "attachmentClearFieldsParam" : {
        "description" : "Attachment fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "attachmentKeyPathParam" : {
        "description" : "Attachment key",
        "explode" : false,
        "in" : "path",
        "name" : "attachment_key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "billingAccountClearFieldsParam" : {
        "description" : "BillingAccount fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "name" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "billingAccountFilterParam" : {
        "description" : "조건에 맞는 BillingAccount를 필터링 하며, 콤마(,)로 구분된 여러개의 조건을 입력할 수 있다.\n",
        "explode" : true,
        "in" : "query",
        "name" : "filter",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "billingAccountIdQueryParam" : {
        "description" : "BillingAccount ID",
        "explode" : true,
        "in" : "query",
        "name" : "billing_account_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "billingAccountIdRequiredQueryParam" : {
        "description" : "BillingAccount ID",
        "explode" : true,
        "in" : "query",
        "name" : "billing_account_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "billingStateFilterParam" : {
        "description" : "billing_state filter\n",
        "explode" : true,
        "in" : "query",
        "name" : "billing_state",
        "required" : false,
        "schema" : {
          "enum" : [ "none", "active", "expired" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "bimCallbackTokenParam" : {
        "description" : "Bim callback token",
        "explode" : false,
        "in" : "path",
        "name" : "token",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "bimClearFieldsParam" : {
        "description" : "Bim fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "bimIdPathParam" : {
        "description" : "Bim ID",
        "explode" : false,
        "in" : "path",
        "name" : "bim_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "bimIdQueryParam" : {
        "description" : "Bim ID",
        "explode" : true,
        "in" : "query",
        "name" : "bim_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "bimIdRequiredQueryParam" : {
        "description" : "Bim ID",
        "explode" : true,
        "in" : "query",
        "name" : "bim_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "bimIdsQueryParam" : {
        "description" : "Bim ID list",
        "explode" : false,
        "in" : "query",
        "name" : "bim_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "bimRevisionCallbackTokenParam" : {
        "description" : "Bim callback token",
        "explode" : false,
        "in" : "path",
        "name" : "token",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "captureClearFieldsParam" : {
        "description" : "Capture fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "captureIdPathParam" : {
        "description" : "Capture ID",
        "explode" : false,
        "in" : "path",
        "name" : "capture_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "captureIdQueryParam" : {
        "description" : "Capture ID",
        "explode" : true,
        "in" : "query",
        "name" : "capture_id",
        "required" : false,
        "schema" : {
          "type" : "integer"
        },
        "style" : "form"
      },
      "captureIdRequiredQueryParam" : {
        "description" : "Capture ID",
        "explode" : true,
        "in" : "query",
        "name" : "capture_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "captureIdsQueryParam" : {
        "description" : "Capture IDs",
        "explode" : false,
        "in" : "query",
        "name" : "capture_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "categoryIdQueryParam" : {
        "description" : "Category ID",
        "explode" : true,
        "in" : "query",
        "name" : "category_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "categoryIdsQueryParam" : {
        "description" : "Category ID list",
        "explode" : false,
        "in" : "query",
        "name" : "category_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "categoryTypeQueryParam" : {
        "description" : "Category Type",
        "explode" : true,
        "in" : "query",
        "name" : "category_type",
        "required" : false,
        "schema" : {
          "enum" : [ "main", "sub" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "clusterClearFieldsParam" : {
        "description" : "Cluster fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail", "node_id", "parent_id" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "clusterIdQueryParam" : {
        "description" : "Cluster ID",
        "explode" : true,
        "in" : "query",
        "name" : "cluster_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "clusterTypeQueryParam" : {
        "description" : "Cluster type",
        "explode" : true,
        "in" : "query",
        "name" : "cluster_type",
        "required" : false,
        "schema" : {
          "enum" : [ "none", "unrefined", "refined" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "customPropertyClearFieldParam" : {
        "description" : "CustomProperty fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "unit" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "deviationClearFieldsParam" : {
        "description" : "Deviation fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "name" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "deviationIdPathParam" : {
        "description" : "Deviation ID",
        "explode" : false,
        "in" : "path",
        "name" : "deviation_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "deviationTypeQueryParam" : {
        "description" : "Deviation deviation_type",
        "explode" : true,
        "in" : "query",
        "name" : "deviation_type",
        "required" : false,
        "schema" : {
          "enum" : [ "Pointcloud", "Siteinsights", "Texture", "Report" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "domainOfTeamPathParam" : {
        "description" : "Team domain",
        "explode" : false,
        "in" : "path",
        "name" : "domain",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "draftParam" : {
        "explode" : true,
        "in" : "query",
        "name" : "draft",
        "required" : false,
        "schema" : {
          "type" : "boolean"
        },
        "style" : "form"
      },
      "editCaptureIdsQueryParam" : {
        "description" : "Capture IDs",
        "explode" : false,
        "in" : "query",
        "name" : "edit_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "editingEntityStateQueryParam" : {
        "description" : "State query parameter",
        "explode" : true,
        "in" : "query",
        "name" : "states",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "editingIdPathParam" : {
        "description" : "Editing ID",
        "explode" : false,
        "in" : "path",
        "name" : "editing_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "editingIdsQueryParam" : {
        "description" : "Editing ID list",
        "explode" : false,
        "in" : "query",
        "name" : "editing_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "editingStatesQueryParam" : {
        "description" : "Editing states",
        "explode" : false,
        "in" : "query",
        "name" : "states",
        "required" : false,
        "schema" : {
          "items" : {
            "$ref" : "#/components/schemas/EditingState"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "editorIdsQueryParam" : {
        "description" : "Editor ID list",
        "explode" : false,
        "in" : "query",
        "name" : "editor_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "elementIdsQueryParam" : {
        "description" : "Element ID list",
        "explode" : false,
        "in" : "query",
        "name" : "element_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "emailRequiredQueryParam" : {
        "description" : "Email",
        "explode" : true,
        "in" : "query",
        "name" : "email",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "extraFilterQueryParam" : {
        "description" : "filter empty spacetime ( ex. extra_filter=exclude_empty_counts )",
        "explode" : true,
        "in" : "query",
        "name" : "extra_filter",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "facilityClearFieldsParam" : {
        "description" : "Facility fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "address", "facility_size", "location", "logo", "number" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "facilityKeyPathParam" : {
        "description" : "Facility key",
        "explode" : false,
        "in" : "path",
        "name" : "facility_key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "facilityKeyQueryParam" : {
        "description" : "Facility key",
        "explode" : true,
        "in" : "query",
        "name" : "facility_key",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "facilityKeyRequiredQueryParam" : {
        "description" : "Facility key",
        "explode" : true,
        "in" : "query",
        "name" : "facility_key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "facilityVisibilityParam" : {
        "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\narchived: 아카이브 된 상태\nvisible: untrashed + archived\n",
        "explode" : true,
        "in" : "query",
        "name" : "visibility",
        "required" : false,
        "schema" : {
          "enum" : [ "untrashed", "in_trash_by_parent", "archived", "visible" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "fieldClearFieldsParam" : {
        "description" : "Field fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "value" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "fieldIdPathParam" : {
        "description" : "Field ID",
        "explode" : false,
        "in" : "path",
        "name" : "field_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "fieldsParam" : {
        "description" : "Fields list to response",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "filterParam" : {
        "description" : "Filter",
        "explode" : false,
        "in" : "query",
        "name" : "filter",
        "required" : false,
        "schema" : {
          "items" : {
            "example" : "capture_id=1",
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "findUserParam" : {
        "explode" : true,
        "in" : "query",
        "name" : "email",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "floorplanClearFieldsParam" : {
        "description" : "fields list to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "floorplanIdPathParam" : {
        "description" : "Floorplan ID",
        "explode" : false,
        "in" : "path",
        "name" : "floorplan_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "floorplanIdsQueryParam" : {
        "description" : "Floorplan IDs",
        "explode" : false,
        "in" : "query",
        "name" : "floorplan_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "floorplanTypesQueryParam" : {
        "description" : "Floorplan Types",
        "explode" : false,
        "in" : "query",
        "name" : "floorplan_types",
        "required" : false,
        "schema" : {
          "items" : {
            "$ref" : "#/components/schemas/FloorplanType"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "floorplanVisibilityParam" : {
        "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\narchived: 아카이브 된 상태\nvisible: untrashed + archived\n",
        "explode" : true,
        "in" : "query",
        "name" : "visibility",
        "required" : false,
        "schema" : {
          "enum" : [ "untrashed", "in_trash_by_parent", "archived", "visible" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "formDesignIdRequiredQueryParam" : {
        "description" : "FormDesign ID",
        "explode" : true,
        "in" : "query",
        "name" : "form_design_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "formDesignIdsRequiredQueryParam" : {
        "description" : "FormDesign IDs",
        "explode" : false,
        "in" : "query",
        "name" : "form_design_ids",
        "required" : true,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "fromAtParam" : {
        "description" : "UTC+0 based. Must be used together with `to_at`.",
        "explode" : true,
        "in" : "query",
        "name" : "from_at",
        "required" : false,
        "schema" : {
          "format" : "date-time",
          "type" : "string"
        },
        "style" : "form"
      },
      "groupCodePathParam" : {
        "description" : "Group code",
        "explode" : false,
        "in" : "path",
        "name" : "group_code",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "groupIdsQueryParam" : {
        "description" : "Group ID list",
        "explode" : false,
        "in" : "query",
        "name" : "group_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "groupKeysQueryParams" : {
        "description" : "Values for Row Grouping",
        "explode" : false,
        "in" : "query",
        "name" : "group_keys",
        "required" : false,
        "schema" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "groupOfOnboardQueryParam" : {
        "description" : "Onboard group name",
        "explode" : true,
        "in" : "query",
        "name" : "group",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "idOfActivityPathParam" : {
        "description" : "Activity ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfAerialPhotoPathParam" : {
        "description" : "Aerial photo id",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfAnnotationLayerPathParam" : {
        "description" : "AnnotationLayer ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfAnnotationLayerQueryParam" : {
        "description" : "AnnotationLayer ID",
        "explode" : true,
        "in" : "query",
        "name" : "annotation_layer_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "idOfAnnotationPathParam" : {
        "description" : "Annotation ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfAreaPathParam" : {
        "description" : "Area ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfBadgePathParam" : {
        "description" : "Badge id",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfBadgeQueryParam" : {
        "description" : "Badge ID",
        "explode" : true,
        "in" : "query",
        "name" : "badge_id",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "style" : "form"
      },
      "idOfBillingAccountPathParam" : {
        "description" : "BillingAccount ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfBimPathParam" : {
        "description" : "Bim ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfBimRevisionPathParam" : {
        "description" : "Bim Revision ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfBimRevisionQueryParam" : {
        "description" : "BimRevision ID",
        "explode" : true,
        "in" : "query",
        "name" : "bim_revision_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "idOfBookmarkPathParam" : {
        "description" : "Bookmark id",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfCapturePathParam" : {
        "description" : "Capture ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfCategoryPathParam" : {
        "description" : "Category ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfClusterPathParam" : {
        "description" : "Cluster ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfCommentPathParam" : {
        "description" : "Comment ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfConnectPathParam" : {
        "description" : "Connect ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfCustomPropertyPathParam" : {
        "description" : "CustomProperty ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfDeviationPathParam" : {
        "description" : "Deviation ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfDeviationQueryParam" : {
        "description" : "Deviation ID",
        "explode" : true,
        "in" : "query",
        "name" : "deviation_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "idOfEditingEntityPathParam" : {
        "description" : "Editing Entity ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfEditingPathParam" : {
        "description" : "Editing ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfElementPathParam" : {
        "description" : "Element ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfElementTracePathParam" : {
        "description" : "Element Trace ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfFcmDevicePathParam" : {
        "description" : "FcmDevice ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfFieldPathParam" : {
        "description" : "Field ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfFloorPlanSourcePathParam" : {
        "description" : "FloorplanSource ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfFloorplanPathParam" : {
        "description" : "Floorplan ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfFormDesignPathParam" : {
        "description" : "FormDesign ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfFormFieldPathParam" : {
        "description" : "FormField ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfGroupPathParam" : {
        "description" : "Group ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfJobPathParam" : {
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfLevelPathParam" : {
        "description" : "Level ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfLineItemPathParam" : {
        "description" : "LineItem ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfMeasurementPathParam" : {
        "description" : "Measurement ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfMeshPathParam" : {
        "description" : "Mesh ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfMetricPathParam" : {
        "description" : "Metric ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfMetricQueryParam" : {
        "description" : "Metric ID",
        "explode" : true,
        "in" : "query",
        "name" : "metric_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "idOfNodePathParam" : {
        "description" : "Node ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfOnboardPathParam" : {
        "description" : "Onboard ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfPanoPathParam" : {
        "description" : "Pano ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfPhaseMetricPathParam" : {
        "description" : "PhaseMetric ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfPhaseMetricQueryParam" : {
        "description" : "PhaseMetric ID",
        "explode" : true,
        "in" : "query",
        "name" : "phase_metric_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "idOfPhasePathParam" : {
        "description" : "Phase ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfPhaseQueryParam" : {
        "description" : "Phase ID",
        "explode" : true,
        "in" : "query",
        "name" : "phase_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "idOfPointcloudPathParam" : {
        "description" : "Pointcloud ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfPowerBiReportPathParam" : {
        "description" : "Power BI Report ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "idOfProgressPathParam" : {
        "description" : "Progress ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfRecordPathParam" : {
        "description" : "Record ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfRecordStatusPathParam" : {
        "description" : "RecordStatus ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfReferencePathParam" : {
        "description" : "Reference ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfReportPathParam" : {
        "description" : "Report ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfRoomPathParam" : {
        "description" : "Room ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfSketchPathParam" : {
        "description" : "Sketch ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfStatusPathParam" : {
        "description" : "Status ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfStoragePathParam" : {
        "description" : "Storage ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfTaskPathParam" : {
        "description" : "Task ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfTeamPathParam" : {
        "description" : "Team ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfTeleportPathParam" : {
        "description" : "Teleport ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfTexturePathParam" : {
        "description" : "Texture ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfTrackingPlanPathParam" : {
        "description" : "Tracking Plan ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfVideoPathParam" : {
        "description" : "Video ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfWorkItemPathParam" : {
        "description" : "WorkItem ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfWorkareaGroupPathParam" : {
        "description" : "WorkareaGroup ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfWorkareaPathParam" : {
        "description" : "Workarea ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfWorkflowPathParam" : {
        "description" : "Workflow ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idOfWorkflowQueryParam" : {
        "description" : "Workflow ID",
        "explode" : true,
        "in" : "query",
        "name" : "workflow_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "idOfWorkflowRequiredQueryParam" : {
        "description" : "Workflow ID",
        "explode" : true,
        "in" : "query",
        "name" : "workflow_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "idOfWorkspacePathParam" : {
        "description" : "Workspace ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "idsOfBadgeQueryParam" : {
        "description" : "Badge IDs",
        "explode" : true,
        "in" : "query",
        "name" : "badge_ids",
        "required" : true,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "idsOfCategoryQueryParam" : {
        "description" : "Category ID List",
        "explode" : false,
        "in" : "query",
        "name" : "ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "idsOfPanoQueryParam" : {
        "description" : "Pano IDs",
        "explode" : false,
        "in" : "query",
        "name" : "ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "idsOfStatusQueryParam" : {
        "description" : "Status ID List",
        "explode" : true,
        "in" : "query",
        "name" : "ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "ifOfUserPathParam" : {
        "description" : "User ID",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "isSystemTextureQueryParam" : {
        "description" : "True if System Texture",
        "explode" : true,
        "in" : "query",
        "name" : "is_system_texture",
        "required" : false,
        "schema" : {
          "type" : "boolean"
        },
        "style" : "form"
      },
      "isSystemWorkflowQueryParam" : {
        "description" : "True if System Workflow",
        "explode" : true,
        "in" : "query",
        "name" : "is_system_workflow",
        "required" : false,
        "schema" : {
          "type" : "boolean"
        },
        "style" : "form"
      },
      "issueTypeCategoryQueryParam" : {
        "description" : "Category name of Issue Type",
        "explode" : true,
        "in" : "query",
        "name" : "category",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "keyOfActivityQueryParam" : {
        "description" : "Activity key",
        "explode" : true,
        "in" : "query",
        "name" : "key",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "keyOfAerialMapPathParam" : {
        "description" : "Aerial map key",
        "explode" : false,
        "in" : "path",
        "name" : "key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "keyOfAssetPathParam" : {
        "description" : "Asset key",
        "explode" : false,
        "in" : "path",
        "name" : "key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "keyOfAttachmentPathParam" : {
        "description" : "Attachment key",
        "explode" : false,
        "in" : "path",
        "name" : "key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "keyOfBookmarkPathParam" : {
        "description" : "Bookmark key",
        "explode" : false,
        "in" : "path",
        "name" : "key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "keyOfFacilityPathParam" : {
        "description" : "Facility key",
        "explode" : false,
        "in" : "path",
        "name" : "key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "keyOfMetaPathParam" : {
        "description" : "Meta key",
        "explode" : false,
        "in" : "path",
        "name" : "key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "keyOfOnboardPathParam" : {
        "description" : "Onboard ID",
        "explode" : false,
        "in" : "path",
        "name" : "key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "keyOfReviewPathParam" : {
        "description" : "Review key",
        "explode" : false,
        "in" : "path",
        "name" : "key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "keyStringOfCustomPropertyQueryParam" : {
        "description" : "CustomProperty Key",
        "explode" : true,
        "in" : "query",
        "name" : "custom_property_key",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "kindOfBadgeQueryParam" : {
        "description" : "Badge Kind",
        "explode" : true,
        "in" : "query",
        "name" : "badge_kind",
        "required" : true,
        "schema" : {
          "enum" : [ "asset", "annotation" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "kindOfResourcePathParam" : {
        "description" : "Resource kind",
        "explode" : false,
        "in" : "path",
        "name" : "kind",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "kindParam" : {
        "explode" : true,
        "in" : "query",
        "name" : "kind",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "kindPathParam" : {
        "explode" : false,
        "in" : "path",
        "name" : "kind",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "levelClearFieldsParam" : {
        "description" : "Level fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "default_floorplan" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "levelIdQueryParam" : {
        "description" : "Level ID",
        "explode" : true,
        "in" : "query",
        "name" : "level_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "levelIdsQueryParam" : {
        "description" : "Level ID list",
        "explode" : false,
        "in" : "query",
        "name" : "level_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "lineItemFilterParam" : {
        "description" : "조건에 맞는 LineItem를 필터링 하며, 콤마(,)로 구분된 여러개의 조건을 입력할 수 있다.\n",
        "explode" : true,
        "in" : "query",
        "name" : "filter",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "lineItemIdQueryParam" : {
        "description" : "LineItem ID",
        "explode" : true,
        "in" : "query",
        "name" : "line_item_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "lineItemIdRequiredQueryParam" : {
        "description" : "LineItem ID",
        "explode" : true,
        "in" : "query",
        "name" : "line_item_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "mainCategoryIdsQueryParam" : {
        "description" : "Main Category ID list",
        "explode" : false,
        "in" : "query",
        "name" : "main_category_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "maskTypeParam" : {
        "description" : "mask Type",
        "explode" : true,
        "in" : "query",
        "name" : "mask_type",
        "required" : false,
        "schema" : {
          "enum" : [ "face", "body", "facebody", "custom" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "measurementTypesQueryParam" : {
        "description" : "Measurement type array",
        "explode" : true,
        "in" : "query",
        "name" : "measurement_types",
        "required" : false,
        "schema" : {
          "items" : {
            "$ref" : "#/components/schemas/MeasurementType"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "memberDisplayOptionParam" : {
        "description" : "Memeber display option",
        "explode" : true,
        "in" : "query",
        "name" : "display_option",
        "required" : true,
        "schema" : {
          "enum" : [ "directly", "directly-flatten", "inherited", "inherited-flatten", "all" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "meshClearFieldsParam" : {
        "description" : "Mesh fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "meshFilterParam" : {
        "description" : "Mesh Filter",
        "explode" : false,
        "in" : "query",
        "name" : "mesh_filter",
        "required" : false,
        "schema" : {
          "items" : {
            "example" : "kind!:sub",
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "meshIdPathParam" : {
        "description" : "Mesh ID",
        "explode" : false,
        "in" : "path",
        "name" : "mesh_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "meshIdsQueryParam" : {
        "description" : "Mesh IDs",
        "explode" : false,
        "in" : "query",
        "name" : "mesh_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "metaKeyPathParam" : {
        "description" : "Meta key",
        "explode" : false,
        "in" : "path",
        "name" : "meta_key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "minPermissionQueryParam" : {
        "description" : "minimum permission",
        "explode" : true,
        "in" : "query",
        "name" : "min_permission",
        "required" : false,
        "schema" : {
          "format" : "int32",
          "type" : "integer"
        },
        "style" : "form"
      },
      "modelIdQueryParam" : {
        "description" : "Model ID or Key",
        "explode" : true,
        "in" : "query",
        "name" : "model_id",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "modelKeyPathParameter" : {
        "description" : "Model Key",
        "explode" : false,
        "in" : "path",
        "name" : "key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "modelTypeQueryParam" : {
        "description" : "Model Type",
        "explode" : true,
        "in" : "query",
        "name" : "model_type",
        "required" : true,
        "schema" : {
          "enum" : [ "Facility" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "nameArrayQueryParams" : {
        "description" : "name list",
        "explode" : false,
        "in" : "query",
        "name" : "name",
        "required" : false,
        "schema" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "nameOfUserPreferencePathParam" : {
        "description" : "preference name",
        "explode" : false,
        "in" : "path",
        "name" : "name",
        "required" : true,
        "schema" : {
          "enum" : [ "annotation_member_assigned", "annotation_new_comment", "annotation_status_change", "facility_new_project", "record_preview_ready", "record_processing_completed", "record_waiting_for_panos" ],
          "type" : "string"
        },
        "style" : "simple"
      },
      "oidOfElementRecordPathParam" : {
        "description" : "Element Trace Document ID",
        "explode" : false,
        "in" : "path",
        "name" : "oid",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "onboardClearFieldsParam" : {
        "description" : "Onboard fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "started_at", "expires_at" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "orderParam" : {
        "description" : "Field name to order",
        "explode" : true,
        "in" : "query",
        "name" : "order_by",
        "required" : false,
        "schema" : {
          "example" : "created_at",
          "type" : "string"
        },
        "style" : "form"
      },
      "pageParam" : {
        "description" : "Page number",
        "explode" : true,
        "in" : "query",
        "name" : "page",
        "required" : false,
        "schema" : {
          "format" : "int32",
          "type" : "integer"
        },
        "style" : "form"
      },
      "panoClearFieldsParam" : {
        "description" : "Pano fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail", "mask_id" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "panoIdPathParam" : {
        "description" : "Pano ID",
        "explode" : false,
        "in" : "path",
        "name" : "pano_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "panoIdQueryParam" : {
        "description" : "Pano ID",
        "explode" : true,
        "in" : "query",
        "name" : "pano_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "panoIdsQueryParam" : {
        "description" : "Pano ID list",
        "explode" : false,
        "in" : "query",
        "name" : "pano_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "parentIdParam" : {
        "description" : "Parent ID",
        "explode" : true,
        "in" : "query",
        "name" : "parent_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "parentIdsParam" : {
        "description" : "Parent IDs",
        "explode" : false,
        "in" : "query",
        "name" : "parent_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "perPageParam" : {
        "description" : "Item count per page",
        "explode" : true,
        "in" : "query",
        "name" : "per_page",
        "required" : false,
        "schema" : {
          "format" : "int32",
          "type" : "integer"
        },
        "style" : "form"
      },
      "phaseIdsQueryParam" : {
        "description" : "Phase ID list",
        "explode" : false,
        "in" : "query",
        "name" : "phase_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "pointcloudClearFieldsParam" : {
        "description" : "Pointcloud fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "pointcloudFilterParam" : {
        "description" : "Pointcloud Filter",
        "explode" : false,
        "in" : "query",
        "name" : "pointcloud_filter",
        "required" : false,
        "schema" : {
          "items" : {
            "example" : "kind!:sub",
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "pointcloudIdsQueryParam" : {
        "description" : "Pointcloud IDs",
        "explode" : false,
        "in" : "query",
        "name" : "pointcloud_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "pointcloudTypeQueryParam" : {
        "description" : "Pointcloud Type",
        "explode" : true,
        "in" : "query",
        "name" : "pointcloud_type",
        "required" : false,
        "schema" : {
          "$ref" : "#/components/schemas/PointcloudType"
        },
        "style" : "form"
      },
      "predefinedFilterParam" : {
        "description" : "Predefined Filter",
        "explode" : true,
        "in" : "query",
        "name" : "p_filter",
        "required" : false,
        "schema" : {
          "items" : {
            "$ref" : "#/components/schemas/PredefinedFilter"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "priorityParam" : {
        "description" : "priority level",
        "explode" : true,
        "in" : "query",
        "name" : "priority",
        "required" : false,
        "schema" : {
          "enum" : [ "high", "medium", "low" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "progressBimExternalIdsQueryParam" : {
        "description" : "Progress Bim External ID list",
        "explode" : false,
        "in" : "query",
        "name" : "bim_external_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "progressBimObjectIdsQueryParam" : {
        "description" : "Progress Bim Object ID list",
        "explode" : false,
        "in" : "query",
        "name" : "bim_object_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "progressIdPathParam" : {
        "description" : "Progress ID",
        "explode" : false,
        "in" : "path",
        "name" : "progress_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "progressIdQueryParam" : {
        "description" : "Progress ID",
        "explode" : true,
        "in" : "query",
        "name" : "progress_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "progressIdsQueryParam" : {
        "description" : "Progress ID list",
        "explode" : false,
        "in" : "query",
        "name" : "progress_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "providerOfIntegrationPathParam" : {
        "description" : "Integration provider code",
        "explode" : false,
        "in" : "path",
        "name" : "provider",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "providersOfConnectQueryParam" : {
        "description" : "provider list",
        "explode" : false,
        "in" : "query",
        "name" : "providers",
        "required" : false,
        "schema" : {
          "items" : {
            "enum" : [ "matterport", "arcgis", "itwin", "cesium" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "providersOfIntegrationQueryParam" : {
        "description" : "provider list",
        "explode" : false,
        "in" : "query",
        "name" : "providers",
        "required" : false,
        "schema" : {
          "items" : {
            "enum" : [ "bim360", "procore", "plangrid", "acc", "revizto" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "publishedParam" : {
        "description" : "get only published reviews",
        "explode" : true,
        "in" : "query",
        "name" : "published",
        "required" : false,
        "schema" : {
          "type" : "boolean"
        },
        "style" : "form"
      },
      "recordClearFieldsParam" : {
        "description" : "Record fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail", "note" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "recordIdPathParam" : {
        "description" : "Record ID",
        "explode" : false,
        "in" : "path",
        "name" : "record_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "recordIdQueryParam" : {
        "description" : "Record ID",
        "explode" : true,
        "in" : "query",
        "name" : "record_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "recordIdsParam" : {
        "description" : "List of selected record IDs",
        "explode" : true,
        "in" : "query",
        "name" : "record_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "recordIdsQueryParam" : {
        "description" : "from_at/to_at 과 같이 입력되면 에러를 냄",
        "explode" : false,
        "in" : "query",
        "name" : "record_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "referenceIdPathParam" : {
        "description" : "Reference ID",
        "explode" : false,
        "in" : "path",
        "name" : "reference_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "resourceIdPathParam" : {
        "description" : "Resource ID",
        "explode" : false,
        "in" : "path",
        "name" : "resource_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "resourceKeyPathParam" : {
        "description" : "Resource key",
        "explode" : false,
        "in" : "path",
        "name" : "resource_key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "reviewClearFieldsParam" : {
        "description" : "Review fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "record_id", "thumbnail" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "reviewKeyPathParam" : {
        "description" : "Review key",
        "explode" : false,
        "in" : "path",
        "name" : "review_key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "reviewKeyRequiredQueryParam" : {
        "description" : "Review key",
        "explode" : true,
        "in" : "query",
        "name" : "review_key",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "reviewerIdPathParam" : {
        "description" : "Reviewer ID",
        "explode" : false,
        "in" : "path",
        "name" : "reviewer_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "reviewerIdsQueryParam" : {
        "description" : "Reviewer IDs",
        "explode" : false,
        "in" : "query",
        "name" : "reviewer_user_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "revisionTypeParam" : {
        "description" : "Revision Type",
        "explode" : true,
        "in" : "query",
        "name" : "revision_type",
        "required" : false,
        "schema" : {
          "enum" : [ "enhanced_image", "normal" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "roomClearFieldsParam" : {
        "description" : "Room fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "phase", "style", "geometry" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "roomIdPathParam" : {
        "description" : "Room ID",
        "explode" : false,
        "in" : "path",
        "name" : "room_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "roomIdsQueryParam" : {
        "description" : "Room ID list",
        "explode" : false,
        "in" : "query",
        "name" : "room_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "rowGroupColumnsQueryParam" : {
        "description" : "Columns for Row Grouping",
        "explode" : false,
        "in" : "query",
        "name" : "row_group_columns",
        "required" : false,
        "schema" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "sampleSizeParam" : {
        "description" : "Sample Size",
        "explode" : true,
        "in" : "query",
        "name" : "sample_size",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "searchParam" : {
        "description" : "Search query",
        "explode" : true,
        "in" : "query",
        "name" : "q",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "sketchClearFieldsParam" : {
        "description" : "Sketch fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "sketchEntityGuidsQueryParam" : {
        "description" : "Sketch entity guid array",
        "explode" : true,
        "in" : "query",
        "name" : "sketch_entity_guids",
        "required" : false,
        "schema" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "sketchIdPathParam" : {
        "description" : "Sketch ID",
        "explode" : false,
        "in" : "path",
        "name" : "sketch_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "sketchIdQueryParam" : {
        "description" : "Sketch ID",
        "explode" : true,
        "in" : "query",
        "name" : "sketch_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "sketchIdsQueryParam" : {
        "description" : "Sketch ID list",
        "explode" : false,
        "in" : "query",
        "name" : "sketch_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "sortParam" : {
        "description" : "Sort direction",
        "explode" : true,
        "in" : "query",
        "name" : "sort",
        "required" : false,
        "schema" : {
          "example" : "desc",
          "type" : "string"
        },
        "style" : "form"
      },
      "sourceKeyQueryParam" : {
        "description" : "Teleport Source Key",
        "explode" : true,
        "in" : "query",
        "name" : "source_key",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "sourceTypeQueryParam" : {
        "description" : "Teleport Source Type",
        "explode" : true,
        "in" : "query",
        "name" : "source_type",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "stateOfAttachmentQueryParam" : {
        "description" : "Attachment State",
        "explode" : true,
        "in" : "query",
        "name" : "state",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "statesOfIntegrationQueryParam" : {
        "description" : "state list",
        "explode" : false,
        "in" : "query",
        "name" : "states",
        "required" : false,
        "schema" : {
          "items" : {
            "enum" : [ "created", "active" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "statusIdsQueryParam" : {
        "description" : "Status ID list",
        "explode" : false,
        "in" : "query",
        "name" : "status_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "subCategoryIdsQueryParam" : {
        "description" : "Sub Category ID list",
        "explode" : false,
        "in" : "query",
        "name" : "sub_category_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "taskIdsQueryParam" : {
        "description" : "Task Id array",
        "explode" : false,
        "in" : "query",
        "name" : "task_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "teamClearFieldsParam" : {
        "description" : "Team fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "logo", "email_domain" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "teamFieldsParam" : {
        "description" : "Team fields to retrieve",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "teamIdPathParam" : {
        "description" : "Team ID",
        "explode" : false,
        "in" : "path",
        "name" : "team_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "teamIdQueryParam" : {
        "description" : "Team ID",
        "explode" : true,
        "in" : "query",
        "name" : "team_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "teleportIdQueryParam" : {
        "description" : "Teleport ID",
        "explode" : true,
        "in" : "query",
        "name" : "teleport_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "textRequiredQueryParam" : {
        "description" : "Search query",
        "explode" : true,
        "in" : "query",
        "name" : "text",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "textureIdPathParam" : {
        "description" : "Texture ID",
        "explode" : false,
        "in" : "path",
        "name" : "texture_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "textureIdsQueryParam" : {
        "description" : "Texture ID list",
        "explode" : false,
        "in" : "query",
        "name" : "texture_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "toAtParam" : {
        "description" : "UTC+0 based. Must be used together with `from_at`.",
        "explode" : true,
        "in" : "query",
        "name" : "to_at",
        "required" : false,
        "schema" : {
          "format" : "date-time",
          "type" : "string"
        },
        "style" : "form"
      },
      "trialStateFilterParam" : {
        "description" : "trial_state filter\n",
        "explode" : true,
        "in" : "query",
        "name" : "trial_state",
        "required" : false,
        "schema" : {
          "enum" : [ "none", "active", "expired" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "updatedSinceParam" : {
        "description" : "The server will send back the requested resource, with a 200 status, only if it has been last modified after the given date.",
        "explode" : false,
        "in" : "header",
        "name" : "X-CUPIX-UPDATED-SINCE",
        "required" : false,
        "schema" : {
          "format" : "date-time",
          "type" : "string"
        },
        "style" : "simple"
      },
      "useDraftReviewQueryParam" : {
        "description" : "Use draft review",
        "explode" : true,
        "in" : "query",
        "name" : "use_draft_on_review",
        "required" : false,
        "schema" : {
          "type" : "boolean"
        },
        "style" : "form"
      },
      "useSiteinsightsQueryParam" : {
        "description" : "siteinsights entity",
        "explode" : true,
        "in" : "query",
        "name" : "use_siteinsights",
        "required" : false,
        "schema" : {
          "type" : "boolean"
        },
        "style" : "form"
      },
      "userClearFieldsParam" : {
        "description" : "Usaer fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "avatar" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "userIdQueryParam" : {
        "description" : "User ID",
        "explode" : true,
        "in" : "query",
        "name" : "user_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "userIdsQueryParam" : {
        "description" : "User ID list",
        "explode" : false,
        "in" : "query",
        "name" : "user_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "valueStringOfRecordStatusQueryParam" : {
        "description" : "RecordStatus Value",
        "explode" : true,
        "in" : "query",
        "name" : "record_status_value",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "vendorGroupIdsQueryParam" : {
        "description" : "Vendor Group ID list",
        "explode" : false,
        "in" : "query",
        "name" : "vendor_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "versionedAtQueryParam" : {
        "description" : "timestamp of the version to bypass cache and ensure the retrieval of the most recent version of the data",
        "explode" : true,
        "in" : "query",
        "name" : "versioned_at",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "videoClearFieldsParam" : {
        "description" : "Video fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "thumbnail" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "visibilityParam" : {
        "description" : "리스트 조회 대상 설정\n\nuntrashed (default): 삭제되지 않은 상태\nin_trash_by_parent: 해당 인스턴스는 삭제되지 않았지만, 부모 인스턴스가 삭제된 상태\n",
        "explode" : true,
        "in" : "query",
        "name" : "visibility",
        "required" : false,
        "schema" : {
          "enum" : [ "untrashed", "in_trash_by_parent" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "workActionParam" : {
        "description" : "kind of work item",
        "explode" : true,
        "in" : "query",
        "name" : "work_action",
        "required" : false,
        "schema" : {
          "enum" : [ "siteinsights_qa", "capture_qa", "pointcloud_qa" ],
          "type" : "string"
        },
        "style" : "form"
      },
      "workItemIdPathParam" : {
        "description" : "WorkItem ID",
        "explode" : false,
        "in" : "path",
        "name" : "work_item_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "simple"
      },
      "workareaGroupIdsQueryParam" : {
        "description" : "Workarea Group ID list",
        "explode" : false,
        "in" : "query",
        "name" : "workarea_group_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "workareaIdsQueryParam" : {
        "description" : "Workarea ID list",
        "explode" : false,
        "in" : "query",
        "name" : "workarea_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "workflowClearFieldsParam" : {
        "description" : "Workflow fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "texture_id" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "workflowIdsQueryParam" : {
        "description" : "Workflow ID list",
        "explode" : false,
        "in" : "query",
        "name" : "workflow_ids",
        "required" : false,
        "schema" : {
          "items" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "workflowTypeQueryParam" : {
        "description" : "Workflow Type",
        "explode" : true,
        "in" : "query",
        "name" : "workflow_type",
        "required" : false,
        "schema" : {
          "example" : "list",
          "type" : "string"
        },
        "style" : "form"
      },
      "workflowTypesQueryParam" : {
        "description" : "Workflow Type list",
        "explode" : true,
        "in" : "query",
        "name" : "workflow_types",
        "required" : false,
        "schema" : {
          "items" : {
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "workspaceClearFieldsParam" : {
        "description" : "Workspace fields to clear",
        "explode" : false,
        "in" : "query",
        "name" : "fields",
        "required" : true,
        "schema" : {
          "items" : {
            "enum" : [ "logo" ],
            "type" : "string"
          },
          "type" : "array"
        },
        "style" : "form"
      },
      "workspaceFilterParam" : {
        "description" : "조건에 맞는 Workspace를 필터링 하며, 콤마(,)로 구분된 여러개의 조건을 입력할 수 있다.\n\n가능한 조건 및 입력값\n* state={created, active, inactive}\n",
        "explode" : true,
        "in" : "query",
        "name" : "filter",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "workspaceIdQueryParam" : {
        "description" : "Workspace ID",
        "explode" : true,
        "in" : "query",
        "name" : "workspace_id",
        "required" : false,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      },
      "workspaceIdRequiredQueryParam" : {
        "description" : "Workspace ID",
        "explode" : true,
        "in" : "query",
        "name" : "workspace_id",
        "required" : true,
        "schema" : {
          "format" : "int64",
          "type" : "integer"
        },
        "style" : "form"
      }
    },
    "requestBodies" : {
      "AddReviewerRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AddOrRemoveReviewerRequest"
            }
          }
        },
        "required" : true
      },
      "AddUsersGroupRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AddUsersGroupRequest"
            }
          }
        },
        "required" : true
      },
      "AuthenticateRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AuthenticateRequest"
            }
          }
        },
        "description" : "email: 사용자의 email/password로 로그인 한다. team_id를 반드시 입력해야 한다. refresh_token: refresh_token으로 새 access token을 요청한다. auth_params: 서버가 제공한 authentication parameters 로 조합된 signature로 인증을 요청한다. token, signature, signed_signupature, timestamp 등을 입력해야 한다. access_code: 특정 target(e.g., Capture)을 위한 access_code를 통해 인증한다. Backoffice를 통해 발급 받아 사용.\n",
        "required" : true
      },
      "BulkActivityRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkActivityRequest"
            }
          }
        },
        "required" : true
      },
      "BulkCategoryRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkCategoryRequest"
            }
          }
        },
        "required" : true
      },
      "BulkElementRecordRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/siteinsights_bulk_element_record_request"
            }
          }
        },
        "required" : true
      },
      "BulkElementRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/element_bulk_element_request"
            }
          }
        },
        "required" : true
      },
      "BulkElementTraceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkElementTraceRequest"
            }
          }
        },
        "required" : true
      },
      "BulkFormDesignRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkFormDesignRequest"
            }
          }
        },
        "required" : true
      },
      "BulkFormFieldRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkFormFieldRequest"
            }
          }
        },
        "required" : true
      },
      "BulkPanoRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkPanoRequest"
            }
          }
        },
        "required" : true
      },
      "BulkProgressRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkProgressRequest"
            }
          }
        },
        "required" : true
      },
      "BulkRecordStatusRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkRecordStatusRequest"
            }
          }
        },
        "required" : true
      },
      "BulkShareRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkShareRequest"
            }
          }
        },
        "required" : true
      },
      "BulkTaskRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkTaskRequest"
            }
          }
        },
        "required" : true
      },
      "BulkTrackingPlanRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkTrackingPlanRequest"
            }
          }
        },
        "required" : true
      },
      "BulkTrashAnnotationsRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkTrashAnnotationsRequest"
            }
          }
        },
        "required" : true
      },
      "BulkTrashMeasurementsRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkTrashMeasurementsRequest"
            }
          }
        },
        "required" : true
      },
      "BulkUpdateBadgeRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkUpdateBadgeRequest"
            }
          }
        },
        "required" : true
      },
      "BulkUpdatePanoRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkUpdatePanoRequest"
            }
          }
        },
        "required" : true
      },
      "BulkWorkareaRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkWorkareaRequest"
            }
          }
        },
        "required" : true
      },
      "ContactSalesRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ContactSalesRequest"
            }
          }
        },
        "required" : true
      },
      "CopyBimRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CopyBimRequest"
            }
          }
        },
        "required" : false
      },
      "CreateActivityBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateActivityBulkRequest"
            }
          }
        },
        "required" : true
      },
      "CreateActivityRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateActivityRequest"
            }
          }
        },
        "required" : true
      },
      "CreateAerialMapRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateAerialMapRequest"
            }
          }
        },
        "required" : true
      },
      "CreateAerialPhotoRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateAerialPhotoRequest"
            }
          }
        },
        "required" : true
      },
      "CreateAnnotationLayerRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateAnnotationLayerRequest"
            }
          }
        },
        "required" : true
      },
      "CreateAnnotationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateAnnotationRequest"
            }
          }
        },
        "required" : true
      },
      "CreateAreaRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateAreaRequest"
            }
          }
        },
        "required" : true
      },
      "CreateAssetRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateAssetRequest"
            }
          }
        },
        "required" : true
      },
      "CreateAttachmentRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateAttachmentRequest"
            }
          }
        },
        "required" : true
      },
      "CreateBadgeRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateBadgeRequest"
            }
          }
        },
        "required" : true
      },
      "CreateBillingAccountRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateBillingAccountRequest"
            }
          }
        },
        "required" : true
      },
      "CreateBimReferenceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateBimReferenceRequest"
            }
          }
        },
        "required" : true
      },
      "CreateBimRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateBimRequest"
            }
          }
        },
        "required" : true
      },
      "CreateBimRevisionRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateBimRevisionRequest"
            }
          }
        },
        "required" : true
      },
      "CreateBookmarkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateBookmarkRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCaptureReferenceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCaptureReferenceRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCaptureRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCaptureRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCaptureResourceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCaptureResourceRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCaptureWithMaterialsRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCaptureWithMaterialsRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCategoryBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCategoryBulkRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCategoryRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCategoryRequest"
            }
          }
        },
        "required" : true
      },
      "CreateClusterRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateClusterRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCommentRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCommentRequest"
            }
          }
        },
        "required" : true
      },
      "CreateConnectRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateConnectRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCustomEventRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCustomEventRequest"
            }
          }
        },
        "required" : true
      },
      "CreateCustomPropertyRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateCustomPropertyRequest"
            }
          }
        },
        "required" : true
      },
      "CreateDeviationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateDeviationRequest"
            }
          }
        },
        "required" : true
      },
      "CreateEntityParameterRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateEntityParameterRequest"
            }
          }
        },
        "required" : true
      },
      "CreateFacilityRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateFacilityRequest"
            }
          }
        },
        "required" : true
      },
      "CreateFcmDeviceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateFcmDeviceRequest"
            }
          }
        },
        "required" : true
      },
      "CreateFloorplanReferenceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateFloorplanReferenceRequest"
            }
          }
        },
        "required" : true
      },
      "CreateFloorplanRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateFloorplanRequest"
            }
          }
        },
        "required" : true
      },
      "CreateFloorplanSourceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateFloorplanSourceRequest"
            }
          }
        },
        "required" : true
      },
      "CreateFormDesignBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateFormDesignBulkRequest"
            }
          }
        },
        "required" : true
      },
      "CreateFormDesignRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateFormDesignRequest"
            }
          }
        },
        "required" : true
      },
      "CreateFormFieldBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateFormFieldBulkRequest"
            }
          }
        },
        "required" : true
      },
      "CreateFormFieldRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateFormFieldRequest"
            }
          }
        },
        "required" : true
      },
      "CreateGroupRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateGroupRequest"
            }
          }
        },
        "required" : true
      },
      "CreateIntegrationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateIntegrationRequest"
            }
          }
        },
        "required" : true
      },
      "CreateIssueRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateIssueRequest"
            }
          }
        },
        "description" : "A JSON object containg issue infromation",
        "required" : true
      },
      "CreateLevelRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateLevelRequest"
            }
          }
        },
        "required" : true
      },
      "CreateLinkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateLinkRequest"
            }
          }
        },
        "description" : "긴 URL을 go.cupix.works/KEY와 같은 URL로 생성해준다.",
        "required" : true
      },
      "CreateMeasurementRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateMeasurementRequest"
            }
          }
        },
        "required" : true
      },
      "CreateMeshReferenceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateMeshReferenceRequest"
            }
          }
        },
        "required" : true
      },
      "CreateMeshRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateMeshRequest"
            }
          }
        },
        "required" : true
      },
      "CreateMetricRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateMetricRequest"
            }
          }
        },
        "required" : true
      },
      "CreateNodeRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateNodeRequest"
            }
          }
        },
        "required" : true
      },
      "CreatePanoRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreatePanoRequest"
            }
          }
        },
        "required" : true
      },
      "CreatePhaseMetricRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreatePhaseMetricRequest"
            }
          }
        },
        "required" : true
      },
      "CreatePhaseRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreatePhaseRequest"
            }
          }
        },
        "required" : true
      },
      "CreatePointcloudRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreatePointcloudRequest"
            }
          }
        },
        "required" : true
      },
      "CreatePointcloudResourceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreatePointcloudResourceRequest"
            }
          }
        },
        "required" : true
      },
      "CreateProgressBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateProgressBulkRequest"
            }
          }
        },
        "required" : true
      },
      "CreateProgressRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateProgressRequest"
            }
          }
        },
        "required" : true
      },
      "CreateRecordRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateRecordRequest"
            }
          }
        },
        "required" : true
      },
      "CreateRecordStatusBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateRecordStatusBulkRequest"
            }
          }
        },
        "required" : true
      },
      "CreateRecordStatusRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateRecordStatusRequest"
            }
          }
        },
        "required" : true
      },
      "CreateReferenceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateReferenceRequest"
            }
          }
        },
        "required" : true
      },
      "CreateReportRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateReportRequest"
            }
          }
        },
        "required" : true
      },
      "CreateResourceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateResourceRequest"
            }
          }
        },
        "required" : true
      },
      "CreateReviewRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateReviewRequest"
            }
          }
        },
        "required" : true
      },
      "CreateRoomRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateRoomRequest"
            }
          }
        },
        "required" : true
      },
      "CreateSketchRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateSketchRequest"
            }
          }
        },
        "required" : true
      },
      "CreateStatusRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateStatusRequest"
            }
          }
        },
        "required" : true
      },
      "CreateTaskRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateTaskRequest"
            }
          }
        },
        "required" : true
      },
      "CreateTeleportRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateTeleportRequest"
            }
          }
        },
        "required" : true
      },
      "CreateTextureRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateTextureRequest"
            }
          }
        },
        "required" : true
      },
      "CreateTrackingPlanRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateTrackingPlanRequest"
            }
          }
        },
        "required" : true
      },
      "CreateUploadUrlRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateUploadUrlRequest"
            }
          }
        },
        "required" : true
      },
      "CreateVideoRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateVideoRequest"
            }
          }
        },
        "required" : true
      },
      "CreateWorkItemRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateWorkItemRequest"
            }
          }
        },
        "required" : true
      },
      "CreateWorkareaGroupRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateWorkareaGroupRequest"
            }
          }
        },
        "required" : true
      },
      "CreateWorkareaRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateWorkareaRequest"
            }
          }
        },
        "required" : true
      },
      "CreateWorkflowRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateWorkflowRequest"
            }
          }
        },
        "required" : true
      },
      "CreateWorkflowTextureRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateWorkflowTextureRequest"
            }
          }
        },
        "required" : true
      },
      "CreateWorkspaceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateWorkspaceRequest"
            }
          }
        },
        "required" : true
      },
      "FacilityRequestEmailConfirmationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FacilityRequestEmailConfirmationRequest"
            }
          }
        },
        "required" : true
      },
      "FacilitySignupRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FacilitySignupRequest"
            }
          }
        },
        "required" : true
      },
      "FinalizeStorageCreationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FinalizeStorageCreationRequest"
            }
          }
        },
        "required" : true
      },
      "ImportCategoryRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ImportCategoryRequest"
            }
          }
        },
        "required" : true
      },
      "InvokeBimRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/InvokeBimRequest"
            }
          }
        },
        "required" : true
      },
      "InvokeCaptureRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/InvokeCaptureRequest"
            }
          }
        },
        "required" : true
      },
      "InvokeFacilityRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/InvokeFacilityRequest"
            }
          }
        },
        "required" : true
      },
      "InvokePointcloudRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/InvokePointcloudRequest"
            }
          }
        },
        "required" : true
      },
      "InvokeRecordRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/InvokeRecordRequest"
            }
          }
        },
        "required" : true
      },
      "InvokeSketchRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/InvokeSketchRequest"
            }
          }
        },
        "required" : true
      },
      "MfaRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MfaRequest"
            }
          }
        },
        "required" : true
      },
      "ReinvokeBimRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ReinvokeBimRequest"
            }
          }
        },
        "required" : true
      },
      "RemoveReviewerRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AddOrRemoveReviewerRequest"
            }
          }
        },
        "required" : true
      },
      "RemoveUsersGroupRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RemoveUsersGroupRequest"
            }
          }
        },
        "required" : true
      },
      "RequestEmailConfirmationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RequestEmailConfirmationRequest"
            }
          }
        },
        "required" : true
      },
      "RequestResetPasswordRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RequestResetPasswordRequest"
            }
          }
        },
        "required" : true
      },
      "ResendTeamInvitationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ResendTeamInvitationRequest"
            }
          }
        },
        "required" : true
      },
      "ResetPasswordRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ResetPasswordRequest"
            }
          }
        },
        "required" : true
      },
      "ReviewRequestEmailConfirmationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ReviewRequestEmailConfirmationRequest"
            }
          }
        },
        "required" : true
      },
      "ReviewSignupRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ReviewSignupRequest"
            }
          }
        },
        "required" : true
      },
      "ReviseElementRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ReviseElementRequest"
            }
          }
        },
        "required" : true
      },
      "SafeTrashRecordRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SafeTrashRecordRequest"
            }
          }
        },
        "required" : true
      },
      "ShareRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ShareRequest"
            }
          }
        },
        "required" : true
      },
      "SignUpRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SignUpRequest"
            }
          }
        },
        "required" : true
      },
      "TaskValidationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TaskValidationRequest"
            }
          }
        },
        "required" : true
      },
      "TeamInvitationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TeamInvitationRequest"
            }
          }
        },
        "required" : true
      },
      "TeamRequestEmailConfirmationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TeamRequestEmailConfirmationRequest"
            }
          }
        },
        "required" : true
      },
      "TeamSignupRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TeamSignupRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateActivityBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateActivityBulkRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateActivityRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateActivityRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateAerialMapRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAerialMapRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateAerialPhotoRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAerialPhotoRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateAnnotationAssociationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAnnotationAssociationRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAnnotationAssociationRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateAnnotationBadgeAssociationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAnnotationAssociationRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAnnotationAssociationRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateAnnotationLayerRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAnnotationLayerRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateAnnotationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAnnotationRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAnnotationRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateAreaRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAreaRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateAssetBadgeAssociationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAssetBadgeAssociationRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAssetBadgeAssociationRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateAssetRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAssetRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateAvailabilityStateRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateAvailabilityStateRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateBadgeRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateBadgeRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateBillingAccountRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateBillingAccountRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateBimRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateBimRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateBimRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateBimRevisionRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateBimRevisionRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateBimRevisionRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateBookmarkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateBookmarkRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateCaptureRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateCaptureRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateCaptureRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateCategoryBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateCategoryBulkRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateCategoryRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateCategoryRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateClusterParentRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateClusterParentRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateClusterRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateClusterRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateClusterRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateCommentRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateCommentRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateConnectRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateConnectRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateCurrentUserRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateCurrentUserRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateCustomPropertyRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateCustomPropertyRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateDeviationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateDeviationRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateDeviationRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateEditingEntityRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateEditingEntityRequest"
            }
          }
        },
        "description" : "A JSON object containing editing entity information",
        "required" : true
      },
      "UpdateEditingRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateEditingRequest"
            }
          }
        },
        "description" : "A JSON object containing editing information",
        "required" : true
      },
      "UpdateElementRecordRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateElementRecordRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateElementRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateElementRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateElementTraceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateElementTraceRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateFacilityRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateFacilityRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateFacilityRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateFieldRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateFieldRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateFloorplanRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateFloorplanRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateFloorplanRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateFloorplanSourceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateFloorplanSourceRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateFormDesignBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateFormDesignBulkRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateFormDesignRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateFormDesignRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateFormFieldBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateFormFieldBulkRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateFormFieldRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateFormFieldRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateGroupRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateGroupRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateGroupWhitelistRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateGroupWhitelistRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateIntegrationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateIntegrationRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateJobRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateJobRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateLevelRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateLevelRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateMeasurementRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateMeasurementRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateMeshRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateMeshRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateMetaRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object"
            }
          }
        },
        "required" : true
      },
      "UpdateMetricRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateMetricRequest"
            }
          }
        },
        "required" : true
      },
      "UpdatePanoRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdatePanoRequest"
            }
          }
        },
        "required" : true
      },
      "UpdatePanoStitchRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdatePanoStitchRequest"
            }
          }
        },
        "required" : true
      },
      "UpdatePhaseMetricRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdatePhaseMetricRequest"
            }
          }
        },
        "required" : true
      },
      "UpdatePhaseRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdatePhaseRequest"
            }
          }
        },
        "required" : true
      },
      "UpdatePointcloudRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdatePointcloudRequest"
            }
          }
        },
        "required" : true
      },
      "UpdatePositionRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdatePositionRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateProgressBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateProgressBulkRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateProgressRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateProgressRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateRecordRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateRecordRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateRecordRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateRecordStatusBulkRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateRecordStatusBulkRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateRecordStatusRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateRecordStatusRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateReferenceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateReferenceRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateReferenceSourcesRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateReferenceSourcesRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateReportRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateReportRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateReviewByRuleRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateReviewByRuleRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateReviewRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateReviewRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateReviewerStateRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateReviewerStateRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateRoomRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateRoomRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateRoomRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateSiteinsightsConfigRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateSiteinsightsConfigRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateSketchRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateSketchRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateSketchRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateStatusRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateStatusRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateTaskRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateTaskRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateTeamRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateTeamRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateTeamRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateTeleportRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateTeleportRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateTextureRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateTextureRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateTrackingPlanRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateTrackingPlanRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateUserPreferenceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateUserPreferenceRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateUserRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateUserRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateVideoRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateVideoRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateVideoRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateWorkItemRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateWorkItemRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateWorkareaGroupRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateWorkareaGroupRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateWorkareaRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateWorkareaRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateWorkflowRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateWorkflowRequest"
            }
          }
        },
        "required" : true
      },
      "UpdateWorkspaceRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateWorkspaceRequest"
            }
          },
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/UpdateWorkspaceRequest"
            }
          }
        },
        "required" : true
      },
      "WorkspaceRequestEmailConfirmationRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkspaceRequestEmailConfirmationRequest"
            }
          }
        },
        "required" : true
      },
      "WorkspaceSignupRequestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkspaceSignupRequest"
            }
          }
        },
        "required" : true
      }
    },
    "responses" : {
      "400BadRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            }
          }
        },
        "description" : "Bad Request"
      },
      "401Unauthorized" : {
        "description" : "Unauthorized request"
      },
      "403PermissionDenied" : {
        "description" : "Permission denied"
      },
      "404NotFound" : {
        "description" : "Not found"
      },
      "ActivityListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ActivityListResponse"
            }
          }
        },
        "description" : "Activity list"
      },
      "ActivityResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ActivityResponse"
            }
          }
        },
        "description" : "Activity"
      },
      "AerialMapListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AerialMapListResponse"
            }
          }
        },
        "description" : "Aerial map list"
      },
      "AerialMapResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AerialMapResponse"
            }
          }
        },
        "description" : "Aerial map"
      },
      "AerialPhotoListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AerialPhotoListResponse"
            }
          }
        },
        "description" : "Aerial photo list"
      },
      "AerialPhotoResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AerialPhotoResponse"
            }
          }
        },
        "description" : "Aerial photo"
      },
      "AnnotationLayerListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AnnotationLayerListResponse"
            }
          }
        },
        "description" : "AnnotationLayer list"
      },
      "AnnotationLayerResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AnnotationLayerResponse"
            }
          }
        },
        "description" : "AnnotationLayer"
      },
      "AnnotationListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AnnotationListResponse"
            }
          }
        },
        "description" : "Annotation list"
      },
      "AnnotationResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AnnotationResponse"
            }
          }
        },
        "description" : "Annotation"
      },
      "AreaListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AreaListResponse"
            }
          }
        },
        "description" : "Area list"
      },
      "AreaResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AreaResponse"
            }
          }
        },
        "description" : "Area"
      },
      "AssetListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AssetListResponse"
            }
          }
        },
        "description" : "Asset list"
      },
      "AssetResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AssetResponse"
            }
          }
        },
        "description" : "Asset"
      },
      "AttachmentListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AttachmentListResponse"
            }
          }
        },
        "description" : "Attachment list"
      },
      "AttachmentResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AttachmentResponse"
            }
          }
        },
        "description" : "Attachment"
      },
      "AuthenticateResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AuthenticateResponse"
            }
          }
        },
        "description" : "Authentication"
      },
      "AutodeskForgeTokenResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AutodeskForgeTokenResponse"
            }
          }
        },
        "description" : "Redirect to Autodesk Forge"
      },
      "AwsCredentialsResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/AwsCredentialsResponse"
            }
          }
        },
        "description" : "AWS Credential"
      },
      "BadgeListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BadgeListResponse"
            }
          }
        },
        "description" : "Badge list"
      },
      "BadgeResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BadgeResponse"
            }
          }
        },
        "description" : "Badge"
      },
      "BillingAccountListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BillingAccountListResponse"
            }
          }
        },
        "description" : "BillingAccount list"
      },
      "BillingAccountResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BillingAccountResponse"
            }
          }
        },
        "description" : "BillingAccount"
      },
      "BimListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BimListResponse"
            }
          }
        },
        "description" : "Bim list"
      },
      "BimResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BimResponse"
            }
          }
        },
        "description" : "Bim"
      },
      "BimRevisionListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BimRevisionListResponse"
            }
          }
        },
        "description" : "Bim Revision list"
      },
      "BimRevisionResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BimRevisionResponse"
            }
          }
        },
        "description" : "Bim Revision"
      },
      "BookmarkListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BookmarkListResponse"
            }
          }
        },
        "description" : "Bookmark list"
      },
      "BookmarkResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BookmarkResponse"
            }
          }
        },
        "description" : "Bookmark"
      },
      "BulkCreationResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkCreationResponse"
            }
          }
        },
        "description" : "Ids created by bulk operation"
      },
      "BulkResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BulkResponse"
            }
          }
        },
        "description" : "Ids created by bulk operation"
      },
      "CaptureListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CaptureListResponse"
            }
          }
        },
        "description" : "Capture list"
      },
      "CaptureResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CaptureResponse"
            }
          }
        },
        "description" : "Capture"
      },
      "CaptureWithMaterialsResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CaptureWithMaterialsResponse"
            }
          }
        },
        "description" : "Capture"
      },
      "CategoryListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CategoryListResponse"
            }
          }
        },
        "description" : "Category list"
      },
      "CategoryResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CategoryResponse"
            }
          }
        },
        "description" : "Category"
      },
      "ClusterListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ClusterListResponse"
            }
          }
        },
        "description" : "Cluster list"
      },
      "ClusterResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ClusterResponse"
            }
          }
        },
        "description" : "Cluster"
      },
      "CommentListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CommentListResponse"
            }
          }
        },
        "description" : "Comment list"
      },
      "CommentResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CommentResponse"
            }
          }
        },
        "description" : "Comment"
      },
      "ConnectListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ConnectListResponse"
            }
          }
        },
        "description" : "Connect list"
      },
      "ConnectResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ConnectResponse"
            }
          }
        },
        "description" : "Connect information"
      },
      "CreditTransactionListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreditTransactionListResponse"
            }
          }
        },
        "description" : "License list"
      },
      "CustomPropertyListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CustomPropertyListResponse"
            }
          }
        },
        "description" : "CustomProperty list"
      },
      "CustomPropertyResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CustomPropertyResponse"
            }
          }
        },
        "description" : "CustomProperty"
      },
      "DeviationListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/DeviationListResponse"
            }
          }
        },
        "description" : "Deviation list"
      },
      "DeviationResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/DeviationResponse"
            }
          }
        },
        "description" : "Deviation"
      },
      "EditingEntityListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/EditingEntityListResponse"
            }
          }
        },
        "description" : "Editing Entity list"
      },
      "EditingEntityResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/EditingEntityResponse"
            }
          }
        },
        "description" : "Editing Entity"
      },
      "EditingListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/EditingListResponse"
            }
          }
        },
        "description" : "Editing list"
      },
      "EditingResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/EditingResponse"
            }
          }
        },
        "description" : "Editing"
      },
      "ElementListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ElementListResponse"
            }
          }
        },
        "description" : "Element list"
      },
      "ElementRecordListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ElementRecordListResponse"
            }
          }
        },
        "description" : "ElementRecord list"
      },
      "ElementRecordUpdateResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ElementRecordUpdateResponse"
            }
          }
        },
        "description" : "ElementRecord"
      },
      "ElementResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ElementResponse"
            }
          }
        },
        "description" : "Element"
      },
      "ElementTraceListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ElementTraceListResponse"
            }
          }
        },
        "description" : "ElementTrace list"
      },
      "ElementTraceResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ElementTraceResponse"
            }
          }
        },
        "description" : "ElementTrace"
      },
      "EmailDomainListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/EmailDomainListResponse"
            }
          }
        },
        "description" : "Email domain list"
      },
      "EmailResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/EmailResponse"
            }
          }
        },
        "description" : "Success"
      },
      "EntityParameterListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/EntityParameterListResponse"
            }
          }
        },
        "description" : "EntityParameter list"
      },
      "EntityParameterResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/EntityParameterResponse"
            }
          }
        },
        "description" : "EntityParameter"
      },
      "EventResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/EventResponse"
            }
          }
        },
        "description" : "Resource"
      },
      "FacilityListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FacilityListResponse"
            }
          }
        },
        "description" : "Facility list"
      },
      "FacilityResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FacilityResponse"
            }
          }
        },
        "description" : "Facility"
      },
      "FcmDeviceListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FcmDeviceListResponse"
            }
          }
        },
        "description" : "FCM Device List"
      },
      "FcmDeviceResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FcmDeviceResponse"
            }
          }
        },
        "description" : "FCM Device"
      },
      "FeedListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FeedListResponse"
            }
          }
        },
        "description" : "Feed list"
      },
      "FieldListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FieldListResponse"
            }
          }
        },
        "description" : "Field list"
      },
      "FieldResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FieldResponse"
            }
          }
        },
        "description" : "Field"
      },
      "FloorplanListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FloorplanListResponse"
            }
          }
        },
        "description" : "Floorplan list"
      },
      "FloorplanResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FloorplanResponse"
            }
          }
        },
        "description" : "Floorplan"
      },
      "FloorplanSourceListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FloorplanSourceListResponse"
            }
          }
        },
        "description" : "FloorplanSource list"
      },
      "FloorplanSourceResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FloorplanSourceResponse"
            }
          }
        },
        "description" : "FloorplanSource"
      },
      "FormDesignListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FormDesignListResponse"
            }
          }
        },
        "description" : "FormDesign list"
      },
      "FormDesignResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FormDesignResponse"
            }
          }
        },
        "description" : "FormDesign"
      },
      "FormFieldListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FormFieldListResponse"
            }
          }
        },
        "description" : "FormField list"
      },
      "FormFieldResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/FormFieldResponse"
            }
          }
        },
        "description" : "FormField"
      },
      "GroupListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/GroupListResponse"
            }
          }
        },
        "description" : "Group list"
      },
      "GroupResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/GroupResponse"
            }
          }
        },
        "description" : "Group"
      },
      "IntegrationAccessTokenResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/IntegrationAccessTokenResponse"
            }
          }
        },
        "description" : "Integration access token"
      },
      "IntegrationListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/IntegrationListResponse"
            }
          }
        },
        "description" : "Integration list"
      },
      "IntegrationResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/IntegrationResponse"
            }
          }
        },
        "description" : "Integration information"
      },
      "IssueListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/IssueListResponse"
            }
          }
        },
        "description" : "Issue list response"
      },
      "IssueResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/IssueResponse"
            }
          }
        },
        "description" : "Issue response"
      },
      "IssueTypeListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/IssueTypeListResponse"
            }
          }
        },
        "description" : "Issue Type list response"
      },
      "JobResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/JobResponse"
            }
          }
        },
        "description" : "Job"
      },
      "LevelListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/LevelListResponse"
            }
          }
        },
        "description" : "Level list"
      },
      "LevelResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/LevelResponse"
            }
          }
        },
        "description" : "Level"
      },
      "LicenseListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/LicenseListResponse"
            }
          }
        },
        "description" : "License list"
      },
      "LinkResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/LinkResponse"
            }
          }
        },
        "description" : "Link"
      },
      "MaskResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MaskResponse"
            }
          }
        },
        "description" : "Mask"
      },
      "MeasurementListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MeasurementListResponse"
            }
          }
        },
        "description" : "Measurement list"
      },
      "MeasurementResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MeasurementResponse"
            }
          }
        },
        "description" : "Measurement"
      },
      "MeshListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MeshListResponse"
            }
          }
        },
        "description" : "Mesh list"
      },
      "MeshResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MeshResponse"
            }
          }
        },
        "description" : "Mesh"
      },
      "MetaResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MetaResponse"
            }
          }
        },
        "description" : "Meta information"
      },
      "MetricListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MetricListResponse"
            }
          }
        },
        "description" : "Metric list"
      },
      "MetricResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/MetricResponse"
            }
          }
        },
        "description" : "Metric"
      },
      "NodeListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/NodeListResponse"
            }
          }
        },
        "description" : "Node list"
      },
      "NodeResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/NodeResponse"
            }
          }
        },
        "description" : "Node"
      },
      "OnboardCompletionResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/OnboardCompletionResponse"
            }
          }
        },
        "description" : "Onboard list"
      },
      "OnboardListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/OnboardListResponse"
            }
          }
        },
        "description" : "Onboard list"
      },
      "PanoListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PanoListResponse"
            }
          }
        },
        "description" : "Pano list"
      },
      "PanoResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PanoResponse"
            }
          }
        },
        "description" : "Pano"
      },
      "PhaseListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PhaseListResponse"
            }
          }
        },
        "description" : "Phase list"
      },
      "PhaseMetricFormulaValidationResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PhaseMetricFormulaValidationResponse"
            }
          }
        },
        "description" : "PhaseMetric Formula Validation"
      },
      "PhaseMetricListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PhaseMetricListResponse"
            }
          }
        },
        "description" : "PhaseMetric List"
      },
      "PhaseMetricResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PhaseMetricResponse"
            }
          }
        },
        "description" : "PhaseMetric"
      },
      "PhaseResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PhaseResponse"
            }
          }
        },
        "description" : "Phase"
      },
      "PointcloudListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PointcloudListResponse"
            }
          }
        },
        "description" : "Pointcloud list"
      },
      "PointcloudResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PointcloudResponse"
            }
          }
        },
        "description" : "Pointcloud"
      },
      "PowerBiEmbedTokenResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PowerBiEmbedTokenResponse"
            }
          }
        },
        "description" : "Power BI Embedded Token"
      },
      "PowerBiReportListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PowerBiReportListResponse"
            }
          }
        },
        "description" : "Power BI Report List"
      },
      "ProgressListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ProgressListResponse"
            }
          }
        },
        "description" : "Progress list"
      },
      "ProgressResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ProgressResponse"
            }
          }
        },
        "description" : "Progress"
      },
      "PublicReviewResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PublicReviewResponse"
            }
          }
        },
        "description" : "Public Review"
      },
      "RealityCaptureListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RealityCaptureListResponse"
            }
          }
        },
        "description" : "Mesh list"
      },
      "RecordListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RecordListResponse"
            }
          }
        },
        "description" : "Record list"
      },
      "RecordResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RecordResponse"
            }
          }
        },
        "description" : "Record"
      },
      "RecordStatusListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RecordStatusListResponse"
            }
          }
        },
        "description" : "RecordStatus list"
      },
      "RecordStatusResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RecordStatusResponse"
            }
          }
        },
        "description" : "RecordStatus"
      },
      "ReferenceListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ReferenceListResponse"
            }
          }
        },
        "description" : "Reference list"
      },
      "ReferenceResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ReferenceResponse"
            }
          }
        },
        "description" : "Reference"
      },
      "ReportAnnotationListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ReportAnnotationListResponse"
            }
          }
        },
        "description" : "Report annotation list"
      },
      "ReportListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ReportListResponse"
            }
          }
        },
        "description" : "Report list"
      },
      "ReportResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ReportResponse"
            }
          }
        },
        "description" : "Report"
      },
      "RequestEmailConfirmationResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RequestEmailConfirmationResponse"
            }
          }
        },
        "description" : "Success"
      },
      "ResendTeamInvitationSentResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ResendTeamInvitationSentResponse"
            }
          }
        },
        "description" : "Invitation sent"
      },
      "ResourceListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ResourceListResponse"
            }
          }
        },
        "description" : "Resource list"
      },
      "ResourceResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ResourceResponse"
            }
          }
        },
        "description" : "Resource"
      },
      "ReviewListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ReviewListResponse"
            }
          }
        },
        "description" : "Review list"
      },
      "ReviewResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ReviewResponse"
            }
          }
        },
        "description" : "Review"
      },
      "RoomListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RoomListResponse"
            }
          }
        },
        "description" : "Room list"
      },
      "RoomResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RoomResponse"
            }
          }
        },
        "description" : "Room"
      },
      "SearchCountResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SearchCountResponse"
            }
          }
        },
        "description" : "Search counts"
      },
      "SelfSignupWhitelistResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SelfSignupWhitelistResponse"
            }
          }
        },
        "description" : "Success"
      },
      "SessionResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SessionResponse"
            }
          }
        },
        "description" : "Session"
      },
      "ShareListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ShareListResponse"
            }
          }
        },
        "description" : "Shared memeber list"
      },
      "SiteInsightCellListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SiteInsightCellListResponse"
            }
          }
        },
        "description" : "SiteInsightCell list"
      },
      "SiteinsightsConfigResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SiteinsightsConfigResponse"
            }
          }
        },
        "description" : "SiteInsight Config"
      },
      "SketchListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SketchListResponse"
            }
          }
        },
        "description" : "Sketch list"
      },
      "SketchResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SketchResponse"
            }
          }
        },
        "description" : "Sketch"
      },
      "SpacetimeListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SpacetimeListResponse"
            }
          }
        },
        "description" : "Spacetime list"
      },
      "StatusListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/StatusListResponse"
            }
          }
        },
        "description" : "Status list"
      },
      "StatusResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/StatusResponse"
            }
          }
        },
        "description" : "Status"
      },
      "StorageListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/StorageListResponse"
            }
          }
        },
        "description" : "Storage list"
      },
      "StorageResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/StorageResponse"
            }
          }
        },
        "description" : "Storage"
      },
      "SubscriptionListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SubscriptionListResponse"
            }
          }
        },
        "description" : "Subscription list"
      },
      "SubscriptionResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SubscriptionResponse"
            }
          }
        },
        "description" : "Subscription"
      },
      "TaskListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TaskListResponse"
            }
          }
        },
        "description" : "Task list"
      },
      "TaskResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TaskResponse"
            }
          }
        },
        "description" : "Task"
      },
      "TaskValidationResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TaskValidationResponse"
            }
          }
        },
        "description" : "Task Validation Response"
      },
      "TeamInvitationSentResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TeamInvitationSentResponse"
            }
          }
        },
        "description" : "Invitation sent"
      },
      "TeamListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TeamListResponse"
            }
          }
        },
        "description" : "Team list"
      },
      "TeamResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TeamResponse"
            }
          }
        },
        "description" : "Team"
      },
      "TeleportListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TeleportListResponse"
            }
          }
        },
        "description" : "Teleport list"
      },
      "TeleportResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TeleportResponse"
            }
          }
        },
        "description" : "Teleport"
      },
      "TextureListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TextureListResponse"
            }
          }
        },
        "description" : "Texture list"
      },
      "TextureResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TextureResponse"
            }
          }
        },
        "description" : "Texture"
      },
      "TrackingPlanListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TrackingPlanListResponse"
            }
          }
        },
        "description" : "TrackingPlan list"
      },
      "TrackingPlanResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TrackingPlanResponse"
            }
          }
        },
        "description" : "TrackingPlan"
      },
      "TrashListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TrashListResponse"
            }
          }
        },
        "description" : "Trashed item list"
      },
      "UploadCredentialsResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UploadCredentialResponse"
            }
          }
        },
        "description" : "S3 Upload Credential"
      },
      "UserGroupAutocompleteResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UserGroupAutocompleteResponse"
            }
          }
        },
        "description" : "User and Group list"
      },
      "UserListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UserListResponse"
            }
          }
        },
        "description" : "User list"
      },
      "UserPreferenceListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UserPreferenceListResponse"
            }
          }
        },
        "description" : "User preference list"
      },
      "UserPreferenceResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UserPreferenceResponse"
            }
          }
        },
        "description" : "User preference"
      },
      "UserResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UserResponse"
            }
          }
        },
        "description" : "User"
      },
      "VideoListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/VideoListResponse"
            }
          }
        },
        "description" : "Video list"
      },
      "VideoResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/VideoResponse"
            }
          }
        },
        "description" : "Video"
      },
      "WorkItemListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkItemListResponse"
            }
          }
        },
        "description" : "WorkItem list"
      },
      "WorkItemResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkItemResponse"
            }
          }
        },
        "description" : "WorkItem"
      },
      "WorkareaGroupListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkareaGroupListResponse"
            }
          }
        },
        "description" : "WorkareaGroup list"
      },
      "WorkareaGroupResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkareaGroupResponse"
            }
          }
        },
        "description" : "WorkareaGroup"
      },
      "WorkareaListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkareaListResponse"
            }
          }
        },
        "description" : "Workarea list"
      },
      "WorkareaResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkareaResponse"
            }
          }
        },
        "description" : "Workarea"
      },
      "WorkflowListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkflowListResponse"
            }
          }
        },
        "description" : "Workflow list"
      },
      "WorkflowResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkflowResponse"
            }
          }
        },
        "description" : "Workflow"
      },
      "WorkflowTextureIdListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkflowTextureIdListResponse"
            }
          }
        },
        "description" : "Texture Ids for each Workflows"
      },
      "WorkspaceListResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkspaceListResponse"
            }
          }
        },
        "description" : "Workspace list"
      },
      "WorkspaceResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WorkspaceResponse"
            }
          }
        },
        "description" : "Workspace"
      }
    },
    "schemas" : {
      "AccAnnotationAttributes" : {
        "properties" : {
          "acc_hub_id" : {
            "type" : "string"
          },
          "acc_project_id" : {
            "type" : "string"
          },
          "acc_issue_id" : {
            "type" : "string"
          },
          "acc_attachment_id" : {
            "type" : "string"
          },
          "acc_container_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AccIntegration" : {
        "properties" : {
          "hub_id" : {
            "type" : "string"
          },
          "container_id" : {
            "type" : "string"
          },
          "project_id" : {
            "type" : "string"
          },
          "issue_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AccessibleEditorMenuAttribute" : {
        "properties" : {
          "bim_editor_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "level_editor_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "capture_editor_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ActionAttribute" : {
        "properties" : {
          "waiting_actions" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "running_actions" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Activity" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Activity_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "ActivityItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Activity"
          }
        },
        "type" : "object"
      },
      "ActivityList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/ActivityItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "ActivityListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ActivityListResponse_allOf"
        } ]
      },
      "ActivityResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ActivityResponse_allOf"
        } ]
      },
      "ActivityType" : {
        "enum" : [ "none", "baseline", "full", "simple", "bim_property", "wbs" ],
        "type" : "string"
      },
      "AddOrRemoveReviewerRequest" : {
        "properties" : {
          "user_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "AddUsersGroupRequest" : {
        "properties" : {
          "user_ids" : {
            "items" : {
              "description" : "User ID",
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "required" : [ "user_ids" ],
        "type" : "object"
      },
      "AerialMap" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AerialMap_allOf"
        } ]
      },
      "AerialMapItem" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/AerialMap"
          }
        },
        "type" : "object"
      },
      "AerialMapList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/AerialMapItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "AerialMapListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AerialMapListResponse_allOf"
        } ]
      },
      "AerialMapResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AerialMapResponse_allOf"
        } ]
      },
      "AerialPhoto" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AerialPhoto_allOf"
        } ]
      },
      "AerialPhotoItem" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/AerialPhoto"
          }
        },
        "type" : "object"
      },
      "AerialPhotoList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/AerialPhotoItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "AerialPhotoListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AerialPhotoListResponse_allOf"
        } ]
      },
      "AerialPhotoResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AerialPhotoResponse_allOf"
        } ]
      },
      "AggsItem" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AllowedAnnotationKind" : {
        "items" : {
          "enum" : [ "acc", "acc_issue", "acc_rfi", "bim360", "bim360_issue", "bim360_rfi", "form", "link", "markup", "note", "plangrid_rfi", "plangrid_task", "procore_observation", "procore_punch_list", "procore_rfi", "voice", "procore", "plangrid" ],
          "type" : "string"
        },
        "type" : "array"
      },
      "AnchorAttribute" : {
        "properties" : {
          "anchor_type" : {
            "type" : "string"
          },
          "anchor_position" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "anchor_id" : {
            "format" : "int64",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "Annotatable" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AnnotatableRequest" : {
        "properties" : {
          "capture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "pano_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "mesh_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "pointcloud_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Annotation" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Annotation_allOf"
        }, {
          "$ref" : "#/components/schemas/Bim360AnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/AccAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/ProcoreAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/PlangridAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/LocationAttribute"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/TranscriptionAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "AnnotationItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Annotation"
          }
        },
        "type" : "object"
      },
      "AnnotationKind" : {
        "enum" : [ "acc_issue", "acc_rfi", "bim360", "bim360_issue", "bim360_rfi", "form", "link", "markup", "note", "plangrid_rfi", "plangrid_task", "procore_observation", "procore_punch_list", "procore_rfi", "voice" ],
        "type" : "string"
      },
      "AnnotationLayer" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/AnnotationLayer_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/PublishableAttribute"
        } ]
      },
      "AnnotationLayerItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/AnnotationLayer"
          }
        },
        "type" : "object"
      },
      "AnnotationLayerList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/AnnotationLayerItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "AnnotationLayerListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AnnotationLayerListResponse_allOf"
        } ]
      },
      "AnnotationLayerResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AnnotationLayerResponse_allOf"
        } ]
      },
      "AnnotationList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/AnnotationItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "AnnotationListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AnnotationListResponse_allOf"
        } ]
      },
      "AnnotationResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AnnotationResponse_allOf"
        } ]
      },
      "AnnotationsItem" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "AppliedLicenseState" : {
        "enum" : [ "active", "expired", "none" ],
        "type" : "string"
      },
      "ArcgisConnect" : {
        "properties" : {
          "arcgis_api_key" : {
            "type" : "string"
          },
          "arcgis_web_map_id" : {
            "type" : "string"
          },
          "arcgis_client_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Area" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Area_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        } ]
      },
      "AreaItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Area"
          }
        },
        "type" : "object"
      },
      "AreaList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/AreaItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "AreaListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AreaListResponse_allOf"
        } ]
      },
      "AreaResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AreaResponse_allOf"
        } ]
      },
      "Asset" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Asset_allOf"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/TranscriptionAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/CoverUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "AssetItem" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Asset"
          }
        },
        "type" : "object"
      },
      "AssetList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/AssetItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "AssetListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AssetListResponse_allOf"
        } ]
      },
      "AssetResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AssetResponse_allOf"
        } ]
      },
      "AssetState" : {
        "enum" : [ "created", "resource_uploading", "resource_missing", "resource_uploaded", "processing", "done", "error" ],
        "type" : "string"
      },
      "AssetType" : {
        "enum" : [ "image", "voice_memo" ],
        "type" : "string"
      },
      "AssetUpdateableState" : {
        "enum" : [ "done", "error" ],
        "type" : "string"
      },
      "Assetable" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Attachment" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Attachment_allOf"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/AttachmentTypeAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "AttachmentItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Attachment"
          }
        },
        "type" : "object"
      },
      "AttachmentList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/AttachmentItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "AttachmentListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AttachmentListResponse_allOf"
        } ]
      },
      "AttachmentResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AttachmentResponse_allOf"
        } ]
      },
      "AttachmentTypeAttribute" : {
        "properties" : {
          "attachment_type" : {
            "enum" : [ "voice" ],
            "nullable" : true,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AuthenticateRequest" : {
        "properties" : {
          "grant_type" : {
            "enum" : [ "email", "refresh_token", "auth_params", "access_code" ],
            "type" : "string"
          },
          "team_domain" : {
            "description" : "Team domain name",
            "type" : "string"
          },
          "email" : {
            "description" : "User email",
            "format" : "email",
            "type" : "string"
          },
          "password" : {
            "description" : "User password",
            "type" : "string"
          },
          "refresh_token" : {
            "description" : "Refresh token",
            "type" : "string"
          },
          "token" : {
            "description" : "Session의 token",
            "type" : "string"
          },
          "signature" : {
            "description" : "Session의 signature",
            "type" : "string"
          },
          "signed_signature" : {
            "description" : "개인키를 사용하여 암호화 및 Base64 urlsafe encoding 한 Signature",
            "type" : "string"
          },
          "timestamp" : {
            "description" : "Session의 signature가 생성될 때 사용된 timestamp",
            "type" : "string"
          },
          "access_code" : {
            "description" : "특정 target(e.g., Capture)을 위한 access_code",
            "type" : "string"
          },
          "app_id" : {
            "description" : "Expiration이 긴 Session의 access token을 생성하기 위해 필요한 값",
            "type" : "string"
          },
          "expiration_days" : {
            "format" : "int64",
            "type" : "integer"
          },
          "otp_token" : {
            "description" : "6 digit one-time token",
            "type" : "string"
          },
          "api_token" : {
            "description" : "User api_token to create access token / refresh token",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AuthenticateResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AuthenticateResponse_allOf"
        } ]
      },
      "Authenticated" : {
        "properties" : {
          "grant_type" : {
            "type" : "string"
          },
          "access_token" : {
            "type" : "string"
          },
          "access_token_expires_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "refresh_token" : {
            "type" : "string"
          },
          "refresh_token_expires_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "session_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AutodeskForgeToken" : {
        "properties" : {
          "token_type" : {
            "type" : "string"
          },
          "access_token" : {
            "type" : "string"
          },
          "refresh_token" : {
            "type" : "string"
          },
          "expires_in" : {
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "AutodeskForgeTokenResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AutodeskForgeTokenResponse_allOf"
        } ]
      },
      "AvailabilityState" : {
        "enum" : [ "pending", "available", "reset" ],
        "type" : "string"
      },
      "AvailableAttribute" : {
        "properties" : {
          "availability_state" : {
            "$ref" : "#/components/schemas/AvailabilityState"
          },
          "availability_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        }
      },
      "AvatarUrls" : {
        "description" : "Avatar URLs",
        "properties" : {
          "thumb" : {
            "type" : "string"
          },
          "original" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AwsCredentials" : {
        "properties" : {
          "aws_access_key_id" : {
            "type" : "string"
          },
          "aws_secret_access_key" : {
            "type" : "string"
          },
          "aws_session_token" : {
            "type" : "string"
          },
          "expires_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AwsCredentialsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/AwsCredentialsResponse_allOf"
        } ]
      },
      "Badge" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Badge_allOf"
        } ]
      },
      "BadgeItem" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Badge"
          }
        },
        "type" : "object"
      },
      "BadgeList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/BadgeItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "BadgeListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/BadgeListResponse_allOf"
        } ]
      },
      "BadgeResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/BadgeResponse_allOf"
        } ]
      },
      "BillableAttribute" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BillingAccountAttribute"
        }, {
          "$ref" : "#/components/schemas/TrialableAttribute"
        }, {
          "$ref" : "#/components/schemas/BillableAttribute_allOf"
        } ]
      },
      "BillingAccount" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "$ref" : "#/components/schemas/BillingAccountState"
          },
          "email" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BillingAccountAttribute" : {
        "properties" : {
          "billing_account" : {
            "$ref" : "#/components/schemas/BillingAccount"
          }
        },
        "type" : "object"
      },
      "BillingAccountItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/BillingAccount"
          }
        },
        "type" : "object"
      },
      "BillingAccountList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/BillingAccountItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "BillingAccountListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/BillingAccountListResponse_allOf"
        } ]
      },
      "BillingAccountResponse" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/BillingAccountResponse_result"
          }
        },
        "type" : "object"
      },
      "BillingAccountState" : {
        "enum" : [ "initializing", "active", "inactive" ],
        "type" : "string"
      },
      "BillingInfo" : {
        "properties" : {
          "total_prepaid_credit" : {
            "format" : "int64",
            "type" : "integer"
          },
          "prepaid_credit_balance" : {
            "format" : "int64",
            "type" : "integer"
          },
          "ondemand_credit_usage" : {
            "format" : "int64",
            "type" : "integer"
          },
          "applied_product_codes" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "contract_size" : {
            "format" : "int64",
            "type" : "integer"
          },
          "contract_months" : {
            "format" : "int64",
            "type" : "integer"
          },
          "contract_unit" : {
            "type" : "string"
          },
          "unlimited_capture_credit" : {
            "type" : "boolean"
          },
          "unlimited_bim_pack" : {
            "type" : "boolean"
          },
          "pilot" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "BillingState" : {
        "description" : "Billing state",
        "enum" : [ "none", "active", "expired", "archived" ],
        "type" : "string"
      },
      "Bim" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Bim_allOf"
        }, {
          "$ref" : "#/components/schemas/BimSourceAttribute"
        }, {
          "$ref" : "#/components/schemas/BimForgeAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/ForgeTranslatedAttribute"
        } ]
      },
      "Bim360AnnotationAttributes" : {
        "properties" : {
          "bim360_project_id" : {
            "type" : "string"
          },
          "bim360_container_id" : {
            "type" : "string"
          },
          "bim360_issue_id" : {
            "type" : "string"
          },
          "bim360_attachment_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Bim360Integration" : {
        "properties" : {
          "hub_id" : {
            "type" : "string"
          },
          "container_id" : {
            "type" : "string"
          },
          "project_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BimBounds" : {
        "items" : {
          "format" : "float",
          "type" : "number"
        },
        "type" : "array"
      },
      "BimForgeAttribute" : {
        "properties" : {
          "origin" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "offset" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "rotate_z" : {
            "format" : "float",
            "type" : "number"
          },
          "transform_order" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "BimGridSystemState" : {
        "description" : "Bim grid system state",
        "enum" : [ "created", "none", "uploading", "uploaded" ],
        "type" : "string"
      },
      "BimIdsAttribute" : {
        "items" : {
          "format" : "int64",
          "type" : "integer"
        },
        "type" : "array"
      },
      "BimItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Bim"
          }
        },
        "type" : "object"
      },
      "BimList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/BimItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "BimListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/BimListResponse_allOf"
        } ]
      },
      "BimObject" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "BimResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/BimResponse_allOf"
        } ]
      },
      "BimRevision" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BimRevision_allOf"
        }, {
          "$ref" : "#/components/schemas/BimRevisionBimSourceAttribute"
        }, {
          "$ref" : "#/components/schemas/ImportedBimVersionAttribute"
        }, {
          "$ref" : "#/components/schemas/ForgeTranslatedAttribute"
        } ]
      },
      "BimRevisionBimSourceAttribute" : {
        "properties" : {
          "bim_source" : {
            "$ref" : "#/components/schemas/BimSource"
          }
        },
        "type" : "object"
      },
      "BimRevisionItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/BimRevision"
          }
        },
        "type" : "object"
      },
      "BimRevisionList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/BimRevisionItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "BimRevisionListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/BimRevisionListResponse_allOf"
        } ]
      },
      "BimRevisionResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/BimRevisionResponse_allOf"
        } ]
      },
      "BimSource" : {
        "enum" : [ "cupix", "bim360", "acc" ],
        "type" : "string"
      },
      "BimSourceAttribute" : {
        "properties" : {
          "bim_source" : {
            "$ref" : "#/components/schemas/BimSource"
          }
        },
        "type" : "object"
      },
      "Bookmark" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Bookmark_allOf"
        }, {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/DefaultDateTimeAttribute"
        } ]
      },
      "BookmarkItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Bookmark"
          }
        },
        "type" : "object"
      },
      "BookmarkList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/BookmarkItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "BookmarkListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/BookmarkListResponse_allOf"
        } ]
      },
      "BookmarkResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/BookmarkResponse_allOf"
        } ]
      },
      "BulkActionType" : {
        "enum" : [ "create", "update", "delete" ],
        "type" : "string"
      },
      "BulkActivityItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateActivityRequest"
        }, {
          "$ref" : "#/components/schemas/BulkActivityItemRequest_allOf"
        } ]
      },
      "BulkActivityRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkActivityItemRequest"
            },
            "type" : "array"
          },
          "facility_key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BulkCategoryItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateCategoryRequest"
        }, {
          "$ref" : "#/components/schemas/BulkCategoryItemRequest_allOf"
        } ]
      },
      "BulkCategoryRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkCategoryItemRequest"
            },
            "type" : "array"
          },
          "facility_key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BulkCreationResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/BulkCreationResponse_allOf"
        } ]
      },
      "BulkElementCreateRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkElementItemCreateRequest"
            },
            "type" : "array"
          },
          "facility_key" : {
            "type" : "string"
          },
          "allow_duplicates" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "BulkElementItemCreateRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateElementRequest"
        }, {
          "$ref" : "#/components/schemas/BulkElementItemCreateRequest_allOf"
        } ]
      },
      "BulkElementItemUpdateRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateElementRequest"
        }, {
          "$ref" : "#/components/schemas/BulkActivityItemRequest_allOf"
        } ]
      },
      "BulkElementRecordCreateRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkElementRecordItemCreateRequest"
            },
            "type" : "array"
          },
          "facility_key" : {
            "type" : "string"
          }
        },
        "required" : [ "bulk_action", "facility_key", "items" ],
        "type" : "object"
      },
      "BulkElementRecordItemCreateRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateElementRecordRequest"
        } ]
      },
      "BulkElementRecordItemUpdateRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateElementRecordRequest"
        }, {
          "$ref" : "#/components/schemas/BulkElementRecordItemUpdateRequest_allOf"
        } ]
      },
      "BulkElementRecordUpdateRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkElementRecordItemUpdateRequest"
            },
            "type" : "array"
          },
          "facility_key" : {
            "type" : "string"
          }
        },
        "required" : [ "bulk_action", "facility_key", "items" ],
        "type" : "object"
      },
      "BulkElementTraceItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateElementTraceRequest"
        }, {
          "$ref" : "#/components/schemas/BulkActivityItemRequest_allOf"
        } ]
      },
      "BulkElementTraceRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkElementTraceItemRequest"
            },
            "type" : "array"
          },
          "facility_key" : {
            "type" : "string"
          },
          "skip_valid_ids" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "BulkElementUpdateRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkElementItemUpdateRequest"
            },
            "type" : "array"
          },
          "facility_key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BulkFormDesignItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateFormDesignRequest"
        }, {
          "$ref" : "#/components/schemas/BulkActivityItemRequest_allOf"
        } ]
      },
      "BulkFormDesignRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkFormDesignItemRequest"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "BulkFormFieldItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateFormFieldRequest"
        }, {
          "$ref" : "#/components/schemas/BulkActivityItemRequest_allOf"
        } ]
      },
      "BulkFormFieldRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkFormFieldItemRequest"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "BulkPanoItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdatePanoRequest"
        }, {
          "$ref" : "#/components/schemas/BulkPanoItemRequest_allOf"
        } ]
      },
      "BulkPanoRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkPanoItemRequest"
            },
            "type" : "array"
          },
          "capture_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "BulkProgressItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateProgressRequest"
        }, {
          "$ref" : "#/components/schemas/BulkActivityItemRequest_allOf"
        } ]
      },
      "BulkProgressRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkProgressItemRequest"
            },
            "type" : "array"
          },
          "facility_key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BulkRecordStatusItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateRecordStatusRequest"
        }, {
          "$ref" : "#/components/schemas/BulkRecordStatusItemRequest_allOf"
        } ]
      },
      "BulkRecordStatusRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkRecordStatusItemRequest"
            },
            "type" : "array"
          },
          "facility_key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BulkResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/BulkResponse_allOf"
        } ]
      },
      "BulkShareRequest" : {
        "properties" : {
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkShareRequest_items_inner"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "BulkTaskItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateTaskRequest"
        }, {
          "$ref" : "#/components/schemas/BulkTaskItemRequest_allOf"
        } ]
      },
      "BulkTaskRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkTaskItemRequest"
            },
            "type" : "array"
          },
          "facility_key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BulkTrackingPlanItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateTrackingPlanRequest"
        }, {
          "$ref" : "#/components/schemas/BulkActivityItemRequest_allOf"
        } ]
      },
      "BulkTrackingPlanRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkTrackingPlanItemRequest"
            },
            "type" : "array"
          },
          "facility_key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BulkTrashAnnotationsRequest" : {
        "properties" : {
          "ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "annotation_layer_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "annotation_layer_id", "ids" ],
        "type" : "object"
      },
      "BulkTrashMeasurementsRequest" : {
        "properties" : {
          "ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "required" : [ "ids" ],
        "type" : "object"
      },
      "BulkUpdateBadgeItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateBadgeRequest"
        } ]
      },
      "BulkUpdateBadgeRequest" : {
        "properties" : {
          "panos" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkUpdateBadgeItemRequest"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "BulkUpdatePanoItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdatePanoRequest"
        }, {
          "$ref" : "#/components/schemas/BulkUpdatePanoItemRequest_allOf"
        } ]
      },
      "BulkUpdatePanoRequest" : {
        "properties" : {
          "panos" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkUpdatePanoItemRequest"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "BulkWorkareaItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateWorkareaRequest"
        }, {
          "$ref" : "#/components/schemas/BulkWorkareaItemRequest_allOf"
        } ]
      },
      "BulkWorkareaRequest" : {
        "properties" : {
          "bulk_action" : {
            "$ref" : "#/components/schemas/BulkActionType"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkWorkareaItemRequest"
            },
            "type" : "array"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facility_key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Camera" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "make" : {
            "type" : "string"
          },
          "model" : {
            "type" : "string"
          },
          "software" : {
            "type" : "string"
          },
          "serial_number" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CameraAttribute" : {
        "properties" : {
          "camera" : {
            "$ref" : "#/components/schemas/Camera"
          }
        },
        "type" : "object"
      },
      "CameraRequest" : {
        "properties" : {
          "camera" : {
            "$ref" : "#/components/schemas/Camera"
          }
        },
        "type" : "object"
      },
      "Capture" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.Capture"
        }, {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Capture_allOf"
        }, {
          "$ref" : "#/components/schemas/JobableAttribute"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/CaptureTypeAttribute"
        }, {
          "$ref" : "#/components/schemas/EfsAttribute"
        }, {
          "$ref" : "#/components/schemas/CameraAttribute"
        }, {
          "$ref" : "#/components/schemas/WarningAttribute"
        }, {
          "$ref" : "#/components/schemas/ReconstructionStateAttribute"
        }, {
          "$ref" : "#/components/schemas/DeviationResultAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/CaptureVideoMeta"
        }, {
          "$ref" : "#/components/schemas/ExpectedQualityAttribute"
        }, {
          "$ref" : "#/components/schemas/EditingDifficultyScoreAttribute"
        }, {
          "$ref" : "#/components/schemas/RefinementAttribute"
        }, {
          "$ref" : "#/components/schemas/RefinementAttribute"
        } ]
      },
      "CaptureEditingState" : {
        "description" : "Capture Editing state",
        "enum" : [ "waiting", "ready", "holding", "escalated", "editing", "in_review", "done", "skipped", "stopped", "re_ready" ],
        "type" : "string"
      },
      "CaptureInvokableState" : {
        "properties" : {
          "create_capture" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "CaptureItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Capture"
          }
        },
        "type" : "object"
      },
      "CaptureList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/CaptureItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "CaptureListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CaptureListResponse_allOf"
        } ]
      },
      "CaptureResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CaptureResponse_allOf"
        } ]
      },
      "CaptureSkatType" : {
        "enum" : [ "stable", "beta" ],
        "type" : "string"
      },
      "CaptureTypeAttribute" : {
        "properties" : {
          "capture_type" : {
            "type" : "string"
          },
          "creation_platform" : {
            "type" : "string"
          },
          "upload_platform" : {
            "type" : "string"
          },
          "material" : {
            "type" : "string"
          },
          "migrated_from" : {
            "type" : "string"
          },
          "ar_data_version" : {
            "type" : "string"
          },
          "method" : {
            "type" : "string"
          },
          "singleshot_state" : {
            "type" : "string"
          },
          "singleshot_queued_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CaptureTypeRequest" : {
        "properties" : {
          "singleshot_state" : {
            "enum" : [ "running", "stopped" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CaptureVersionsRequest" : {
        "properties" : {
          "skat_version" : {
            "type" : "string"
          },
          "dnn_version" : {
            "type" : "string"
          },
          "agent_version" : {
            "type" : "string"
          },
          "maker_version" : {
            "type" : "string"
          },
          "densemapper_version" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CaptureVideoMeta" : {
        "properties" : {
          "video_length" : {
            "format" : "float",
            "type" : "number"
          },
          "recording_fps" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "CaptureWithMaterials" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Capture"
        }, {
          "$ref" : "#/components/schemas/CaptureWithMaterials_allOf"
        } ]
      },
      "CaptureWithMaterialsItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/CaptureWithMaterials"
          }
        },
        "type" : "object"
      },
      "CaptureWithMaterialsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CaptureWithMaterialsResponse_allOf"
        } ]
      },
      "Category" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Category_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        } ]
      },
      "CategoryItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Category"
          }
        },
        "type" : "object"
      },
      "CategoryList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/CategoryItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "CategoryListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CategoryListResponse_allOf"
        } ]
      },
      "CategoryResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CategoryResponse_allOf"
        } ]
      },
      "CategoryType" : {
        "enum" : [ "main", "sub" ],
        "type" : "string"
      },
      "CertifiedAttribute" : {
        "properties" : {
          "certifications" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "CesiumConnect" : {
        "properties" : {
          "cesium_ion_key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ChildAssetItem" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "key" : {
            "type" : "string"
          },
          "asset_type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "cover_urls" : {
            "type" : "string"
          },
          "thumbnail_urls" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "cover_state" : {
            "type" : "string"
          },
          "transcript_state" : {
            "type" : "string"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "ClearFieldsAttributes" : {
        "properties" : {
          "clear_fields" : {
            "description" : "comma separated strings",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Cluster" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Cluster_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/ClusterTypeAttribute"
        } ]
      },
      "ClusterItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Cluster"
          }
        },
        "type" : "object"
      },
      "ClusterList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/ClusterItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "ClusterListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ClusterListResponse_allOf"
        } ]
      },
      "ClusterResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ClusterResponse_allOf"
        } ]
      },
      "ClusterType" : {
        "enum" : [ "none", "unrefined", "refined" ],
        "type" : "string"
      },
      "ClusterTypeAttribute" : {
        "properties" : {
          "cluster_type" : {
            "$ref" : "#/components/schemas/ClusterType"
          }
        },
        "type" : "object"
      },
      "Comment" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Comment_allOf"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "CommentItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Comment"
          }
        },
        "type" : "object"
      },
      "CommentList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/CommentItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "CommentListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CommentListResponse_allOf"
        } ]
      },
      "CommentResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CommentResponse_allOf"
        } ]
      },
      "CommonCreateRequest" : {
        "discriminator" : {
          "propertyName" : "commonCreateRequestType"
        },
        "properties" : {
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Connect" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Connect_allOf"
        }, {
          "$ref" : "#/components/schemas/MatterportConnect"
        }, {
          "$ref" : "#/components/schemas/ItwinConnect"
        }, {
          "$ref" : "#/components/schemas/ArcgisConnect"
        }, {
          "$ref" : "#/components/schemas/CesiumConnect"
        }, {
          "$ref" : "#/components/schemas/TransformMatrixAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "ConnectItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Connect"
          }
        },
        "type" : "object"
      },
      "ConnectList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/ConnectItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "ConnectListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ConnectListResponse_allOf"
        } ]
      },
      "ConnectResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ConnectResponse_allOf"
        } ]
      },
      "ConstantableAttribute" : {
        "properties" : {
          "constants" : {
            "$ref" : "#/components/schemas/ConstantableAttribute_constants"
          }
        },
        "type" : "object"
      },
      "ConstantableReqeust" : {
        "properties" : {
          "set_constants" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "ContactSalesRequest" : {
        "properties" : {
          "message" : {
            "type" : "string"
          }
        },
        "required" : [ "message" ],
        "type" : "object"
      },
      "ContentUrlType" : {
        "properties" : {
          "content_url_type" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CopyBimRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "copy_type" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CopySubjectAttribute" : {
        "description" : "Copy states for Copyable model",
        "properties" : {
          "copy_state" : {
            "type" : "string"
          },
          "copy_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CoverState" : {
        "description" : "Cover State",
        "enum" : [ "created", "none", "uploading", "uploaded" ],
        "type" : "string"
      },
      "CoverUrls" : {
        "description" : "Cover URLs",
        "properties" : {
          "large_high" : {
            "type" : "string"
          },
          "original" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CoverUrlsAttribute" : {
        "properties" : {
          "cover_state" : {
            "$ref" : "#/components/schemas/CoverState"
          },
          "cover_upload_url" : {
            "type" : "string"
          },
          "cover_urls" : {
            "$ref" : "#/components/schemas/CoverUrls"
          }
        },
        "type" : "object"
      },
      "CreateActivityBulkRequest" : {
        "properties" : {
          "activities" : {
            "items" : {
              "$ref" : "#/components/schemas/CreateActivityOnBulkRequest"
            },
            "type" : "array"
          },
          "facility_key" : {
            "type" : "string"
          }
        },
        "required" : [ "activities", "facility_key" ],
        "type" : "object"
      },
      "CreateActivityOnBulkRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateActivityOnBulkRequest_allOf"
        } ]
      },
      "CreateActivityRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateActivityRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "CreateAerialMapRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateAerialMapRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ],
        "required" : [ "name" ]
      },
      "CreateAerialPhotoRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateAerialPhotoRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ],
        "required" : [ "name" ]
      },
      "CreateAnnotationLayerRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateAnnotationLayerRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateAllowedAnnotationKindRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ],
        "required" : [ "facility_key", "name" ]
      },
      "CreateAnnotationRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateAnnotationRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/Bim360AnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/AccAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/ProcoreAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/PlangridAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/AnnotatableRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "CreateAreaRequest" : {
        "properties" : {
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "geojson" : {
            "type" : "object"
          }
        },
        "required" : [ "level_id" ],
        "type" : "object"
      },
      "CreateAssetRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateAssetRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/CreateRequestWithUUID"
        } ],
        "required" : [ "asset_type", "name" ]
      },
      "CreateAttachmentRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateAttachmentRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/AttachmentTypeAttribute"
        } ],
        "required" : [ "name" ]
      },
      "CreateBadgeRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateBadgeRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ],
        "required" : [ "name" ]
      },
      "CreateBillingAccountRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonCreateRequest"
        }, {
          "$ref" : "#/components/schemas/CreateBillingAccountRequest_allOf"
        } ]
      },
      "CreateBimReferenceRequest" : {
        "properties" : {
          "global" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "CreateBimRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateBimRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/BimSourceAttribute"
        }, {
          "$ref" : "#/components/schemas/CreateRequestWithUUID"
        }, {
          "$ref" : "#/components/schemas/BimForgeAttribute"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        } ],
        "required" : [ "bim_source", "facility_key" ]
      },
      "CreateBimRevisionRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateBimRevisionRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/ImportedBimVersionAttribute"
        } ],
        "required" : [ "bim_id", "forge_format_type", "forge_region", "forge_urn" ]
      },
      "CreateBookmarkRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateBookmarkRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "CreateCaptureReferenceRequest" : {
        "properties" : {
          "global" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "CreateCaptureRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateCaptureRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateTagsRequest"
        }, {
          "$ref" : "#/components/schemas/CaptureVersionsRequest"
        }, {
          "$ref" : "#/components/schemas/CreateRequestWithUUID"
        }, {
          "$ref" : "#/components/schemas/CameraRequest"
        }, {
          "$ref" : "#/components/schemas/FloorplanRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/ExpectedQualityAttribute"
        } ]
      },
      "CreateCaptureResourceRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "enum" : [ "processing_options", "structure_data", "ar_data", "motion_data", "origin_alignments_all", "alignments_all", "alignments_sampled", "tsdf", "reconstruction_result", "landmark" ],
            "type" : "string"
          }
        },
        "required" : [ "kind", "name" ],
        "type" : "object"
      },
      "CreateCaptureWithMaterialsRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateCaptureRequest"
        }, {
          "$ref" : "#/components/schemas/CreateCaptureWithMaterialsRequest_allOf"
        } ]
      },
      "CreateCategoryBulkRequest" : {
        "properties" : {
          "categories" : {
            "items" : {
              "$ref" : "#/components/schemas/CreateCategoryOnBulkRequest"
            },
            "type" : "array"
          }
        },
        "required" : [ "categories" ],
        "type" : "object"
      },
      "CreateCategoryOnBulkRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BulkElementItemCreateRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/CreateCategoryRequest"
        } ]
      },
      "CreateCategoryRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateCategoryRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        } ]
      },
      "CreateClusterRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateClusterRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/ClusterTypeAttribute"
        } ],
        "required" : [ "capture_id" ]
      },
      "CreateCommentRequest" : {
        "properties" : {
          "content" : {
            "type" : "string"
          }
        },
        "required" : [ "content" ],
        "type" : "object"
      },
      "CreateConnectRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateConnectRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MatterportConnect"
        }, {
          "$ref" : "#/components/schemas/ItwinConnect"
        }, {
          "$ref" : "#/components/schemas/ArcgisConnect"
        }, {
          "$ref" : "#/components/schemas/CesiumConnect"
        }, {
          "$ref" : "#/components/schemas/TransformMatrixAttribute"
        } ]
      },
      "CreateCustomEventRequest" : {
        "properties" : {
          "custom_reason" : {
            "type" : "string"
          },
          "custom_action_meta" : {
            "type" : "object"
          }
        },
        "required" : [ "custom_action_meta", "custom_reason" ],
        "type" : "object"
      },
      "CreateCustomPropertyRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateCustomPropertyRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "CreateDeviationRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateDeviationRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/CreateRequestWithUUID"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ],
        "required" : [ "deviation_type", "record_id" ]
      },
      "CreateElementRecordRequest" : {
        "properties" : {
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "bim_external_id" : {
            "type" : "string"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "element" : {
            "$ref" : "#/components/schemas/Element"
          },
          "texture" : {
            "$ref" : "#/components/schemas/Texture"
          },
          "main_category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "phase" : {
            "$ref" : "#/components/schemas/Phase"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "workarea" : {
            "$ref" : "#/components/schemas/Workarea"
          },
          "task" : {
            "$ref" : "#/components/schemas/Task"
          },
          "vendor" : {
            "$ref" : "#/components/schemas/Group"
          },
          "activity_key" : {
            "type" : "string"
          },
          "activity_name" : {
            "type" : "string"
          },
          "start_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "end_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "registered_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "completed_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "incompleted_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "misinstalled_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "undetected_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "volume" : {
            "format" : "float",
            "type" : "number"
          },
          "area" : {
            "format" : "float",
            "type" : "number"
          },
          "length" : {
            "format" : "float",
            "type" : "number"
          },
          "weight" : {
            "format" : "float",
            "type" : "number"
          },
          "cost" : {
            "format" : "float",
            "type" : "number"
          },
          "last_updated_by" : {
            "$ref" : "#/components/schemas/User"
          },
          "phase_metrics" : {
            "items" : {
              "$ref" : "#/components/schemas/PhaseMetric"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "CreateElementRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ElementBimMetaAttribute"
        }, {
          "$ref" : "#/components/schemas/ElementQuantityAttribute"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/ElementPlatformAttribute"
        }, {
          "$ref" : "#/components/schemas/CreateElementRequest_allOf"
        } ]
      },
      "CreateEntityParameterRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          },
          "data_type" : {
            "type" : "string"
          },
          "allowed_values" : {
            "type" : "string"
          },
          "is_modifiable" : {
            "type" : "boolean"
          }
        },
        "required" : [ "data_type", "name", "source" ],
        "type" : "object"
      },
      "CreateFacilityRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateFacilityRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateTagsRequest"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        }, {
          "$ref" : "#/components/schemas/ConstantableReqeust"
        }, {
          "$ref" : "#/components/schemas/ExpectedQualityAttribute"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        } ]
      },
      "CreateFcmDeviceRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          },
          "platform" : {
            "enum" : [ "ios", "android", "web" ],
            "type" : "string"
          },
          "device_id" : {
            "type" : "string"
          },
          "registration_id" : {
            "type" : "string"
          }
        },
        "required" : [ "registration_id" ],
        "type" : "object"
      },
      "CreateFloorplanReferenceRequest" : {
        "properties" : {
          "global" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "CreateFloorplanRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateFloorplanRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/FloorplanCreationFromAttribute"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ],
        "required" : [ "level_id" ]
      },
      "CreateFloorplanSourceRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateFloorplanSourceRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ],
        "required" : [ "facility_key" ]
      },
      "CreateFormDesignBulkRequest" : {
        "properties" : {
          "form_designs" : {
            "items" : {
              "$ref" : "#/components/schemas/CreateFormDesignOnBulkRequest"
            },
            "type" : "array"
          }
        },
        "required" : [ "form_designs" ],
        "type" : "object"
      },
      "CreateFormDesignOnBulkRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BulkElementItemCreateRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/CreateFormDesignRequest"
        } ]
      },
      "CreateFormDesignRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateFormDesignRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ],
        "required" : [ "name" ]
      },
      "CreateFormFieldBulkRequest" : {
        "properties" : {
          "form_fields" : {
            "items" : {
              "$ref" : "#/components/schemas/CreateFormFieldOnBulkRequest"
            },
            "type" : "array"
          }
        },
        "required" : [ "form_fields" ],
        "type" : "object"
      },
      "CreateFormFieldOnBulkRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BulkElementItemCreateRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/CreateFormFieldRequest"
        } ]
      },
      "CreateFormFieldRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateFormFieldRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ],
        "required" : [ "form_design_id", "kind", "label", "name" ]
      },
      "CreateGroupRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "group_type_code" : {
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "CreateIntegrationRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "provider" : {
            "enum" : [ "bim360", "procore", "plangrid", "acc", "revizto" ],
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "region" : {
            "$ref" : "#/components/schemas/IntegrationRegionEnum"
          }
        },
        "required" : [ "code", "provider" ],
        "type" : "object"
      },
      "CreateIssueRequest" : {
        "properties" : {
          "capture_id" : {
            "type" : "integer"
          },
          "error_code" : {
            "type" : "string"
          }
        },
        "required" : [ "capture_id", "error_code" ],
        "type" : "object"
      },
      "CreateLevelRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateLevelRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/CreateRequestWithUUID"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ],
        "required" : [ "facility_key" ]
      },
      "CreateLinkRequest" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          }
        },
        "required" : [ "url" ],
        "type" : "object"
      },
      "CreateMeasurementRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateMeasurementRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ],
        "required" : [ "level_id", "measurement_type", "name", "record_id", "value" ]
      },
      "CreateMeshReferenceRequest" : {
        "properties" : {
          "global" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "CreateMeshRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateMeshRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        }, {
          "$ref" : "#/components/schemas/ConstantableReqeust"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        } ]
      },
      "CreateMetricRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateMetricRequest_allOf"
        } ]
      },
      "CreateNodeRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateNodeRequest_allOf"
        } ]
      },
      "CreatePanoRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreatePanoRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateTagsRequest"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/CameraRequest"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        }, {
          "$ref" : "#/components/schemas/ConstantableReqeust"
        } ]
      },
      "CreatePhaseMetricRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreatePhaseMetricRequest_allOf"
        } ]
      },
      "CreatePhaseRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreatePhaseRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        } ]
      },
      "CreatePointcloudRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreatePointcloudRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/CameraRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        }, {
          "$ref" : "#/components/schemas/ConstantableReqeust"
        }, {
          "$ref" : "#/components/schemas/PointcloudTypeAttribute"
        }, {
          "$ref" : "#/components/schemas/PointcloudMeshTypeAttribute"
        }, {
          "$ref" : "#/components/schemas/PointsCountAttribute"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        } ]
      },
      "CreatePointcloudResourceRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "enum" : [ "plane", "mesh", "ply" ],
            "type" : "string"
          }
        },
        "required" : [ "kind", "name" ],
        "type" : "object"
      },
      "CreateProgressBulkRequest" : {
        "properties" : {
          "progresses" : {
            "items" : {
              "$ref" : "#/components/schemas/CreateProgressOnBulkRequest"
            },
            "type" : "array"
          }
        },
        "required" : [ "progresses" ],
        "type" : "object"
      },
      "CreateProgressOnBulkRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateProgressOnBulkRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/ProgressSiteInsightAttribute"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        } ]
      },
      "CreateProgressRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateProgressRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        } ]
      },
      "CreateRecordRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateRecordRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/CreateRequestWithUUID"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "CreateRecordStatusBulkRequest" : {
        "properties" : {
          "record_statuses" : {
            "items" : {
              "$ref" : "#/components/schemas/CreateRecordStatusOnBulkRequest"
            },
            "type" : "array"
          }
        },
        "required" : [ "record_statuses" ],
        "type" : "object"
      },
      "CreateRecordStatusOnBulkRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BulkElementItemCreateRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/CreateRecordStatusRequest"
        } ]
      },
      "CreateRecordStatusRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateRecordStatusRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/EstimatedStatusDetailsAttribute"
        } ]
      },
      "CreateReferenceRequest" : {
        "properties" : {
          "pano_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "capture_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "pointcloud_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "floorplan_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "bim_ids" : {
            "$ref" : "#/components/schemas/BimIdsAttribute"
          },
          "facility_key" : {
            "type" : "string"
          },
          "global" : {
            "type" : "boolean"
          }
        },
        "required" : [ "facility_key" ],
        "type" : "object"
      },
      "CreateReportRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "$ref" : "#/components/schemas/ReportKind"
          },
          "facility_key" : {
            "type" : "string"
          },
          "workspace_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "form_design_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "kind", "name" ],
        "type" : "object"
      },
      "CreateRequestWithUUID" : {
        "properties" : {
          "uuid" : {
            "description" : "임의로 UUID를 입력할 수 있다. UUID 형식에 어긋나는 경우 ARG10040 오류를 낸다.",
            "type" : "string"
          },
          "skip_uuid_validation" : {
            "description" : "유효한 uuid를 입력하고, skip_uuid_validation이 true로 입력된 경우 UUID 중복체크를 하지 않는다.",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "CreateResourceRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "CreateReviewRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateReviewRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ],
        "required" : [ "areas", "date_ranges", "facility_key", "levels" ]
      },
      "CreateRoomRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateRoomRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/CreateRequestWithUUID"
        }, {
          "$ref" : "#/components/schemas/ElementIdAttributeOnRequest"
        } ],
        "required" : [ "facility_key" ]
      },
      "CreateSketchRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateSketchRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        } ]
      },
      "CreateStatusRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateStatusRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/StatusKindAttribute"
        }, {
          "$ref" : "#/components/schemas/StatusTypeCode"
        } ]
      },
      "CreateTaskRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateTaskRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "CreateTeleportRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateTeleportRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "CreateTextureRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateTextureRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/SystemEntitiesKindAttribute"
        } ]
      },
      "CreateTrackingPlanRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateTrackingPlanRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "CreateUploadUrlRequest" : {
        "properties" : {
          "option" : {
            "enum" : [ "move_out_resource", "merge_from" ],
            "type" : "string"
          },
          "option_params" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CreateVideoRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateVideoRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/CameraRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "CreateWorkItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateWorkItemRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/WorkActionAttribute"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "CreateWorkareaGroupRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateWorkareaGroupRequest_allOf"
        } ]
      },
      "CreateWorkareaRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateWorkareaRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "CreateWorkflowRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateWorkflowRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/SystemEntitiesKindAttribute"
        } ]
      },
      "CreateWorkflowTextureRequest" : {
        "properties" : {
          "texture_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "texture_id" ],
        "type" : "object"
      },
      "CreateWorkspaceRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonCreateRequest"
        }, {
          "$ref" : "#/components/schemas/CreateWorkspaceRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "CreditTransaction" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreditTransaction_allOf"
        } ]
      },
      "CreditTransactionItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/CreditTransaction"
          }
        },
        "type" : "object"
      },
      "CreditTransactionList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/CreditTransactionItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "CreditTransactionListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CreditTransactionListResponse_allOf"
        } ]
      },
      "CupixResourceNumberAttribute" : {
        "properties" : {
          "crn" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CustomMetric" : {
        "properties" : {
          "id" : {
            "description" : "Metric ID",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Metric Name",
            "type" : "string"
          },
          "value" : {
            "format" : "float",
            "type" : "number"
          },
          "formula" : {
            "type" : "string"
          },
          "parsed_formula" : {
            "type" : "string"
          },
          "unit" : {
            "description" : "Metric Unit",
            "type" : "string"
          },
          "position" : {
            "description" : "Metric Position",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CustomProperty" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CustomProperty_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "CustomPropertyItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/CustomProperty"
          }
        },
        "type" : "object"
      },
      "CustomPropertyList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/CustomPropertyItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "CustomPropertyListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CustomPropertyListResponse_allOf"
        } ]
      },
      "CustomPropertyResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/CustomPropertyResponse_allOf"
        } ]
      },
      "CustomPropertyType" : {
        "enum" : [ "bim", "manual" ],
        "type" : "string"
      },
      "CustomerSuccessManagersAttribute" : {
        "properties" : {
          "customer_success_managers" : {
            "items" : {
              "$ref" : "#/components/schemas/User"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Customs" : {
        "properties" : {
          "ver" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "bim_attr_id" : {
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "CyclableAttribute" : {
        "description" : "Filesize for Resourcable model",
        "properties" : {
          "cycle_state" : {
            "$ref" : "#/components/schemas/CycleState"
          },
          "cycle_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "cycle_state_updated_by" : {
            "$ref" : "#/components/schemas/CyclableAttribute_cycle_state_updated_by"
          }
        },
        "type" : "object"
      },
      "CycleState" : {
        "enum" : [ "created", "archived", "archiving", "trashed" ],
        "type" : "string"
      },
      "DateRange" : {
        "properties" : {
          "from_at" : {
            "description" : "UTC+0 based.",
            "format" : "date-time",
            "type" : "string"
          },
          "to_at" : {
            "description" : "UTC+0 based.",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "DefaultDateTimeAttribute" : {
        "description" : "Default datetime attributes",
        "properties" : {
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Deviation" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Deviation_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/PublishableAttribute"
        }, {
          "$ref" : "#/components/schemas/EfsAttribute"
        } ]
      },
      "DeviationItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Deviation"
          }
        },
        "type" : "object"
      },
      "DeviationList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/DeviationItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "DeviationListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/DeviationListResponse_allOf"
        } ]
      },
      "DeviationProcessingOption" : {
        "enum" : [ "reassessment" ],
        "nullable" : true,
        "type" : "string"
      },
      "DeviationProcessingResult" : {
        "properties" : {
          "texture_validator" : {
            "$ref" : "#/components/schemas/EstimatedTexturesAttribute"
          },
          "points_validator" : {
            "$ref" : "#/components/schemas/EstimatedStatusDetailsAttribute"
          }
        },
        "type" : "object"
      },
      "DeviationResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/DeviationResponse_allOf"
        } ]
      },
      "DeviationResultAttribute" : {
        "properties" : {
          "bim_icp_tm" : {
            "type" : "object"
          },
          "use_bim_icp_tm" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "DeviationType" : {
        "enum" : [ "Pointcloud", "Texture", "Siteinsights", "Report" ],
        "type" : "string"
      },
      "DraftedAtAttribute" : {
        "properties" : {
          "drafted_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Editing" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Editing_allOf"
        } ]
      },
      "EditingDifficultyScoreAttribute" : {
        "description" : "Editing difficulty score",
        "properties" : {
          "editing_difficulty_score" : {
            "format" : "float",
            "type" : "number"
          }
        }
      },
      "EditingEntity" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EditingEntity_allOf"
        } ]
      },
      "EditingEntityItem" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/EditingEntity"
          }
        },
        "required" : [ "attributes", "id" ],
        "type" : "object"
      },
      "EditingEntityList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/EditingEntityItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "EditingEntityListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/EditingEntityListResponse_allOf"
        } ]
      },
      "EditingEntityResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/EditingEntityResponse_allOf"
        } ]
      },
      "EditingItem" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Editing"
          }
        },
        "required" : [ "attributes", "id" ],
        "type" : "object"
      },
      "EditingList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/EditingItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "EditingListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/EditingListResponse_allOf"
        } ]
      },
      "EditingResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/EditingResponse_allOf"
        } ]
      },
      "EditingStat" : {
        "properties" : {
          "editing" : {
            "$ref" : "#/components/schemas/EditingStat_editing"
          },
          "count" : {
            "$ref" : "#/components/schemas/EditingStat_count"
          }
        },
        "type" : "object"
      },
      "EditingState" : {
        "description" : "Editing state for new editing model",
        "enum" : [ "waiting", "ready", "holding", "editing", "escalated", "waiting_for_review", "in_review", "done", "skipped", "stopped" ],
        "type" : "string"
      },
      "EditorLevelAttribute" : {
        "properties" : {
          "editor_level" : {
            "$ref" : "#/components/schemas/EditorLevelEnum"
          }
        },
        "type" : "object"
      },
      "EditorLevelEnum" : {
        "enum" : [ "hay", "rabbit", "fox", "tiger" ],
        "type" : "string"
      },
      "EfsAttribute" : {
        "properties" : {
          "preprocessor_path" : {
            "type" : "string"
          },
          "skatmaster_path" : {
            "type" : "string"
          },
          "postprocessor_path" : {
            "type" : "string"
          },
          "deviationmaster_path" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Element" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ElementBimMetaAttribute"
        }, {
          "$ref" : "#/components/schemas/ElementQuantityAttribute"
        }, {
          "$ref" : "#/components/schemas/Element_allOf"
        }, {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/ElementPlatformAttribute"
        } ]
      },
      "ElementBimMetaAttribute" : {
        "properties" : {
          "bim_external_id" : {
            "type" : "string"
          },
          "bim_model_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_object_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_element_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ElementCustomProperty" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value_type" : {
            "enum" : [ "float", "integer", "string" ],
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "value_key_name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ElementIdAttributeOnRequest" : {
        "properties" : {
          "element_id" : {
            "description" : "서버는 element_id uniquness를 보장하지 않는다",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ElementItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Element"
          }
        },
        "type" : "object"
      },
      "ElementList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/ElementItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "ElementListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ElementListResponse_allOf"
        } ]
      },
      "ElementPlatformAttribute" : {
        "properties" : {
          "platform" : {
            "enum" : [ "navis", "revit" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ElementQuantityAttribute" : {
        "properties" : {
          "cost" : {
            "format" : "float",
            "type" : "number"
          },
          "volume" : {
            "format" : "float",
            "type" : "number"
          },
          "area" : {
            "format" : "float",
            "type" : "number"
          },
          "length" : {
            "format" : "float",
            "type" : "number"
          },
          "weight" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "ElementRecord" : {
        "properties" : {
          "oid" : {
            "description" : "ElementRecord Document ID",
            "type" : "string"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "bim_external_id" : {
            "type" : "string"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "element" : {
            "$ref" : "#/components/schemas/Element"
          },
          "texture" : {
            "$ref" : "#/components/schemas/Texture"
          },
          "main_category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "phase" : {
            "$ref" : "#/components/schemas/Phase"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "workarea" : {
            "$ref" : "#/components/schemas/Workarea"
          },
          "task" : {
            "$ref" : "#/components/schemas/Task"
          },
          "vendor" : {
            "$ref" : "#/components/schemas/Group"
          },
          "activity_name" : {
            "type" : "string"
          },
          "activity_key" : {
            "type" : "string"
          },
          "start_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "end_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "registered_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "completed_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "incompleted_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "misinstalled_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "undetected_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "volume" : {
            "format" : "float",
            "type" : "number"
          },
          "area" : {
            "format" : "float",
            "type" : "number"
          },
          "length" : {
            "format" : "float",
            "type" : "number"
          },
          "weight" : {
            "format" : "float",
            "type" : "number"
          },
          "cost" : {
            "format" : "float",
            "type" : "number"
          },
          "last_updated_by" : {
            "$ref" : "#/components/schemas/ElementRecordLastUpdatedUserAttribute"
          },
          "custom_metrics" : {
            "description" : "Custom Metrics driven by Phase Metrics",
            "items" : {
              "$ref" : "#/components/schemas/CustomMetric"
            },
            "type" : "array"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ElementRecordLastUpdatedUserAttribute" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "email" : {
            "type" : "string"
          },
          "type" : {
            "enum" : [ "normal", "admin" ],
            "type" : "string"
          },
          "updated_fields" : {
            "$ref" : "#/components/schemas/ElementRecordUserUpdatableFields"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ElementRecordList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/ElementRecord"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "ElementRecordListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ElementRecordListResponse_allOf"
        } ]
      },
      "ElementRecordUpdateResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ElementRecordUpdateResponse_allOf"
        } ]
      },
      "ElementRecordUserUpdatableFields" : {
        "properties" : {
          "completed_at" : {
            "format" : "date-time",
            "nullable" : true,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ElementResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ElementResponse_allOf"
        } ]
      },
      "ElementTrace" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ElementTrace_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "ElementTraceItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/ElementTrace"
          }
        },
        "type" : "object"
      },
      "ElementTraceList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/ElementTraceItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "ElementTraceListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ElementTraceListResponse_allOf"
        } ]
      },
      "ElementTraceResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ElementTraceResponse_allOf"
        } ]
      },
      "EmailDomain" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "domain" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EmailDomainItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/EmailDomain"
          }
        },
        "type" : "object"
      },
      "EmailDomainList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/EmailDomainItem"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "EmailDomainListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/EmailDomainListResponse_allOf"
        } ]
      },
      "EmailResponse" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/EmailResponse_result"
          }
        },
        "type" : "object"
      },
      "EntityParameter" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityParameter_allOf"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        } ]
      },
      "EntityParameterGroup" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityParameterGroup_allOf"
        } ]
      },
      "EntityParameterItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/EntityParameter"
          }
        },
        "type" : "object"
      },
      "EntityParameterList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/EntityParameterItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data" ],
        "type" : "object"
      },
      "EntityParameterListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/EntityParameterListResponse_allOf"
        } ]
      },
      "EntityParameterResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/EntityParameterResponse_allOf"
        } ]
      },
      "EntityUpdatesValue" : {
        "format" : "date-time",
        "type" : "string"
      },
      "Entrypoint" : {
        "properties" : {
          "pano" : {
            "$ref" : "#/components/schemas/EntrypointPano"
          },
          "mesh" : {
            "$ref" : "#/components/schemas/EntrypointMesh"
          },
          "pointcloud" : {
            "$ref" : "#/components/schemas/EntrypointPointcloud"
          }
        },
        "type" : "object"
      },
      "EntrypointMesh" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntrypointModel"
        } ]
      },
      "EntrypointModel" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EntrypointPano" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntrypointModel"
        } ]
      },
      "EntrypointPointcloud" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntrypointModel"
        } ]
      },
      "ErrorCode" : {
        "description" : "Error code from server",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ErrorResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ErrorResponse_allOf"
        } ]
      },
      "EstimatedStatusDetailsAttribute" : {
        "properties" : {
          "coverage" : {
            "format" : "float",
            "type" : "number"
          },
          "average_error" : {
            "format" : "float",
            "type" : "number"
          },
          "deviation_vector" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "points" : {
            "format" : "int64",
            "type" : "number"
          },
          "dbid_points" : {
            "format" : "int64",
            "type" : "number"
          },
          "trust_level" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EstimatedTexturesAttribute" : {
        "properties" : {
          "validator_version" : {
            "type" : "string"
          },
          "textures" : {
            "items" : {
              "$ref" : "#/components/schemas/TextureResult"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Event" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Event_allOf"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        } ]
      },
      "EventItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Event"
          }
        },
        "type" : "object"
      },
      "EventObject" : {
        "properties" : {
          "targetable" : {
            "$ref" : "#/components/schemas/EventObject_targetable"
          }
        },
        "type" : "object"
      },
      "EventResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/EventResponse_allOf"
        } ]
      },
      "Eventable" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ExpectedQualityAttribute" : {
        "properties" : {
          "expected_quality" : {
            "enum" : [ "dollhouse", "flexible" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Facility" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Facility_allOf"
        }, {
          "$ref" : "#/components/schemas/LogoUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/LocationAttribute"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/StorageAttribute"
        }, {
          "$ref" : "#/components/schemas/FacilityCopyAttribute"
        }, {
          "$ref" : "#/components/schemas/CopySubjectAttribute"
        }, {
          "$ref" : "#/components/schemas/FacilitySizeUnitAttribute"
        }, {
          "$ref" : "#/components/schemas/FacilityEntityUpdatesAttribute"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceAttribute"
        }, {
          "$ref" : "#/components/schemas/SiteinsightsReportAttribute"
        }, {
          "$ref" : "#/components/schemas/FacilitySiteinsightsAttribute"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/ExpectedQualityAttribute"
        }, {
          "$ref" : "#/components/schemas/BillableAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/FacilityArchiveAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        } ]
      },
      "FacilityArchiveAttribute" : {
        "properties" : {
          "last_archived_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "next_archive_available_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FacilityCopyAttribute" : {
        "properties" : {
          "copied_from" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "sandbox_released_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FacilityEntityUpdates" : {
        "properties" : {
          "level" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          },
          "sketch" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          },
          "floorplan" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          },
          "annotation_layer" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          }
        },
        "type" : "object"
      },
      "FacilityEntityUpdatesAttribute" : {
        "properties" : {
          "entity_updates" : {
            "$ref" : "#/components/schemas/FacilityEntityUpdates"
          }
        },
        "type" : "object"
      },
      "FacilityItem" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Facility"
          }
        },
        "type" : "object"
      },
      "FacilityList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/FacilityItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "FacilityListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FacilityListResponse_allOf"
        } ]
      },
      "FacilityOnCreateWorkspace" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FacilityOnCreateWorkspace_allOf"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        } ]
      },
      "FacilityRequestEmailConfirmationRequest" : {
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "facility_key" : {
            "type" : "string"
          }
        },
        "required" : [ "email", "facility_key" ],
        "type" : "object"
      },
      "FacilityResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FacilityResponse_allOf"
        } ]
      },
      "FacilitySignupRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.SignupRequest"
        }, {
          "$ref" : "#/components/schemas/FacilitySignupRequest_allOf"
        } ]
      },
      "FacilitySiteinsightsAttribute" : {
        "properties" : {
          "siteinsights" : {
            "type" : "boolean"
          },
          "siteinsights_disabled_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "siteinsights_setup_qualified_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FacilitySizeUnitAttribute" : {
        "properties" : {
          "facility_size_unit" : {
            "enum" : [ "SQFT", "SQM" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FcmDevice" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          },
          "platform" : {
            "enum" : [ "ios", "android", "web" ],
            "type" : "string"
          },
          "device_id" : {
            "type" : "string"
          },
          "registration_id" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FcmDeviceItem" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/FcmDevice"
          }
        },
        "type" : "object"
      },
      "FcmDeviceList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/FcmDeviceItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "FcmDeviceListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FcmDeviceListResponse_allOf"
        } ]
      },
      "FcmDeviceResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FcmDeviceResponse_allOf"
        } ]
      },
      "Feed" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Feed_allOf"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        } ]
      },
      "FeedItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Feed"
          }
        },
        "type" : "object"
      },
      "FeedList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/FeedItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "FeedListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FeedListResponse_allOf"
        } ]
      },
      "Field" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.Field"
        }, {
          "$ref" : "#/components/schemas/Field_allOf"
        } ]
      },
      "FieldItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.FieldItem"
        }, {
          "$ref" : "#/components/schemas/FieldItem_allOf"
        } ]
      },
      "FieldList" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.FieldList"
        }, {
          "$ref" : "#/components/schemas/FieldList_allOf"
        } ]
      },
      "FieldListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FieldListResponse_allOf"
        } ]
      },
      "FieldResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FieldResponse_allOf"
        } ]
      },
      "FilesizeAttribute" : {
        "description" : "Filesize for Resourcable model",
        "properties" : {
          "filesize" : {
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "FinalizeStorageCreationRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.StorageRequest"
        } ],
        "required" : [ "cf_distribution_id", "cf_hostname", "s3_bucket_region", "s3_hosting_bucket_name", "s3_region_code", "s3_source_bucket_name", "s3_source_bucket_url" ]
      },
      "Firebase" : {
        "properties" : {
          "key" : {
            "type" : "string"
          }
        },
        "required" : [ "key" ],
        "type" : "object"
      },
      "FirebaseAttribute" : {
        "properties" : {
          "firebase" : {
            "$ref" : "#/components/schemas/Firebase"
          }
        },
        "type" : "object"
      },
      "Floorplan" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Floorplan_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/FloorplanCreationFromAttribute"
        }, {
          "$ref" : "#/components/schemas/AvailableAttribute"
        }, {
          "$ref" : "#/components/schemas/CoverUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/FloorplanGeoTiffAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "FloorplanCreationFrom" : {
        "properties" : {
          "url" : {
            "type" : "string"
          },
          "headers" : {
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "FloorplanCreationFromAttribute" : {
        "properties" : {
          "creation_from" : {
            "$ref" : "#/components/schemas/FloorplanCreationFrom"
          }
        },
        "type" : "object"
      },
      "FloorplanGeoTiffAttribute" : {
        "properties" : {
          "geographic_type" : {
            "type" : "string"
          },
          "pixel_scale" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "model_tie_point" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "FloorplanItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Floorplan"
          }
        },
        "type" : "object"
      },
      "FloorplanList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/FloorplanItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "FloorplanListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FloorplanListResponse_allOf"
        } ]
      },
      "FloorplanRequest" : {
        "properties" : {
          "floorplan_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "floorplan_revision" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "FloorplanResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FloorplanResponse_allOf"
        } ]
      },
      "FloorplanSource" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/FloorplanSource_allOf"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        } ]
      },
      "FloorplanSourceItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/FloorplanSource"
          }
        },
        "type" : "object"
      },
      "FloorplanSourceList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/FloorplanSourceItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "FloorplanSourceListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FloorplanSourceListResponse_allOf"
        } ]
      },
      "FloorplanSourceResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FloorplanSourceResponse_allOf"
        } ]
      },
      "FloorplanState" : {
        "description" : "Floorplan state",
        "enum" : [ "created", "creating", "resource_uploading", "resource_missing", "processing", "error", "done" ],
        "type" : "string"
      },
      "FloorplanTile" : {
        "properties" : {
          "base" : {
            "type" : "string"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/FloorplanTile_items_inner"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "FloorplanTileState" : {
        "description" : "Floorplan tile state",
        "enum" : [ "created", "pending", "uploading", "missing", "uploaded" ],
        "type" : "string"
      },
      "FloorplanType" : {
        "description" : "Type of Floorplan",
        "enum" : [ "image", "bim", "pdf", "procore", "plangrid", "bim360", "orthomosaic" ],
        "type" : "string"
      },
      "ForgeTranslatedAttribute" : {
        "properties" : {
          "forge_translated_uploaded_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "forge_translated_list" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "FormDesign" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/FormDesign_allOf"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        } ]
      },
      "FormDesignItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/FormDesign"
          }
        },
        "type" : "object"
      },
      "FormDesignList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/FormDesignItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "FormDesignListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FormDesignListResponse_allOf"
        } ]
      },
      "FormDesignResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FormDesignResponse_allOf"
        } ]
      },
      "FormField" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.Field"
        }, {
          "$ref" : "#/components/schemas/FormField_allOf"
        } ]
      },
      "FormFieldItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.FieldItem"
        }, {
          "$ref" : "#/components/schemas/FormFieldItem_allOf"
        } ]
      },
      "FormFieldList" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.FieldList"
        }, {
          "$ref" : "#/components/schemas/FormFieldList_allOf"
        } ]
      },
      "FormFieldListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FormFieldListResponse_allOf"
        } ]
      },
      "FormFieldResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/FormFieldResponse_allOf"
        } ]
      },
      "GeoCoordinate" : {
        "properties" : {
          "pos" : {
            "items" : {
              "type" : "number"
            },
            "type" : "array"
          },
          "quat" : {
            "items" : {
              "type" : "number"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Georeference" : {
        "properties" : {
          "epsg_code" : {
            "type" : "string"
          },
          "x" : {
            "type" : "string"
          },
          "y" : {
            "type" : "string"
          },
          "z" : {
            "type" : "string"
          },
          "lat" : {
            "format" : "float",
            "type" : "number"
          },
          "lon" : {
            "format" : "float",
            "type" : "number"
          },
          "alt" : {
            "format" : "float",
            "type" : "number"
          },
          "bearing" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "GeoreferenceAttribute" : {
        "properties" : {
          "georeference" : {
            "$ref" : "#/components/schemas/Georeference"
          },
          "use_georeference" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "GeoreferenceReqeust" : {
        "properties" : {
          "georeference" : {
            "$ref" : "#/components/schemas/Georeference"
          },
          "use_georeference" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "Gps" : {
        "properties" : {
          "alt" : {
            "format" : "float",
            "type" : "number"
          },
          "lat" : {
            "format" : "float",
            "type" : "number"
          },
          "lon" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "Group" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.Group"
        }, {
          "$ref" : "#/components/schemas/Group_allOf"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/SignInMethodAttribute"
        } ]
      },
      "GroupAutocomplete" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "group" : {
            "$ref" : "#/components/schemas/GroupAutocomplete_group"
          }
        },
        "type" : "object"
      },
      "GroupCodesAttributes" : {
        "properties" : {
          "group_codes" : {
            "$ref" : "#/components/schemas/GroupCodesEnum"
          }
        },
        "type" : "object"
      },
      "GroupCodesEnum" : {
        "items" : {
          "enum" : [ "super_admin", "billing_admin", "administrators", "users", "workspace_creators", "technical_support_engineers", "facility_administrators", "assigned_customer_success_managers", "vendor", "administrator", "account_managers", "technical_support_engineer", "senior_editing_engineers", "editing_engineers", "accounting_department", "sandbox_creator", "customer_success_managers", "siteinsights_engineers", "capture_qa_managers", "everyone" ],
          "type" : "string"
        },
        "type" : "array"
      },
      "GroupItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Group"
          }
        },
        "type" : "object"
      },
      "GroupList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/GroupItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "GroupListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/GroupListResponse_allOf"
        } ]
      },
      "GroupMember" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "team_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "workspace_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "facility_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "review_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "group" : {
            "$ref" : "#/components/schemas/GroupAutocomplete_group"
          },
          "inherited_from" : {
            "$ref" : "#/components/schemas/InheritedFrom"
          }
        },
        "type" : "object"
      },
      "GroupResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/GroupResponse_allOf"
        } ]
      },
      "GroupType" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "maximum_user_count" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "ImportCategoryRequest" : {
        "properties" : {
          "source_facility_key" : {
            "type" : "string"
          }
        },
        "required" : [ "source_facility_key" ],
        "type" : "object"
      },
      "ImportedBimVersionAttribute" : {
        "properties" : {
          "import_bim_version" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "InheritedFrom" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Integration" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "provider" : {
            "type" : "string"
          },
          "integratable" : {
            "$ref" : "#/components/schemas/Integration_integratable"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "acc" : {
            "$ref" : "#/components/schemas/AccIntegration"
          },
          "bim360" : {
            "$ref" : "#/components/schemas/Bim360Integration"
          },
          "procore" : {
            "$ref" : "#/components/schemas/ProcoreIntegration"
          },
          "plangrid" : {
            "$ref" : "#/components/schemas/PlangridIntegration"
          },
          "revizto" : {
            "$ref" : "#/components/schemas/ReviztoIntegration"
          },
          "region" : {
            "$ref" : "#/components/schemas/IntegrationRegionEnum"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "IntegrationAccessToken" : {
        "properties" : {
          "provider" : {
            "type" : "string"
          },
          "token_type" : {
            "type" : "string"
          },
          "access_token" : {
            "type" : "string"
          },
          "expired_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "IntegrationAccessTokenResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/IntegrationAccessTokenResponse_allOf"
        } ]
      },
      "IntegrationItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Integration"
          }
        },
        "type" : "object"
      },
      "IntegrationList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/IntegrationItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "IntegrationListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/IntegrationListResponse_allOf"
        } ]
      },
      "IntegrationRegionEnum" : {
        "enum" : [ "US", "EU", "canada", "dubai", "ireland", "ksa", "london", "saopaulo", "singapore", "sydney", "tokyo", "virginia", null ],
        "type" : "string"
      },
      "IntegrationResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/IntegrationResponse_allOf"
        } ]
      },
      "InvokeBimRequest" : {
        "properties" : {
          "command" : {
            "enum" : [ "change_version" ],
            "type" : "string"
          },
          "option_json" : {
            "type" : "object"
          }
        },
        "required" : [ "command" ],
        "type" : "object"
      },
      "InvokeCaptureRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/InvokeRequest"
        } ]
      },
      "InvokeFacilityRequest" : {
        "properties" : {
          "command" : {
            "type" : "string"
          },
          "option_json" : {
            "type" : "object"
          }
        },
        "required" : [ "command" ],
        "type" : "object"
      },
      "InvokePointcloudRequest" : {
        "properties" : {
          "command" : {
            "type" : "string"
          },
          "option_json" : {
            "type" : "object"
          }
        },
        "required" : [ "command" ],
        "type" : "object"
      },
      "InvokeRecordRequest" : {
        "properties" : {
          "command" : {
            "type" : "string"
          },
          "option_json" : {
            "type" : "object"
          }
        },
        "required" : [ "command" ],
        "type" : "object"
      },
      "InvokeRequest" : {
        "properties" : {
          "command" : {
            "type" : "string"
          },
          "option_json" : {
            "type" : "object"
          }
        },
        "required" : [ "command" ],
        "type" : "object"
      },
      "InvokeSketchRequest" : {
        "properties" : {
          "command" : {
            "type" : "string"
          },
          "option_json" : {
            "type" : "object"
          }
        },
        "required" : [ "command" ],
        "type" : "object"
      },
      "Issue" : {
        "properties" : {
          "model" : {
            "$ref" : "#/components/schemas/Issue_model"
          },
          "issue_type" : {
            "$ref" : "#/components/schemas/IssueType"
          },
          "error_code" : {
            "type" : "string"
          },
          "issued_by" : {
            "type" : "string"
          },
          "created_by" : {
            "type" : "string"
          },
          "contact_email" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "IssueItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Issue"
        } ]
      },
      "IssueList" : {
        "items" : {
          "$ref" : "#/components/schemas/IssueItem"
        },
        "type" : "array"
      },
      "IssueListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueListResponse_allOf"
        } ]
      },
      "IssueResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueResponse_allOf"
        } ]
      },
      "IssueType" : {
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          },
          "follow_up" : {
            "type" : "string"
          },
          "error_code" : {
            "type" : "string"
          },
          "instruction" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "IssueTypeItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueType"
        } ]
      },
      "IssueTypeList" : {
        "items" : {
          "$ref" : "#/components/schemas/IssueTypeItem"
        },
        "type" : "array"
      },
      "IssueTypeListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueTypeListResponse_allOf"
        } ]
      },
      "IssueTypeResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueTypeResponse_allOf"
        } ]
      },
      "ItwinConnect" : {
        "properties" : {
          "itwin_client_id" : {
            "type" : "string"
          },
          "itwin_id" : {
            "type" : "string"
          },
          "itwin_model_id" : {
            "type" : "string"
          },
          "itwin_bing_key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Job" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Job_allOf"
        }, {
          "$ref" : "#/components/schemas/ActionAttribute"
        } ]
      },
      "JobItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Job"
          }
        },
        "type" : "object"
      },
      "JobResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/JobResponse_allOf"
        } ]
      },
      "Jobable" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "JobableAttribute" : {
        "properties" : {
          "error_code" : {
            "type" : "string"
          },
          "progress" : {
            "format" : "float",
            "type" : "number"
          },
          "processing_status" : {
            "type" : "string"
          },
          "running_state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "LanguageCode" : {
        "enum" : [ "af", "ar", "zh", "da", "nl", "en", "fr", "fa", "de", "he", "hi", "id", "it", "jp", "ko", "ms", "pt", "ru", "es", "sv", "ta", "te", "th", "tr", "vi" ],
        "type" : "string"
      },
      "LastTaskUpdatedAtResponse" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/LastTaskUpdatedAtResponse_result"
          }
        },
        "type" : "object"
      },
      "LastUpdatedUserAttribute" : {
        "properties" : {
          "last_updated_user" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "type" : "object"
      },
      "Level" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Level_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/PublishableAttribute"
        }, {
          "$ref" : "#/components/schemas/AvailableAttribute"
        } ]
      },
      "LevelItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Level"
          }
        },
        "type" : "object"
      },
      "LevelList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/LevelItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "LevelListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/LevelListResponse_allOf"
        } ]
      },
      "LevelResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/LevelResponse_allOf"
        } ]
      },
      "License" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/License_allOf"
        }, {
          "$ref" : "#/components/schemas/BillableAttribute"
        } ]
      },
      "LicenseAttribute" : {
        "properties" : {
          "applied_license_state" : {
            "$ref" : "#/components/schemas/AppliedLicenseState"
          }
        },
        "type" : "object"
      },
      "LicenseItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/License"
          }
        },
        "type" : "object"
      },
      "LicenseList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/LicenseItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "LicenseListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/LicenseListResponse_allOf"
        } ]
      },
      "LicenseTypeAttribute" : {
        "properties" : {
          "license_type" : {
            "enum" : [ "subscription", "project_license", "subscription_trial", "project_license_trial" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "LinkResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/LinkResponse_allOf"
        } ]
      },
      "Locale" : {
        "description" : "Simple interface for ISO-639-1 language codes and ISO-3166-1-alpha-2 country codes",
        "enum" : [ "en-GB", "en-US", "en-AU", "en-CA", "ko-KR", "ja-JP" ],
        "type" : "string"
      },
      "LocaleAttribute" : {
        "properties" : {
          "locale" : {
            "$ref" : "#/components/schemas/Locale"
          }
        },
        "type" : "object"
      },
      "Location" : {
        "properties" : {
          "lat" : {
            "format" : "float",
            "type" : "number"
          },
          "lon" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "LocationAttribute" : {
        "properties" : {
          "location" : {
            "$ref" : "#/components/schemas/Location"
          }
        },
        "type" : "object"
      },
      "LocationRequest" : {
        "properties" : {
          "location" : {
            "$ref" : "#/components/schemas/Location"
          }
        },
        "type" : "object"
      },
      "LockState" : {
        "description" : "Lock 상태",
        "enum" : [ "active", "locked", "suspended" ],
        "type" : "string"
      },
      "LockStateAttribute" : {
        "properties" : {
          "lock_state" : {
            "$ref" : "#/components/schemas/LockState"
          },
          "lock_state_updated_at" : {
            "description" : "UTC+0 based.",
            "format" : "date-time",
            "type" : "string"
          },
          "lock_reason" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "LogoUrls" : {
        "description" : "Logo URLs",
        "properties" : {
          "thumb" : {
            "type" : "string"
          },
          "original" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "LogoUrlsAttribute" : {
        "properties" : {
          "logo_urls" : {
            "$ref" : "#/components/schemas/LogoUrls"
          }
        },
        "type" : "object"
      },
      "Mask" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Mask_allOf"
        } ]
      },
      "MaskItem" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Mask"
          }
        },
        "type" : "object"
      },
      "MaskResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/MaskResponse_allOf"
        } ]
      },
      "MaskType" : {
        "enum" : [ "face", "body", "facebody", "custom" ],
        "type" : "string"
      },
      "Maskable" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MatterportConnect" : {
        "properties" : {
          "matterport_sid" : {
            "type" : "string"
          },
          "matterport_app_key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Measurement" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Measurement_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "MeasurementItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Measurement"
          }
        },
        "type" : "object"
      },
      "MeasurementList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/MeasurementItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "MeasurementListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/MeasurementListResponse_allOf"
        } ]
      },
      "MeasurementResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/MeasurementResponse_allOf"
        } ]
      },
      "MeasurementState" : {
        "enum" : [ "created", "resource_uploading", "resource_missing", "uploaded" ],
        "type" : "string"
      },
      "MeasurementType" : {
        "enum" : [ "distance", "radius", "angle", "area", "plane", "volume" ],
        "type" : "string"
      },
      "MemberItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/MemberItem_attributes"
          }
        },
        "type" : "object"
      },
      "MemberList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/MemberItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "type" : "object"
      },
      "Mesh" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Mesh_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/ConstantableAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceAttribute"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "MeshItem" : {
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Mesh"
          }
        },
        "type" : "object"
      },
      "MeshList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/MeshItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "MeshListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/MeshListResponse_allOf"
        } ]
      },
      "MeshResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/MeshResponse_allOf"
        } ]
      },
      "MeshState" : {
        "enum" : [ "created", "uploading", "missing", "uploaded", "error" ],
        "type" : "string"
      },
      "MeshStateRequest" : {
        "enum" : [ "uploading", "uploaded", "error" ],
        "type" : "string"
      },
      "MetaRequest" : {
        "properties" : {
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "MetaResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/MetaResponse_allOf"
        } ]
      },
      "Metric" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Metric_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "MetricItem" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Metric"
          }
        },
        "type" : "object"
      },
      "MetricList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/MetricItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "MetricListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/MetricListResponse_allOf"
        } ]
      },
      "MetricPosition" : {
        "enum" : [ "prefix", "suffix" ],
        "type" : "string"
      },
      "MetricResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/MetricResponse_allOf"
        } ]
      },
      "MfaAttribute" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MfaAttribute_allOf"
        }, {
          "$ref" : "#/components/schemas/MfaMethodAttribute"
        } ]
      },
      "MfaMethodAttribute" : {
        "properties" : {
          "mfa_method" : {
            "enum" : [ "email" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MfaRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/MfaMethodAttribute"
        } ],
        "required" : [ "mfa_method" ]
      },
      "Node" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Node_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        } ]
      },
      "NodeItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Node"
          }
        },
        "type" : "object"
      },
      "NodeList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/NodeItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "NodeListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/NodeListResponse_allOf"
        } ]
      },
      "NodeResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/NodeResponse_allOf"
        } ]
      },
      "Onboard" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "group" : {
            "type" : "string"
          },
          "row_order" : {
            "format" : "int64",
            "type" : "integer"
          },
          "started_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "expires_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "OnboardCompletionResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/OnboardCompletionResponse_allOf"
        } ]
      },
      "OnboardItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Onboard"
          }
        },
        "type" : "object"
      },
      "OnboardList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/OnboardItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "OnboardListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/OnboardListResponse_allOf"
        } ]
      },
      "OptOutAttribute" : {
        "properties" : {
          "opt_out" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Pagination" : {
        "description" : "Pagination info.",
        "properties" : {
          "total_entries" : {
            "format" : "int64",
            "type" : "integer"
          },
          "total_pages" : {
            "format" : "int32",
            "type" : "integer"
          },
          "per_page" : {
            "format" : "int32",
            "type" : "integer"
          },
          "previous_page" : {
            "format" : "int32",
            "type" : "integer"
          },
          "current_page" : {
            "format" : "int32",
            "type" : "integer"
          },
          "next_page" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Pano" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Pano_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/ActionAttribute"
        }, {
          "$ref" : "#/components/schemas/CameraAttribute"
        }, {
          "$ref" : "#/components/schemas/PanoRevisionAttribute"
        }, {
          "$ref" : "#/components/schemas/ConstantableAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "PanoExif" : {
        "properties" : {
          "exif" : {
            "$ref" : "#/components/schemas/PanoExif_exif"
          },
          "video" : {
            "$ref" : "#/components/schemas/PanoExif_video"
          }
        },
        "type" : "object"
      },
      "PanoItem" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Pano"
          }
        },
        "type" : "object"
      },
      "PanoList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/PanoItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "PanoListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/PanoListResponse_allOf"
        } ]
      },
      "PanoMaterialAttribute" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "upload_url" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PanoOrigin" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PanoResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/PanoResponse_allOf"
        } ]
      },
      "PanoRevisionAttribute" : {
        "properties" : {
          "revision_type" : {
            "$ref" : "#/components/schemas/PanoRevisionType"
          },
          "enhanced_image_revision" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "PanoRevisionType" : {
        "enum" : [ "normal", "enhanced_image" ],
        "type" : "string"
      },
      "PanoType" : {
        "enum" : [ "still", "red", "green", "voice" ],
        "type" : "string"
      },
      "Permission" : {
        "enum" : [ "R", "RU", "RC", "RUC", "F", "M", "D" ],
        "type" : "string"
      },
      "PermissionAttribute" : {
        "properties" : {
          "permission" : {
            "$ref" : "#/components/schemas/Permission"
          }
        },
        "type" : "object"
      },
      "Phase" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Phase_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        } ]
      },
      "PhaseItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Phase"
          }
        },
        "type" : "object"
      },
      "PhaseList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/PhaseItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "PhaseListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/PhaseListResponse_allOf"
        } ]
      },
      "PhaseMetric" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PhaseMetric_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "PhaseMetricFormulaValidationResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/PhaseMetricFormulaValidationResponse_allOf"
        } ]
      },
      "PhaseMetricFormulaValidationResult" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "formula" : {
            "type" : "string"
          },
          "elements" : {
            "items" : {
              "$ref" : "#/components/schemas/PhaseMetricSampledElement"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "PhaseMetricItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/PhaseMetric"
          }
        },
        "type" : "object"
      },
      "PhaseMetricList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/PhaseMetricItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "PhaseMetricListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/PhaseMetricListResponse_allOf"
        } ]
      },
      "PhaseMetricResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/PhaseMetricResponse_allOf"
        } ]
      },
      "PhaseMetricSampledElement" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ElementBimMetaAttribute"
        }, {
          "$ref" : "#/components/schemas/ElementQuantityAttribute"
        }, {
          "$ref" : "#/components/schemas/PhaseMetricSampledElement_allOf"
        } ]
      },
      "PhaseResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/PhaseResponse_allOf"
        } ]
      },
      "PlangridAnnotationAttributes" : {
        "properties" : {
          "plangrid_project_id" : {
            "type" : "string"
          },
          "plangrid_item_id" : {
            "type" : "string"
          },
          "plangrid_attachment_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PlangridIntegration" : {
        "properties" : {
          "project_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Pointcloud" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Pointcloud_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/ResourceStateAttribute"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/CameraAttribute"
        }, {
          "$ref" : "#/components/schemas/ConstantableAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceAttribute"
        }, {
          "$ref" : "#/components/schemas/DeviationResultAttribute"
        }, {
          "$ref" : "#/components/schemas/PointcloudTypeAttribute"
        }, {
          "$ref" : "#/components/schemas/PointcloudMeshTypeAttribute"
        }, {
          "$ref" : "#/components/schemas/PointsCountAttribute"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "PointcloudCpcMeshState" : {
        "description" : "Pointcloud cpc mesh state",
        "enum" : [ "created", "none", "uploading", "uploaded" ],
        "type" : "string"
      },
      "PointcloudItem" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Pointcloud"
          }
        },
        "type" : "object"
      },
      "PointcloudList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/PointcloudItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "PointcloudListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/PointcloudListResponse_allOf"
        } ]
      },
      "PointcloudMeshType" : {
        "enum" : [ "none", "all", "only_amazon", "only_cupix" ],
        "type" : "string"
      },
      "PointcloudMeshTypeAttribute" : {
        "properties" : {
          "mesh_type" : {
            "$ref" : "#/components/schemas/PointcloudMeshType"
          }
        },
        "type" : "object"
      },
      "PointcloudOctreeState" : {
        "description" : "Pointcloud octree state",
        "enum" : [ "created", "none", "uploading", "uploaded" ],
        "type" : "string"
      },
      "PointcloudPotreeState" : {
        "description" : "Pointcloud potree state",
        "enum" : [ "created", "processing", "uploading", "missing", "uploaded", "error" ],
        "type" : "string"
      },
      "PointcloudResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/PointcloudResponse_allOf"
        } ]
      },
      "PointcloudType" : {
        "enum" : [ "uploaded", "3d_reconstructed", "all" ],
        "type" : "string"
      },
      "PointcloudTypeAttribute" : {
        "properties" : {
          "pointcloud_type" : {
            "$ref" : "#/components/schemas/PointcloudType"
          }
        },
        "type" : "object"
      },
      "PointsCountAttribute" : {
        "properties" : {
          "points_count" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "PowerBiEmbedTokenResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/PowerBiEmbedTokenResponse_allOf"
        } ]
      },
      "PowerBiReport" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/PowerBiReport_allOf"
        } ]
      },
      "PowerBiReportItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/PowerBiReport"
          }
        },
        "type" : "object"
      },
      "PowerBiReportList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/PowerBiReportItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "PowerBiReportListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/PowerBiReportListResponse_allOf"
        } ]
      },
      "PowerBiToken" : {
        "properties" : {
          "token" : {
            "example" : "H4sIAAAAAAAEAB2Tt66EVgAF_-W1WCItLNeSC2DJOYeOHJacwfK_-9n9NGdG5...",
            "type" : "string"
          },
          "expiration" : {
            "example" : "2024-10-15T04:09:13Z",
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PredefinedFilter" : {
        "enum" : [ "include_default" ],
        "type" : "string"
      },
      "PrimaryCsmAttribute" : {
        "properties" : {
          "primary_csm" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "type" : "object"
      },
      "ProcessingOptionsResource" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ProcoreAnnotationAttributes" : {
        "properties" : {
          "procore_company_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "procore_project_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "procore_item_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "procore_attachment_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "ProcoreIntegration" : {
        "properties" : {
          "company_id" : {
            "type" : "integer"
          },
          "project_id" : {
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Progress" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Progress_allOf"
        }, {
          "$ref" : "#/components/schemas/ProgressSiteInsightAttribute"
        }, {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "ProgressAggsList" : {
        "properties" : {
          "level" : {
            "$ref" : "#/components/schemas/AggsItem"
          },
          "bim" : {
            "$ref" : "#/components/schemas/AggsItem"
          },
          "sketch" : {
            "$ref" : "#/components/schemas/AggsItem"
          },
          "workflow" : {
            "$ref" : "#/components/schemas/AggsItem"
          },
          "category" : {
            "$ref" : "#/components/schemas/AggsItem"
          }
        },
        "type" : "object"
      },
      "ProgressItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Progress"
          }
        },
        "type" : "object"
      },
      "ProgressList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/ProgressItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "ProgressListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ProgressListResponse_allOf"
        } ]
      },
      "ProgressResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ProgressResponse_allOf"
        } ]
      },
      "ProgressSiteInsightAttribute" : {
        "properties" : {
          "quantity" : {
            "format" : "float",
            "type" : "number"
          },
          "quantity_attribute_key" : {
            "type" : "string"
          },
          "mass_property" : {
            "format" : "float",
            "type" : "number"
          },
          "cost" : {
            "format" : "float",
            "type" : "number"
          },
          "bim_bounds" : {
            "$ref" : "#/components/schemas/BimBounds"
          },
          "customs" : {
            "$ref" : "#/components/schemas/Customs"
          },
          "bim_model_id" : {
            "type" : "integer"
          },
          "bim_element_id" : {
            "type" : "integer"
          },
          "viewpoint" : {
            "$ref" : "#/components/schemas/Viewpoint"
          }
        },
        "type" : "object"
      },
      "PtsUnitType" : {
        "enum" : [ "ms" ],
        "type" : "string"
      },
      "PublicAccessEnabledAtAttribute" : {
        "properties" : {
          "public_access_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PublicReview" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "public_access_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PublicReviewItem" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/PublicReview"
          }
        },
        "type" : "object"
      },
      "PublicReviewResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/PublicReviewResponse_allOf"
        } ]
      },
      "PublishableAttribute" : {
        "properties" : {
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "RealityCapture" : {
        "discriminator" : {
          "mapping" : {
            "Poitcloud" : "#/components/schemas/Pointcloud",
            "Mesh" : "#/components/schemas/Mesh"
          },
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Pointcloud"
        }, {
          "$ref" : "#/components/schemas/Mesh"
        } ]
      },
      "RealityCaptureItem" : {
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/RealityCapture"
          }
        },
        "type" : "object"
      },
      "RealityCaptureList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/RealityCaptureItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "RealityCaptureListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/RealityCaptureListResponse_allOf"
        } ]
      },
      "Recipe" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "ReconstructionStateAttribute" : {
        "properties" : {
          "reconstruction_state" : {
            "enum" : [ "none", "processing", "done", "error" ],
            "type" : "string"
          },
          "reconstruction_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Record" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Record_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/SiteinsightsReportAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ],
        "discriminator" : {
          "propertyName" : "recordType"
        }
      },
      "RecordActionState" : {
        "description" : "Record action state",
        "enum" : [ "required", "completed" ],
        "type" : "string"
      },
      "RecordItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Record"
          }
        },
        "type" : "object"
      },
      "RecordList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/RecordItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "RecordListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/RecordListResponse_allOf"
        } ]
      },
      "RecordResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/RecordResponse_allOf"
        } ]
      },
      "RecordStatus" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/RecordStatus_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/EstimatedStatusDetailsAttribute"
        } ]
      },
      "RecordStatusAggsList" : {
        "properties" : {
          "progress" : {
            "$ref" : "#/components/schemas/AggsItem"
          },
          "record" : {
            "$ref" : "#/components/schemas/AggsItem"
          },
          "status" : {
            "$ref" : "#/components/schemas/AggsItem"
          }
        },
        "type" : "object"
      },
      "RecordStatusItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/RecordStatus"
          }
        },
        "type" : "object"
      },
      "RecordStatusList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/RecordStatusItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "RecordStatusListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/RecordStatusListResponse_allOf"
        } ]
      },
      "RecordStatusResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/RecordStatusResponse_allOf"
        } ]
      },
      "Reference" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Reference_allOf"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        } ]
      },
      "ReferenceItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Reference"
          }
        },
        "type" : "object"
      },
      "ReferenceList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/Reference"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "ReferenceListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ReferenceListResponse_allOf"
        } ]
      },
      "ReferencePlanUploadMethodAttribute" : {
        "properties" : {
          "reference_plan_upload_method" : {
            "enum" : [ "all", "pdf", "advanced" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ReferenceResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ReferenceResponse_allOf"
        } ]
      },
      "ReferenceSources" : {
        "properties" : {
          "pano" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "capture" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "pointcloud" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "mesh" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "floorplan" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "bim" : {
            "$ref" : "#/components/schemas/BimIdsAttribute"
          }
        },
        "type" : "object"
      },
      "RefinementAttribute" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/RefinementAttribute_allOf"
        } ]
      },
      "RefinementState" : {
        "enum" : [ "none", "draft", "ready", "queued", "refined", "skipped" ],
        "type" : "string"
      },
      "ReinvokeBimRequest" : {
        "properties" : {
          "command" : {
            "enum" : [ "reprocess" ],
            "type" : "string"
          },
          "option_json" : {
            "type" : "object"
          }
        },
        "required" : [ "command" ],
        "type" : "object"
      },
      "RemoveUsersGroupRequest" : {
        "properties" : {
          "user_ids" : {
            "items" : {
              "description" : "User ID",
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "required" : [ "user_ids" ],
        "type" : "object"
      },
      "Report" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Report_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        } ]
      },
      "ReportAnnotation" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Annotation"
        }, {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/ReportAnnotation_allOf"
        }, {
          "$ref" : "#/components/schemas/LocationAttribute"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "ReportAnnotationItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/ReportAnnotation"
          }
        },
        "type" : "object"
      },
      "ReportAnnotationList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/ReportAnnotationItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "type" : "object"
      },
      "ReportAnnotationListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ReportAnnotationListResponse_allOf"
        } ]
      },
      "ReportItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Report"
          }
        },
        "type" : "object"
      },
      "ReportKind" : {
        "enum" : [ "form", "markup", "bim360", "bim360_issue", "bim360_rfi", "procore_rfi", "procore_observation", "procore_punch_list", "plangrid_rfi", "plangrid_task", "acc_issue", "acc_rfi" ],
        "type" : "string"
      },
      "ReportList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/ReportItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "type" : "object"
      },
      "ReportListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ReportListResponse_allOf"
        } ]
      },
      "ReportResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ReportResponse_allOf"
        } ]
      },
      "Reportable" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "enum" : [ "Team", "Workspace", "Facility" ],
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "RequestEmailConfirmationRequest" : {
        "properties" : {
          "email" : {
            "type" : "string"
          }
        },
        "required" : [ "email" ],
        "type" : "object"
      },
      "RequestEmailConfirmationResponse" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/EmailResponse_result"
          }
        },
        "type" : "object"
      },
      "RequestResetPasswordRequest" : {
        "properties" : {
          "team_domain" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        },
        "required" : [ "email", "team_domain" ],
        "type" : "object"
      },
      "ResendTeamInvitationRequest" : {
        "properties" : {
          "user_email" : {
            "type" : "string"
          }
        },
        "required" : [ "user_email" ],
        "type" : "object"
      },
      "ResendTeamInvitationSentResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ResendTeamInvitationSentResponse_allOf"
        } ]
      },
      "ResetPasswordRequest" : {
        "properties" : {
          "team_domain" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "reset_password_token" : {
            "type" : "string"
          },
          "new_password" : {
            "type" : "string"
          },
          "new_password_confirm" : {
            "type" : "string"
          }
        },
        "required" : [ "email", "new_password", "new_password_confirm", "reset_password_token", "team_domain" ],
        "type" : "object"
      },
      "Resource" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Resource_allOf"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        } ]
      },
      "ResourceItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Resource"
          }
        },
        "type" : "object"
      },
      "ResourceList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/ResourceItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "ResourceListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ResourceListResponse_allOf"
        } ]
      },
      "ResourceResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ResourceResponse_allOf"
        } ]
      },
      "ResourceStateAttribute" : {
        "description" : "Resource State",
        "properties" : {
          "resource_state" : {
            "enum" : [ "created", "uploading", "missing", "uploaded" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Response" : {
        "properties" : {
          "result" : {
            "type" : "object"
          },
          "session" : {
            "$ref" : "#/components/schemas/Response_session"
          },
          "aggs" : {
            "nullable" : true,
            "type" : "object"
          }
        },
        "required" : [ "result", "session" ],
        "type" : "object"
      },
      "Review" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Review_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/LicenseAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/DraftedAtAttribute"
        }, {
          "$ref" : "#/components/schemas/PublicAccessEnabledAtAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "ReviewItem" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Review"
          }
        },
        "type" : "object"
      },
      "ReviewList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/ReviewItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "ReviewListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ReviewListResponse_allOf"
        } ]
      },
      "ReviewPublicAccessEnabledAtAttribute" : {
        "properties" : {
          "review_public_access_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ReviewRequestEmailConfirmationRequest" : {
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "review_key" : {
            "type" : "string"
          }
        },
        "required" : [ "email", "review_key" ],
        "type" : "object"
      },
      "ReviewResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ReviewResponse_allOf"
        } ]
      },
      "ReviewSignupRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.SignupRequest"
        }, {
          "$ref" : "#/components/schemas/ReviewSignupRequest_allOf"
        } ]
      },
      "Reviewer" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "state" : {
            "$ref" : "#/components/schemas/ReviewerState"
          }
        },
        "type" : "object"
      },
      "ReviewerState" : {
        "description" : "Reviewer State of Editing",
        "enum" : [ "waiting", "approved", "rejected", "pending", "revised", "skipped" ],
        "type" : "string"
      },
      "ReviseElementRequest" : {
        "properties" : {
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/ReviseElementRequest_items_inner"
            },
            "type" : "array"
          },
          "bim_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "bim_id", "items" ],
        "type" : "object"
      },
      "ReviztoIntegration" : {
        "additionalProperties" : true,
        "type" : "object"
      },
      "Room" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Room_allOf"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/PublishableAttribute"
        } ]
      },
      "RoomItem" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Room"
          }
        },
        "type" : "object"
      },
      "RoomList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/RoomItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "RoomListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/RoomListResponse_allOf"
        } ]
      },
      "RoomResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/RoomResponse_allOf"
        } ]
      },
      "SafeTrashRecordRequest" : {
        "properties" : {
          "target_id" : {
            "description" : "The ID of the record to which all areas will be moved\n",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "SalesforceAttribute" : {
        "properties" : {
          "sf_resource_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ScheduleState" : {
        "description" : "Schedule State",
        "enum" : [ "none", "initialized", "tracking_plan_created", "task_creating", "task_created" ],
        "type" : "string"
      },
      "SearchCount" : {
        "properties" : {
          "workspace_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facility_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "record_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "report_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "review_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "capture_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "pointcloud_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "room_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "reality_capture_count" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "SearchCountResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/SearchCountResponse_allOf"
        } ]
      },
      "SecondaryCsmAttribute" : {
        "properties" : {
          "secondary_csm" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "type" : "object"
      },
      "SecurityAttribute" : {
        "properties" : {
          "review_publish_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SelectedAnnotationLayerItem" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "SelectedAnnotationLayers" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SelectedAnnotationLayers_allOf"
        }, {
          "$ref" : "#/components/schemas/SelectedItemIds"
        } ]
      },
      "SelectedAreas" : {
        "properties" : {
          "any" : {
            "type" : "boolean"
          },
          "ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SelectedBimItem" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "SelectedBims" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SelectedBims_allOf"
        }, {
          "$ref" : "#/components/schemas/SelectedItemIds"
        } ]
      },
      "SelectedDateRanges" : {
        "properties" : {
          "any" : {
            "type" : "boolean"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/DateRange"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SelectedFloorplanItem" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "level" : {
            "$ref" : "#/components/schemas/SelectedFloorplanItem_level"
          }
        },
        "type" : "object"
      },
      "SelectedFloorplans" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SelectedFloorplans_allOf"
        }, {
          "$ref" : "#/components/schemas/SelectedItemIds"
        } ]
      },
      "SelectedIds" : {
        "properties" : {
          "any" : {
            "type" : "boolean"
          },
          "ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "default_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "SelectedItemIds" : {
        "properties" : {
          "any" : {
            "type" : "boolean"
          },
          "ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SelectedLevelItems" : {
        "items" : {
          "$ref" : "#/components/schemas/SelectedLevelItems_inner"
        },
        "type" : "array"
      },
      "SelectedLevels" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SelectedLevels_allOf"
        }, {
          "$ref" : "#/components/schemas/SelectedIds"
        } ]
      },
      "SelectedPointclouds" : {
        "properties" : {
          "pointclouds" : {
            "items" : {
              "$ref" : "#/components/schemas/Pointcloud"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SelectedRecordIds" : {
        "properties" : {
          "ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SelfSignupWhitelistResponse" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/SelfSignupWhitelistResponse_result"
          }
        },
        "type" : "object"
      },
      "Session" : {
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/SessionUserItem"
          },
          "team" : {
            "$ref" : "#/components/schemas/TeamItem"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "expires_at" : {
            "description" : "현재 세션이 자동으로 만료되는 시각이며, token refresh 시 연장된다",
            "format" : "date-time",
            "type" : "string"
          },
          "session_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SessionItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Session"
          }
        },
        "type" : "object"
      },
      "SessionResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/SessionResponse_allOf"
        } ]
      },
      "SessionUser" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/User"
        }, {
          "$ref" : "#/components/schemas/SessionUser_allOf"
        }, {
          "$ref" : "#/components/schemas/GroupCodesAttributes"
        } ]
      },
      "SessionUserItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/SessionUser"
          }
        },
        "type" : "object"
      },
      "ShareListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/ShareListResponse_allOf"
        } ]
      },
      "ShareRequest" : {
        "properties" : {
          "user_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "group_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "review_key" : {
            "type" : "string"
          },
          "emails" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "send_notification" : {
            "type" : "boolean"
          },
          "message" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SignInMethodAttribute" : {
        "properties" : {
          "sign_in_methods" : {
            "items" : {
              "$ref" : "#/components/schemas/SignInMethods"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SignInMethodRequest" : {
        "properties" : {
          "sign_in_methods" : {
            "items" : {
              "$ref" : "#/components/schemas/SignInMethods"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SignInMethods" : {
        "enum" : [ "email", "azure", "procore" ],
        "type" : "string"
      },
      "SignUpRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.SignupRequest"
        }, {
          "$ref" : "#/components/schemas/SignUpRequest_allOf"
        } ]
      },
      "SiteInsightCell" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SiteInsightCell_allOf"
        }, {
          "$ref" : "#/components/schemas/SiteInsightCustomPropertyAttribute"
        }, {
          "$ref" : "#/components/schemas/SiteInsightRecordStatusAttribute"
        }, {
          "$ref" : "#/components/schemas/SiteInsightProgressAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "SiteInsightCellItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/SiteInsightsObject"
          }
        },
        "type" : "object"
      },
      "SiteInsightCellList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/SiteInsightCellItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "SiteInsightCellListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/SiteInsightCellListResponse_allOf"
        } ]
      },
      "SiteInsightCustomPropertyAttribute" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SiteInsightProgressAttribute" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SiteInsightProgressAttribute_allOf"
        }, {
          "$ref" : "#/components/schemas/ProgressSiteInsightAttribute"
        } ]
      },
      "SiteInsightRecordStatusAttribute" : {
        "properties" : {
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          },
          "deviation" : {
            "$ref" : "#/components/schemas/Deviation"
          },
          "coverage" : {
            "format" : "float",
            "type" : "number"
          },
          "average_error_in_millimeter" : {
            "format" : "int64",
            "type" : "integer"
          },
          "deviation_vector" : {
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "SiteInsightsObject" : {
        "discriminator" : {
          "mapping" : {
            "cell" : "#/components/schemas/SiteInsightCell",
            "progress" : "#/components/schemas/Progress",
            "category" : "#/components/schemas/Category",
            "workflow" : "#/components/schemas/Workflow",
            "group" : "#/components/schemas/Group",
            "room" : "#/components/schemas/Room",
            "activity" : "#/components/schemas/Activity",
            "level" : "#/components/schemas/Level"
          },
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/SiteInsightCell"
        }, {
          "$ref" : "#/components/schemas/Progress"
        }, {
          "$ref" : "#/components/schemas/Category"
        }, {
          "$ref" : "#/components/schemas/Workflow"
        }, {
          "$ref" : "#/components/schemas/Group"
        }, {
          "$ref" : "#/components/schemas/Room"
        }, {
          "$ref" : "#/components/schemas/Activity"
        }, {
          "$ref" : "#/components/schemas/Level"
        } ]
      },
      "SiteinsightsConfig" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SiteinsightsConfig_allOf"
        } ]
      },
      "SiteinsightsConfigItem" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/SiteinsightsConfig"
          }
        },
        "type" : "object"
      },
      "SiteinsightsConfigResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/SiteinsightsConfigResponse_allOf"
        } ]
      },
      "SiteinsightsConfigState" : {
        "enum" : [ "none", "initial_setup", "done_setup", "qualified" ],
        "type" : "string"
      },
      "SiteinsightsReportAttribute" : {
        "properties" : {
          "siteinsights_reports_url" : {
            "$ref" : "#/components/schemas/SiteinsightsReportUrls"
          },
          "siteinsights_report_state" : {
            "type" : "string"
          },
          "siteinsights_report_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SiteinsightsReportUrls" : {
        "description" : "Siteinsights Report URLs",
        "properties" : {
          "progress" : {
            "type" : "string"
          },
          "record_status" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SiteinsightsTrackDay" : {
        "enum" : [ "0", "1", "2", "3", "4", "5", "6" ],
        "type" : "string"
      },
      "SiteinsightsTrackFrequency" : {
        "enum" : [ "none", "weekly", "bi_weekly" ],
        "type" : "string"
      },
      "Sketch" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Sketch_allOf"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "SketchItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Sketch"
          }
        },
        "type" : "object"
      },
      "SketchList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/SketchItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "SketchListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/SketchListResponse_allOf"
        } ]
      },
      "SketchResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/SketchResponse_allOf"
        } ]
      },
      "Spacetime" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Spacetime_allOf"
        } ]
      },
      "SpacetimeItem" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Spacetime"
          }
        },
        "type" : "object"
      },
      "SpacetimeList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/SpacetimeItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "SpacetimeListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/SpacetimeListResponse_allOf"
        } ]
      },
      "Status" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Status_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/StatusKindAttribute"
        } ]
      },
      "StatusItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Status"
          }
        },
        "type" : "object"
      },
      "StatusKindAttribute" : {
        "properties" : {
          "kind" : {
            "enum" : [ "texture", "installation", "list", "number" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "StatusList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/StatusItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "StatusListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/StatusListResponse_allOf"
        } ]
      },
      "StatusResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/StatusResponse_allOf"
        } ]
      },
      "StatusType" : {
        "properties" : {
          "id" : {
            "format" : "int32",
            "type" : "integer"
          },
          "code" : {
            "$ref" : "#/components/schemas/StatusTypeCode"
          }
        },
        "type" : "object"
      },
      "StatusTypeCode" : {
        "enum" : [ "complete", "incomplete", "misinstalled", "undetected", "unset" ],
        "type" : "string"
      },
      "Storage" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "s3_source_bucket_url" : {
            "type" : "string"
          },
          "s3_source_bucket_name" : {
            "type" : "string"
          },
          "s3_hosting_bucket_name" : {
            "type" : "string"
          },
          "s3_bucket_region" : {
            "type" : "string"
          },
          "s3_region_code" : {
            "type" : "string"
          },
          "cf_distribution_id" : {
            "type" : "string"
          },
          "cf_hostname" : {
            "type" : "string"
          },
          "token" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        }
      },
      "StorageAttribute" : {
        "properties" : {
          "storage" : {
            "$ref" : "#/components/schemas/Storage"
          }
        },
        "type" : "object"
      },
      "StorageItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Storage"
          }
        },
        "type" : "object"
      },
      "StorageList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/StorageItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "StorageListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/StorageListResponse_allOf"
        } ]
      },
      "StorageResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/StorageResponse_allOf"
        } ]
      },
      "Subscription" : {
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "model_type" : {
            "type" : "string"
          },
          "model_id" : {
            "type" : "string"
          },
          "subscribed_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SubscriptionList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/Subscription"
            },
            "type" : "array"
          }
        },
        "required" : [ "data" ],
        "type" : "object"
      },
      "SubscriptionListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/SubscriptionListResponse_allOf"
        } ]
      },
      "SubscriptionResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/SubscriptionResponse_allOf"
        } ]
      },
      "SurveyPointRequest" : {
        "properties" : {
          "survey_point" : {
            "type" : "object"
          },
          "use_survey_point" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "SystemEntitiesKind" : {
        "enum" : [ "system_defined", "normal" ],
        "type" : "string"
      },
      "SystemEntitiesKindAttribute" : {
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/SystemEntitiesKind"
          }
        },
        "type" : "object"
      },
      "TargetGroup" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TargetUser" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Task" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Task_allOf"
        }, {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        } ]
      },
      "TaskItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Task"
          }
        },
        "type" : "object"
      },
      "TaskList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/TaskItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "TaskListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/TaskListResponse_allOf"
        } ]
      },
      "TaskResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/TaskResponse_allOf"
        } ]
      },
      "TaskState" : {
        "enum" : [ "active", "inactive" ],
        "type" : "string"
      },
      "TaskValidationRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateTaskRequest"
        } ]
      },
      "TaskValidationResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/TaskValidationResponse_allOf"
        } ]
      },
      "Team" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.Team"
        }, {
          "$ref" : "#/components/schemas/LogoUrlsAttribute"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/BillableAttribute"
        }, {
          "$ref" : "#/components/schemas/SecurityAttribute"
        }, {
          "$ref" : "#/components/schemas/TeamBimPackAttribute"
        }, {
          "$ref" : "#/components/schemas/CertifiedAttribute"
        }, {
          "$ref" : "#/components/schemas/LockStateAttribute"
        }, {
          "$ref" : "#/components/schemas/LicenseTypeAttribute"
        }, {
          "$ref" : "#/components/schemas/SignInMethodAttribute"
        }, {
          "$ref" : "#/components/schemas/CustomerSuccessManagersAttribute"
        }, {
          "$ref" : "#/components/schemas/TeamEntityUpdatesAttribute"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/PrimaryCsmAttribute"
        }, {
          "$ref" : "#/components/schemas/SecondaryCsmAttribute"
        }, {
          "$ref" : "#/components/schemas/ReviewPublicAccessEnabledAtAttribute"
        }, {
          "$ref" : "#/components/schemas/AccessibleEditorMenuAttribute"
        }, {
          "$ref" : "#/components/schemas/TimezoneOffsetAttribute"
        }, {
          "$ref" : "#/components/schemas/LocaleAttribute"
        }, {
          "$ref" : "#/components/schemas/ReferencePlanUploadMethodAttribute"
        }, {
          "$ref" : "#/components/schemas/TeamArchiveRetentionAttribute"
        }, {
          "$ref" : "#/components/schemas/CupixResourceNumberAttribute"
        } ]
      },
      "TeamArchiveRetentionAttribute" : {
        "properties" : {
          "archive_retention_months" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "TeamBimPackAttribute" : {
        "properties" : {
          "available_bim_pack_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "total_bim_pack_count" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "TeamEntityUpdates" : {
        "properties" : {
          "form_design" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          },
          "form_field" : {
            "$ref" : "#/components/schemas/EntityUpdatesValue"
          }
        },
        "type" : "object"
      },
      "TeamEntityUpdatesAttribute" : {
        "properties" : {
          "entity_updates" : {
            "$ref" : "#/components/schemas/TeamEntityUpdates"
          }
        },
        "type" : "object"
      },
      "TeamInvitationRequest" : {
        "properties" : {
          "user_emails" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "user_emails" ],
        "type" : "object"
      },
      "TeamInvitationSentResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/TeamInvitationSentResponse_allOf"
        } ]
      },
      "TeamInvitationSignupRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.SignupRequest"
        }, {
          "$ref" : "#/components/schemas/TeamInvitationSignupRequest_allOf"
        } ]
      },
      "TeamItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Team"
          }
        },
        "type" : "object"
      },
      "TeamList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/TeamItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "TeamListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/TeamListResponse_allOf"
        } ]
      },
      "TeamRequestEmailConfirmationRequest" : {
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "team_domain" : {
            "type" : "string"
          }
        },
        "required" : [ "email", "team_domain" ],
        "type" : "object"
      },
      "TeamResponse" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/TeamResponse_result"
          }
        },
        "type" : "object"
      },
      "TeamSelfSignupRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.SignupRequest"
        }, {
          "$ref" : "#/components/schemas/TeamSelfSignupRequest_allOf"
        } ]
      },
      "TeamSignupRequest" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TeamSelfSignupRequest"
        }, {
          "$ref" : "#/components/schemas/TeamInvitationSignupRequest"
        } ]
      },
      "TeamState" : {
        "description" : "Team state",
        "enum" : [ "created", "initializing", "active", "expired" ],
        "type" : "string"
      },
      "Teleport" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Teleport_allOf"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "TeleportItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Teleport"
          }
        },
        "type" : "object"
      },
      "TeleportList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/TeleportItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "TeleportListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/TeleportListResponse_allOf"
        } ]
      },
      "TeleportResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/TeleportResponse_allOf"
        } ]
      },
      "Texture" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Texture_allOf"
        }, {
          "$ref" : "#/components/schemas/TextureStateAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/SystemEntitiesKindAttribute"
        } ]
      },
      "TextureItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Texture"
          }
        },
        "type" : "object"
      },
      "TextureList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/TextureItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "TextureListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/TextureListResponse_allOf"
        } ]
      },
      "TextureResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/TextureResponse_allOf"
        } ]
      },
      "TextureResult" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "order" : {
            "format" : "int64",
            "type" : "integer"
          },
          "score" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "TextureState" : {
        "enum" : [ "untrained", "training", "trained" ],
        "type" : "string"
      },
      "TextureStateAttribute" : {
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/TextureState"
          }
        },
        "type" : "object"
      },
      "ThumbnailUrls" : {
        "description" : "Thumbnail URLs",
        "properties" : {
          "thumb" : {
            "type" : "string"
          },
          "original" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ThumbnailUrlsAttribute" : {
        "properties" : {
          "thumbnail_urls" : {
            "$ref" : "#/components/schemas/ThumbnailUrls"
          }
        },
        "type" : "object"
      },
      "Tile" : {
        "properties" : {
          "base" : {
            "type" : "string"
          },
          "items" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "TimezoneOffsetAttribute" : {
        "properties" : {
          "timezone_offset" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "TrackingPlan" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrackingPlan_allOf"
        }, {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        } ]
      },
      "TrackingPlanItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/TrackingPlan"
          }
        },
        "type" : "object"
      },
      "TrackingPlanList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/TrackingPlanItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "TrackingPlanListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/TrackingPlanListResponse_allOf"
        } ]
      },
      "TrackingPlanResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/TrackingPlanResponse_allOf"
        } ]
      },
      "TranscriptLanguageAttribute" : {
        "properties" : {
          "transcript_language" : {
            "$ref" : "#/components/schemas/LanguageCode"
          }
        },
        "type" : "object"
      },
      "TranscriptionAttribute" : {
        "properties" : {
          "transcript_state" : {
            "enum" : [ "none", "uploaded", "processing", "error", "done" ],
            "type" : "string"
          },
          "transcript_state_updated_at" : {
            "type" : "string"
          },
          "transcript_state_reason" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TransformMatrixAttribute" : {
        "properties" : {
          "tm" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "wtm" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Transformation" : {
        "description" : "Transformation",
        "properties" : {
          "tm" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "version" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Trash" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "key" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/Trash_user"
          },
          "trashed_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "has_child" : {
            "type" : "boolean"
          },
          "cycle_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "counts_info" : {
            "$ref" : "#/components/schemas/TrashCountsInfo"
          },
          "parents_info" : {
            "$ref" : "#/components/schemas/TrashParentsInfo"
          }
        },
        "type" : "object"
      },
      "TrashCountsInfo" : {
        "properties" : {
          "facilities_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bims_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "records_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "reviews_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "levels_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "captures_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "reports_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "pointclouds_count" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "TrashItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Trash"
          }
        },
        "type" : "object"
      },
      "TrashList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/TrashItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "type" : "object"
      },
      "TrashListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/TrashListResponse_allOf"
        } ]
      },
      "TrashParentsInfo" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrashParentsInfo_allOf"
        } ]
      },
      "TrialState" : {
        "description" : "Trial state",
        "enum" : [ "none", "active", "expired" ],
        "type" : "string"
      },
      "TrialableAttribute" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrialableAttribute_allOf"
        } ]
      },
      "UUID" : {
        "description" : "UUID strings",
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "ifc_guid" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Unit" : {
        "description" : "Unit",
        "properties" : {
          "length" : {
            "enum" : [ "mm", "cm", "m", "ft", "in", "ft' in\"", "ftin" ],
            "type" : "string"
          },
          "area" : {
            "enum" : [ "sqmm", "sqcm", "sqm", "sqft", "sqin" ],
            "type" : "string"
          },
          "volume" : {
            "enum" : [ "m3", "cy", "ft3" ],
            "type" : "string"
          },
          "count" : {
            "enum" : [ "ea" ],
            "type" : "string"
          },
          "weight" : {
            "enum" : [ "g", "kg", "lb", "t" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UnitAttribute" : {
        "properties" : {
          "unit" : {
            "$ref" : "#/components/schemas/Unit"
          }
        },
        "type" : "object"
      },
      "UpdateActivityBulkItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BulkActivityItemRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateActivityRequest"
        } ]
      },
      "UpdateActivityBulkRequest" : {
        "properties" : {
          "facility_key" : {
            "type" : "string"
          },
          "update_activities" : {
            "items" : {
              "$ref" : "#/components/schemas/UpdateActivityBulkItemRequest"
            },
            "type" : "array"
          },
          "delete_activity_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "required" : [ "facility_key" ],
        "type" : "object"
      },
      "UpdateActivityRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateActivityRequest_allOf"
        } ]
      },
      "UpdateAerialMapRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateAerialPhotoRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "UpdateAerialPhotoRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateAerialPhotoRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "UpdateAllowedAnnotationKindRequest" : {
        "properties" : {
          "allowed_annotation_kind" : {
            "$ref" : "#/components/schemas/AllowedAnnotationKind"
          }
        },
        "type" : "object"
      },
      "UpdateAnnotationAssociationRequest" : {
        "properties" : {
          "asset_keys" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "asset_keys" ],
        "type" : "object"
      },
      "UpdateAnnotationBadgeAssociationRequest" : {
        "properties" : {
          "badge_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "required" : [ "badge_ids" ],
        "type" : "object"
      },
      "UpdateAnnotationLayerRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateAnnotationLayerRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateAllowedAnnotationKindRequest"
        } ]
      },
      "UpdateAnnotationRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateAnnotationRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/Bim360AnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/AccAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/ProcoreAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/PlangridAnnotationAttributes"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        }, {
          "$ref" : "#/components/schemas/AnnotatableRequest"
        } ]
      },
      "UpdateAreaRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateAreaRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        } ]
      },
      "UpdateAssetBadgeAssociationRequest" : {
        "properties" : {
          "badge_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "required" : [ "badge_ids" ],
        "type" : "object"
      },
      "UpdateAssetRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateAssetRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/TranscriptionAttribute"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        } ]
      },
      "UpdateAvailabilityStateRequest" : {
        "properties" : {
          "availability_state" : {
            "$ref" : "#/components/schemas/AvailabilityState"
          }
        },
        "type" : "object"
      },
      "UpdateAvatarRequest" : {
        "properties" : {
          "avatar" : {
            "format" : "binary",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateBadgeRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateBadgeRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "UpdateBillingAccountAttribute" : {
        "properties" : {
          "billing_account_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "UpdateBillingAccountRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateBillingAccountRequest_allOf"
        } ]
      },
      "UpdateBimRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateBimRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateBimStateRequest"
        }, {
          "$ref" : "#/components/schemas/SurveyPointRequest"
        }, {
          "$ref" : "#/components/schemas/BimForgeAttribute"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        } ]
      },
      "UpdateBimRevisionForgeInformationRequest" : {
        "properties" : {
          "forge_urn" : {
            "type" : "string"
          },
          "forge_format_type" : {
            "type" : "string"
          },
          "forge_region" : {
            "type" : "string"
          },
          "forge_translated_uploaded_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateBimRevisionRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateBimRevisionRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateBimRevisionStateRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateBimRevisionForgeInformationRequest"
        }, {
          "$ref" : "#/components/schemas/SurveyPointRequest"
        }, {
          "$ref" : "#/components/schemas/ImportedBimVersionAttribute"
        } ]
      },
      "UpdateBimRevisionStateRequest" : {
        "properties" : {
          "forge_state" : {
            "enum" : [ "translating", "translated", "error" ],
            "type" : "string"
          },
          "room_state" : {
            "enum" : [ "extracting", "extracted", "error" ],
            "type" : "string"
          },
          "mesh_state" : {
            "enum" : [ "extracting", "extracted", "error" ],
            "type" : "string"
          },
          "bim_comparison_state" : {
            "enum" : [ "comparing", "compared", "error" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateBimStateRequest" : {
        "properties" : {
          "forge_state" : {
            "enum" : [ "started", "translating", "translated", "error" ],
            "type" : "string"
          },
          "room_state" : {
            "enum" : [ "extracting", "extracted", "error" ],
            "type" : "string"
          },
          "mesh_state" : {
            "enum" : [ "extracting", "extracted", "error" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateBookmarkRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateBookmarkRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "UpdateCaptureEditingState" : {
        "description" : "Capture Editing state",
        "enum" : [ "ready", "holding", "escalated", "editing", "in_review", "done", "re_ready", "stopped" ],
        "type" : "string"
      },
      "UpdateCaptureRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateCaptureRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateTagsRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        }, {
          "$ref" : "#/components/schemas/CaptureVersionsRequest"
        }, {
          "$ref" : "#/components/schemas/CaptureTypeRequest"
        }, {
          "$ref" : "#/components/schemas/CameraRequest"
        }, {
          "$ref" : "#/components/schemas/FloorplanRequest"
        }, {
          "$ref" : "#/components/schemas/WarningAttribute"
        }, {
          "$ref" : "#/components/schemas/DeviationResultAttribute"
        }, {
          "$ref" : "#/components/schemas/CaptureVideoMeta"
        }, {
          "$ref" : "#/components/schemas/ExpectedQualityAttribute"
        }, {
          "$ref" : "#/components/schemas/EditingDifficultyScoreAttribute"
        }, {
          "$ref" : "#/components/schemas/RefinementAttribute"
        } ]
      },
      "UpdateCategoryBulkItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BulkActivityItemRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateCategoryRequest"
        } ]
      },
      "UpdateCategoryBulkRequest" : {
        "properties" : {
          "update_categories" : {
            "items" : {
              "$ref" : "#/components/schemas/UpdateCategoryBulkItemRequest"
            },
            "type" : "array"
          },
          "delete_category_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UpdateCategoryRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateCategoryRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/ClearFieldsAttributes"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        } ]
      },
      "UpdateClusterParentRequest" : {
        "properties" : {
          "cluster_id" : {
            "description" : "Cluster ID",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "UpdateClusterRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateClusterRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        } ]
      },
      "UpdateCommentRequest" : {
        "properties" : {
          "content" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateConnectRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateAerialPhotoRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MatterportConnect"
        }, {
          "$ref" : "#/components/schemas/ItwinConnect"
        }, {
          "$ref" : "#/components/schemas/ArcgisConnect"
        }, {
          "$ref" : "#/components/schemas/CesiumConnect"
        }, {
          "$ref" : "#/components/schemas/TransformMatrixAttribute"
        } ]
      },
      "UpdateCurrentUserRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateCurrentUserRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateAvatarRequest"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        }, {
          "$ref" : "#/components/schemas/LocaleAttribute"
        }, {
          "$ref" : "#/components/schemas/TranscriptLanguageAttribute"
        } ]
      },
      "UpdateCustomPropertyRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateCustomPropertyRequest_allOf"
        } ]
      },
      "UpdateDeviationRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateDeviationRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateDeviationStatRequest"
        } ]
      },
      "UpdateDeviationStatRequest" : {
        "properties" : {
          "bim_points_validator_started_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "bim_points_validator_finished_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "bim_texture_validator_started_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "bim_texture_validator_finished_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "stat_size_panos" : {
            "type" : "number"
          },
          "stat_size_pointclouds" : {
            "type" : "number"
          },
          "total_progresses" : {
            "type" : "number"
          },
          "processed_progresses" : {
            "type" : "number"
          },
          "created_record_statuses" : {
            "type" : "number"
          },
          "updated_record_statuses" : {
            "type" : "number"
          },
          "bim_points_validator_version" : {
            "type" : "string"
          },
          "bim_texture_validator_version" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateEditingEntityRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateEditingEntityRequest_allOf"
        } ]
      },
      "UpdateEditingEntityState" : {
        "description" : "Editing Entity state",
        "enum" : [ "ready", "escalated", "holding", "error", "done" ],
        "type" : "string"
      },
      "UpdateEditingRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateEditingRequest_allOf"
        } ]
      },
      "UpdateEditingStatAttribute" : {
        "properties" : {
          "total_entities" : {
            "format" : "int64",
            "type" : "integer"
          },
          "total_changed" : {
            "format" : "int64",
            "type" : "integer"
          },
          "total_reviewed" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "UpdateEditingSupportRequest" : {
        "properties" : {
          "use_editing_support" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "UpdateElementRecordRequest" : {
        "properties" : {
          "element" : {
            "$ref" : "#/components/schemas/Element"
          },
          "main_category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "phase" : {
            "$ref" : "#/components/schemas/Phase"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "workarea" : {
            "$ref" : "#/components/schemas/Workarea"
          },
          "task" : {
            "$ref" : "#/components/schemas/Task"
          },
          "vendor" : {
            "$ref" : "#/components/schemas/Group"
          },
          "activity_name" : {
            "type" : "string"
          },
          "activity_key" : {
            "type" : "string"
          },
          "start_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "end_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "phase_metrics" : {
            "items" : {
              "$ref" : "#/components/schemas/PhaseMetric"
            },
            "type" : "array"
          },
          "completed_at" : {
            "format" : "date-time",
            "nullable" : true,
            "type" : "string"
          },
          "incompleted_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "misinstalled_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "undetected_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "volume" : {
            "format" : "float",
            "type" : "number"
          },
          "area" : {
            "format" : "float",
            "type" : "number"
          },
          "length" : {
            "format" : "float",
            "type" : "number"
          },
          "weight" : {
            "format" : "float",
            "type" : "number"
          },
          "cost" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "UpdateElementRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ElementQuantityAttribute"
        }, {
          "$ref" : "#/components/schemas/CreateElementRequest_allOf"
        } ]
      },
      "UpdateElementTraceRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateElementTraceRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/ClearFieldsAttributes"
        } ]
      },
      "UpdateFacilityRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateFacilityRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateTagsRequest"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateLogoRequest"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        }, {
          "$ref" : "#/components/schemas/UpdateStorageRequest"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        }, {
          "$ref" : "#/components/schemas/ConstantableReqeust"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        }, {
          "$ref" : "#/components/schemas/FacilitySizeUnitAttribute"
        } ]
      },
      "UpdateFieldRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateFieldRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        } ]
      },
      "UpdateFloorplanRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateFloorplanRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        }, {
          "$ref" : "#/components/schemas/FloorplanGeoTiffAttribute"
        } ]
      },
      "UpdateFloorplanSourceRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateFloorplanSourceRequest_allOf"
        } ]
      },
      "UpdateFormDesignBulkItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BulkActivityItemRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateFormDesignRequest"
        } ]
      },
      "UpdateFormDesignBulkRequest" : {
        "properties" : {
          "update_form_designs" : {
            "items" : {
              "$ref" : "#/components/schemas/UpdateFormDesignBulkItemRequest"
            },
            "type" : "array"
          },
          "delete_form_design_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UpdateFormDesignRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateFormDesignRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        } ]
      },
      "UpdateFormFieldBulkItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BulkActivityItemRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateFormFieldRequest"
        } ]
      },
      "UpdateFormFieldBulkRequest" : {
        "properties" : {
          "update_form_fields" : {
            "items" : {
              "$ref" : "#/components/schemas/UpdateFormFieldBulkItemRequest"
            },
            "type" : "array"
          },
          "delete_form_field_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UpdateFormFieldRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateFormFieldRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        } ]
      },
      "UpdateGroupRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateAerialPhotoRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/SignInMethodRequest"
        } ]
      },
      "UpdateGroupWhitelistRequest" : {
        "properties" : {
          "email_domains" : {
            "items" : {
              "description" : "Email Domain ('*' for all)",
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "user_ids" ],
        "type" : "object"
      },
      "UpdateIntegrationRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "acc" : {
            "$ref" : "#/components/schemas/AccIntegration"
          },
          "bim360" : {
            "$ref" : "#/components/schemas/Bim360Integration"
          },
          "procore" : {
            "$ref" : "#/components/schemas/ProcoreIntegration"
          },
          "plangrid" : {
            "$ref" : "#/components/schemas/PlangridIntegration"
          },
          "region" : {
            "$ref" : "#/components/schemas/IntegrationRegionEnum"
          }
        },
        "type" : "object"
      },
      "UpdateJobRequest" : {
        "properties" : {
          "progress" : {
            "format" : "float",
            "type" : "number"
          },
          "processing_status" : {
            "type" : "string"
          },
          "state" : {
            "enum" : [ "pending", "starting", "running", "stopping", "stopped" ],
            "type" : "string"
          },
          "error_code" : {
            "type" : "string"
          },
          "task_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateLevelRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateLevelRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        } ]
      },
      "UpdateLogoRequest" : {
        "properties" : {
          "logo" : {
            "format" : "binary",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateMeasurementRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateAerialPhotoRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "UpdateMeshRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateMeshRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        }, {
          "$ref" : "#/components/schemas/ConstantableReqeust"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        } ]
      },
      "UpdateMetricRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateMetricRequest_allOf"
        } ]
      },
      "UpdatePanoRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdatePanoRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateTagsRequest"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        }, {
          "$ref" : "#/components/schemas/UpdatePanoRevisionRequest"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        }, {
          "$ref" : "#/components/schemas/ConstantableReqeust"
        } ]
      },
      "UpdatePanoRevisionRequest" : {
        "properties" : {
          "revision_type" : {
            "$ref" : "#/components/schemas/PanoRevisionType"
          }
        },
        "type" : "object"
      },
      "UpdatePanoStitchRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdatePanoStitchRequest_allOf"
        } ]
      },
      "UpdatePhaseMetricRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdatePhaseMetricRequest_allOf"
        } ]
      },
      "UpdatePhaseRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdatePhaseRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        } ]
      },
      "UpdatePointcloudRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdatePointcloudRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/GeoreferenceReqeust"
        }, {
          "$ref" : "#/components/schemas/ConstantableReqeust"
        }, {
          "$ref" : "#/components/schemas/DeviationResultAttribute"
        }, {
          "$ref" : "#/components/schemas/PointsCountAttribute"
        }, {
          "$ref" : "#/components/schemas/AnchorAttribute"
        } ]
      },
      "UpdatePositionRequest" : {
        "properties" : {
          "position" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "UpdateProgressBulkItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BulkActivityItemRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateProgressRequest"
        } ]
      },
      "UpdateProgressBulkRequest" : {
        "properties" : {
          "update_progresses" : {
            "items" : {
              "$ref" : "#/components/schemas/UpdateProgressBulkItemRequest"
            },
            "type" : "array"
          },
          "delete_progress_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UpdateProgressRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateProgressRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/ClearFieldsAttributes"
        }, {
          "$ref" : "#/components/schemas/ProgressSiteInsightAttribute"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        } ]
      },
      "UpdateRecordRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateRecordRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        } ]
      },
      "UpdateRecordStatusBulkItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BulkActivityItemRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateRecordStatusRequest"
        } ]
      },
      "UpdateRecordStatusBulkRequest" : {
        "properties" : {
          "update_record_statuses" : {
            "items" : {
              "$ref" : "#/components/schemas/UpdateRecordStatusBulkItemRequest"
            },
            "type" : "array"
          },
          "delete_record_status_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UpdateRecordStatusRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateRecordStatusRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/ClearFieldsAttributes"
        }, {
          "$ref" : "#/components/schemas/EstimatedStatusDetailsAttribute"
        } ]
      },
      "UpdateReferenceRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "global" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "UpdateReferenceSourcesRequest" : {
        "properties" : {
          "pano_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "capture_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "pointcloud_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "mesh_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "floorplan_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "bim_ids" : {
            "$ref" : "#/components/schemas/BimIdsAttribute"
          }
        },
        "type" : "object"
      },
      "UpdateReportRequest" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "$ref" : "#/components/schemas/ReportKind"
          },
          "form_design_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "kind", "name" ],
        "type" : "object"
      },
      "UpdateReviewByRuleRequest" : {
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/ReviewerState"
          },
          "comment" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateReviewRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateReviewRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        } ]
      },
      "UpdateReviewerStateRequest" : {
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/ReviewerState"
          }
        },
        "type" : "object"
      },
      "UpdateRoomRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateRoomRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/ElementIdAttributeOnRequest"
        } ]
      },
      "UpdateSiteinsightsConfigRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateSiteinsightsConfigRequest_allOf"
        } ]
      },
      "UpdateSketchRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateSketchRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        } ]
      },
      "UpdateStatusRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateStatusRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/StatusKindAttribute"
        }, {
          "$ref" : "#/components/schemas/StatusTypeCode"
        } ]
      },
      "UpdateStorageRequest" : {
        "properties" : {
          "storage_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "UpdateTagsRequest" : {
        "properties" : {
          "tags" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UpdateTaskRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateTaskRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "UpdateTeamRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateTeamRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateLogoRequest"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/UpdateBillingAccountAttribute"
        }, {
          "$ref" : "#/components/schemas/UpdateEditingSupportRequest"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        }, {
          "$ref" : "#/components/schemas/UpdateStorageRequest"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        }, {
          "$ref" : "#/components/schemas/LocaleAttribute"
        }, {
          "$ref" : "#/components/schemas/ReferencePlanUploadMethodAttribute"
        } ]
      },
      "UpdateTeleportRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateTeleportRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "UpdateTextureRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateTextureRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/TextureStateAttribute"
        } ]
      },
      "UpdateThumbnailRequest" : {
        "properties" : {
          "thumbnail" : {
            "format" : "binary",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateTrackingPlanRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateTrackingPlanRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/MetaRequest"
        } ]
      },
      "UpdateUUIDRequest" : {
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "ifc_guid" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateUserPreferenceRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateUserPreferenceRequest_allOf"
        } ]
      },
      "UpdateUserRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateUserRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/TranscriptLanguageAttribute"
        } ]
      },
      "UpdateVideoRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateVideoRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/UpdateUUIDRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateThumbnailRequest"
        } ]
      },
      "UpdateWorkItemRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateWorkItemRequest_allOf"
        } ]
      },
      "UpdateWorkareaGroupRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreateAerialPhotoRequest_allOf"
        } ]
      },
      "UpdateWorkareaRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateWorkareaRequest_allOf"
        } ]
      },
      "UpdateWorkflowRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateWorkflowRequest_allOf"
        } ]
      },
      "UpdateWorkspaceRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateWorkspaceRequest_allOf"
        }, {
          "$ref" : "#/components/schemas/LocationRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateLogoRequest"
        }, {
          "$ref" : "#/components/schemas/UpdateBillingAccountAttribute"
        }, {
          "$ref" : "#/components/schemas/UpdateStorageRequest"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        } ]
      },
      "UploadCredentialResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/UploadCredentialResponse_allOf"
        } ]
      },
      "UploadCredentials" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AwsCredentials"
        }, {
          "$ref" : "#/components/schemas/UploadCredentials_allOf"
        } ]
      },
      "UploadPlatform" : {
        "enum" : [ "web", "app", "cloud_connect" ],
        "type" : "string"
      },
      "UploadState" : {
        "enum" : [ "upload_ready", "upload_done", "pano_uploading", "invalid" ],
        "type" : "string"
      },
      "User" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.User"
        }, {
          "$ref" : "#/components/schemas/admin.User"
        }, {
          "$ref" : "#/components/schemas/User_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/CertifiedAttribute"
        }, {
          "$ref" : "#/components/schemas/UnitAttribute"
        }, {
          "$ref" : "#/components/schemas/TranscriptLanguageAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        }, {
          "$ref" : "#/components/schemas/MfaAttribute"
        }, {
          "$ref" : "#/components/schemas/EditorLevelAttribute"
        } ]
      },
      "UserAutocomplete" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserAutocomplete_user"
          }
        },
        "type" : "object"
      },
      "UserGroupAutocompleteItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/UserGroupAutocompleteItem_attributes"
          }
        },
        "type" : "object"
      },
      "UserGroupAutocompleteList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/UserGroupAutocompleteItem"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UserGroupAutocompleteResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/UserGroupAutocompleteResponse_allOf"
        } ]
      },
      "UserItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "type" : "object"
      },
      "UserList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/UserItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "type" : "object"
      },
      "UserListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/UserListResponse_allOf"
        } ]
      },
      "UserMember" : {
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "team_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "workspace_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "facility_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "review_permission" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserMember_user"
          },
          "inherited_from" : {
            "$ref" : "#/components/schemas/InheritedFrom"
          }
        },
        "type" : "object"
      },
      "UserPreference" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "category" : {
            "type" : "string"
          },
          "activate" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "UserPreferenceList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/UserPreference"
            },
            "type" : "array"
          }
        },
        "required" : [ "data" ],
        "type" : "object"
      },
      "UserPreferenceListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/UserPreferenceListResponse_allOf"
        } ]
      },
      "UserPreferenceResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/UserPreferenceResponse_allOf"
        } ]
      },
      "UserResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/UserResponse_allOf"
        } ]
      },
      "Video" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/Video_allOf"
        }, {
          "$ref" : "#/components/schemas/FilesizeAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CameraAttribute"
        }, {
          "$ref" : "#/components/schemas/ThumbnailUrlsAttribute"
        } ]
      },
      "VideoItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Video"
          }
        },
        "type" : "object"
      },
      "VideoList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/VideoItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "VideoListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/VideoListResponse_allOf"
        } ]
      },
      "VideoMaterialAttribute" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "upload_url" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "VideoMeta" : {
        "properties" : {
          "version" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "VideoResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/VideoResponse_allOf"
        } ]
      },
      "Viewpoint" : {
        "properties" : {
          "ver" : {
            "type" : "integer"
          },
          "record_id" : {
            "type" : "integer"
          },
          "viewpoint" : {
            "$ref" : "#/components/schemas/Viewpoint_viewpoint"
          }
        },
        "type" : "object"
      },
      "VoxelState" : {
        "enum" : [ "aggregating", "error", "done" ],
        "type" : "string"
      },
      "Voxels" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "voxel_state" : {
            "type" : "string"
          },
          "voxel_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "voxels_result_urls" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "VoxelsItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Voxels"
          }
        },
        "type" : "object"
      },
      "VoxelsResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/VoxelsResponse_allOf"
        } ]
      },
      "WarningAttribute" : {
        "properties" : {
          "warnings" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "WorkAction" : {
        "enum" : [ "siteinsights_qa", "capture_qa", "pointcloud_qa" ],
        "type" : "string"
      },
      "WorkActionAttribute" : {
        "properties" : {
          "work_action" : {
            "$ref" : "#/components/schemas/WorkAction"
          }
        },
        "type" : "object"
      },
      "WorkItem" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/WorkItem_allOf"
        }, {
          "$ref" : "#/components/schemas/WorkActionAttribute"
        } ]
      },
      "WorkItemEntity" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "WorkItemItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/WorkItem"
          }
        },
        "type" : "object"
      },
      "WorkItemList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/WorkItemItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "WorkItemListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/WorkItemListResponse_allOf"
        } ]
      },
      "WorkItemResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/WorkItemResponse_allOf"
        } ]
      },
      "Workarea" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Workarea_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "WorkareaGroup" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/WorkareaGroup_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        } ]
      },
      "WorkareaGroupItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/WorkareaGroup"
          }
        },
        "type" : "object"
      },
      "WorkareaGroupList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/WorkareaGroupItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "WorkareaGroupListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/WorkareaGroupListResponse_allOf"
        } ]
      },
      "WorkareaGroupResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/WorkareaGroupResponse_allOf"
        } ]
      },
      "WorkareaItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Workarea"
          }
        },
        "type" : "object"
      },
      "WorkareaList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/WorkareaItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "WorkareaListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/WorkareaListResponse_allOf"
        } ]
      },
      "WorkareaResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/WorkareaResponse_allOf"
        } ]
      },
      "Workflow" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Workflow_allOf"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/SystemEntitiesKindAttribute"
        } ]
      },
      "WorkflowItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Workflow"
          }
        },
        "type" : "object"
      },
      "WorkflowList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/WorkflowItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "WorkflowListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/WorkflowListResponse_allOf"
        } ]
      },
      "WorkflowResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/WorkflowResponse_allOf"
        } ]
      },
      "WorkflowTextureIdItem" : {
        "properties" : {
          "workflow_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "texture_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "WorkflowTextureIdList" : {
        "items" : {
          "$ref" : "#/components/schemas/WorkflowTextureIdItem"
        },
        "type" : "array"
      },
      "WorkflowTextureIdListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/WorkflowTextureIdListResponse_allOf"
        } ]
      },
      "WorkflowType" : {
        "enum" : [ "list", "number", "combined", "whole_installation", "partial_installation", "template" ],
        "type" : "string"
      },
      "Workspace" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Workspace_allOf"
        }, {
          "$ref" : "#/components/schemas/ContentUrlType"
        }, {
          "$ref" : "#/components/schemas/PermissionAttribute"
        }, {
          "$ref" : "#/components/schemas/LastUpdatedUserAttribute"
        }, {
          "$ref" : "#/components/schemas/FirebaseAttribute"
        }, {
          "$ref" : "#/components/schemas/CyclableAttribute"
        }, {
          "$ref" : "#/components/schemas/BillableAttribute"
        }, {
          "$ref" : "#/components/schemas/StorageAttribute"
        }, {
          "$ref" : "#/components/schemas/LockStateAttribute"
        }, {
          "$ref" : "#/components/schemas/SalesforceAttribute"
        }, {
          "$ref" : "#/components/schemas/OptOutAttribute"
        } ]
      },
      "WorkspaceItem" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/Workspace"
          }
        },
        "type" : "object"
      },
      "WorkspaceList" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/WorkspaceItem"
            },
            "type" : "array"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "data", "pagination" ],
        "type" : "object"
      },
      "WorkspaceListResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/WorkspaceListResponse_allOf"
        } ]
      },
      "WorkspaceRequestEmailConfirmationRequest" : {
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "workspace_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "email", "workspace_id" ],
        "type" : "object"
      },
      "WorkspaceResponse" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Response"
        }, {
          "$ref" : "#/components/schemas/WorkspaceResponse_allOf"
        } ]
      },
      "WorkspaceSignupRequest" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/base.SignupRequest"
        }, {
          "$ref" : "#/components/schemas/WorkspaceSignupRequest_allOf"
        } ]
      },
      "admin.ReportTo" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "admin.SalesInfo" : {
        "properties" : {
          "firstname_ko" : {
            "type" : "string"
          },
          "lastname_ko" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "title_ko" : {
            "type" : "string"
          },
          "phone_office" : {
            "type" : "string"
          },
          "phone_mobile" : {
            "type" : "string"
          },
          "organization" : {
            "type" : "string"
          },
          "territory" : {
            "$ref" : "#/components/schemas/base.Territory"
          },
          "start_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "admin.User" : {
        "discriminator" : {
          "propertyName" : "AdminUserType"
        },
        "properties" : {
          "sales_info" : {
            "$ref" : "#/components/schemas/admin.SalesInfo"
          },
          "report_to" : {
            "$ref" : "#/components/schemas/admin.ReportTo"
          }
        },
        "type" : "object"
      },
      "base.Capture" : {
        "discriminator" : {
          "propertyName" : "baseCaptureType"
        },
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "editing_state" : {
            "$ref" : "#/components/schemas/CaptureEditingState"
          },
          "upload_state" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "panos_count" : {
            "type" : "integer"
          },
          "progress" : {
            "format" : "float",
            "type" : "number"
          },
          "skat_type" : {
            "$ref" : "#/components/schemas/CaptureSkatType"
          },
          "skat_compute_duration" : {
            "format" : "int64",
            "type" : "integer"
          },
          "error_code" : {
            "type" : "string"
          },
          "reconstruction_error_code" : {
            "type" : "string"
          },
          "refinement_error_code" : {
            "type" : "string"
          },
          "processing_status" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "base.Field" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/UUID"
        }, {
          "$ref" : "#/components/schemas/AerialPhoto_allOf_aerial_map"
        } ],
        "discriminator" : {
          "propertyName" : "baseField"
        }
      },
      "base.FieldItem" : {
        "discriminator" : {
          "propertyName" : "baseFieldItem"
        },
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "base.FieldList" : {
        "discriminator" : {
          "propertyName" : "baseFieldList"
        },
        "properties" : {
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          }
        },
        "required" : [ "pagination" ],
        "type" : "object"
      },
      "base.Group" : {
        "discriminator" : {
          "propertyName" : "baseGroupType"
        },
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "group_type" : {
            "$ref" : "#/components/schemas/GroupType"
          },
          "users_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "base.SignupRequest" : {
        "discriminator" : {
          "propertyName" : "baseSignupRequestType"
        },
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "password_confirmation" : {
            "type" : "string"
          }
        },
        "required" : [ "email", "firstname", "lastname" ],
        "type" : "object"
      },
      "base.StorageRequest" : {
        "properties" : {
          "s3_source_bucket_url" : {
            "type" : "string"
          },
          "s3_source_bucket_name" : {
            "type" : "string"
          },
          "s3_hosting_bucket_name" : {
            "type" : "string"
          },
          "s3_bucket_region" : {
            "type" : "string"
          },
          "s3_region_code" : {
            "type" : "string"
          },
          "cf_distribution_id" : {
            "type" : "string"
          },
          "cf_hostname" : {
            "type" : "string"
          },
          "token" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "base.Team" : {
        "discriminator" : {
          "propertyName" : "baseTeamType"
        },
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "$ref" : "#/components/schemas/TeamState"
          },
          "domain" : {
            "type" : "string"
          },
          "use_self_signup" : {
            "type" : "boolean"
          },
          "use_editing_support" : {
            "type" : "boolean"
          },
          "email_domain" : {
            "type" : "string"
          },
          "nadir_angle" : {
            "format" : "float",
            "type" : "number"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "deleted_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "workspaces_count" : {
            "format" : "int32",
            "type" : "integer"
          },
          "mfa_enabled" : {
            "type" : "boolean"
          },
          "facility_size" : {
            "format" : "float",
            "type" : "number"
          },
          "review_preview_capture_disabled_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "base.Territory" : {
        "discriminator" : {
          "propertyName" : "adminTerritoryType"
        },
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "base.User" : {
        "discriminator" : {
          "propertyName" : "baseUserType"
        },
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "email" : {
            "format" : "email",
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "locale" : {
            "$ref" : "#/components/schemas/Locale"
          },
          "api_token" : {
            "type" : "string"
          },
          "crn" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "element_bulk_element_request" : {
        "discriminator" : {
          "mapping" : {
            "create" : "#/components/schemas/BulkElementCreateRequest",
            "update" : "#/components/schemas/BulkElementUpdateRequest",
            "delete" : "#/components/schemas/BulkElementUpdateRequest"
          },
          "propertyName" : "bulk_action"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BulkElementCreateRequest"
        }, {
          "$ref" : "#/components/schemas/BulkElementUpdateRequest"
        } ]
      },
      "siteinsights_bulk_element_record_request" : {
        "discriminator" : {
          "mapping" : {
            "create" : "#/components/schemas/BulkElementRecordCreateRequest",
            "update" : "#/components/schemas/BulkElementRecordUpdateRequest"
          },
          "propertyName" : "bulk_action"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/BulkElementRecordCreateRequest"
        }, {
          "$ref" : "#/components/schemas/BulkElementRecordUpdateRequest"
        } ]
      },
      "Activity_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "activity_id" : {
            "type" : "string"
          },
          "activity_type" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "parent" : {
            "$ref" : "#/components/schemas/Activity"
          },
          "start_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "end_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ActivityListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ActivityList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ActivityResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ActivityItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ActivityResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ActivityResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AerialMap_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "pix4d_project_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AerialMapListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AerialMapList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AerialMapResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AerialMapItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AerialMapResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AerialMapResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AerialPhoto_allOf_aerial_map" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AerialPhoto_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "filesize" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          },
          "upload_url" : {
            "type" : "string"
          },
          "aerial_map" : {
            "$ref" : "#/components/schemas/AerialPhoto_allOf_aerial_map"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AerialPhotoListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AerialPhotoList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AerialPhotoResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AerialPhotoItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AerialPhotoResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AerialPhotoResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Annotation_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "state" : {
            "enum" : [ "open", "close" ],
            "type" : "string"
          },
          "review" : {
            "$ref" : "#/components/schemas/Review"
          },
          "form_design" : {
            "$ref" : "#/components/schemas/FormDesign"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "annotation_layer" : {
            "$ref" : "#/components/schemas/AnnotationLayer"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "attachments_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "annotatable" : {
            "$ref" : "#/components/schemas/Annotatable"
          },
          "parent" : {
            "$ref" : "#/components/schemas/Annotation"
          },
          "meta" : {
            "type" : "object"
          },
          "row_order" : {
            "format" : "int64",
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AnnotationLayer_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "allowed_annotation_kind" : {
            "$ref" : "#/components/schemas/AllowedAnnotationKind"
          },
          "meta" : {
            "type" : "object"
          },
          "row_order" : {
            "format" : "int64",
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AnnotationLayerListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AnnotationLayerList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AnnotationLayerResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AnnotationLayerItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AnnotationLayerResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AnnotationLayerResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AnnotationListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AnnotationList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AnnotationResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AnnotationItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AnnotationResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AnnotationResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Area_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "geojson" : {
            "type" : "object"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AreaListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AreaList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AreaResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AreaItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AreaResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AreaResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Asset_allOf" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "summary" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "asset_type" : {
            "$ref" : "#/components/schemas/AssetType"
          },
          "assetable" : {
            "$ref" : "#/components/schemas/Assetable"
          },
          "state" : {
            "$ref" : "#/components/schemas/AssetState"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "upload_url" : {
            "type" : "string"
          },
          "uuid" : {
            "format" : "uuid",
            "type" : "string"
          },
          "transcript_language" : {
            "type" : "string"
          },
          "child_assets" : {
            "items" : {
              "$ref" : "#/components/schemas/ChildAssetItem"
            },
            "type" : "array"
          },
          "badges" : {
            "items" : {
              "$ref" : "#/components/schemas/BadgeItem"
            },
            "type" : "array"
          },
          "annotations" : {
            "items" : {
              "$ref" : "#/components/schemas/AnnotationsItem"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AssetListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AssetList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AssetResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AssetItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AssetResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AssetResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Attachment_allOf" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "size" : {
            "type" : "number"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "upload_url" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AttachmentListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AttachmentList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AttachmentResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AttachmentItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AttachmentResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AttachmentResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AuthenticateResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/Authenticated"
          },
          "message" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AutodeskForgeTokenResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AutodeskForgeToken"
          }
        },
        "type" : "object",
        "example" : null
      },
      "AwsCredentialsResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/AwsCredentials"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Badge_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string"
          },
          "position" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BadgeListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/BadgeList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BadgeResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BadgeItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BadgeResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/BadgeResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BillableAttribute_allOf" : {
        "properties" : {
          "plan" : {
            "type" : "string"
          },
          "unlimited_capture_credit" : {
            "type" : "boolean"
          },
          "applied_billing_state" : {
            "$ref" : "#/components/schemas/BillingState"
          },
          "billing_state" : {
            "$ref" : "#/components/schemas/BillingState"
          },
          "billing_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "billing_started_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "billing_expires_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "billing_info" : {
            "$ref" : "#/components/schemas/BillingInfo"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BillingAccountListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/BillingAccountList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BillingAccountResponse_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BillingAccountItem"
          }
        },
        "type" : "object"
      },
      "Bim_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "resource_state" : {
            "type" : "string"
          },
          "forge_state" : {
            "type" : "string"
          },
          "room_state" : {
            "type" : "string"
          },
          "mesh_state" : {
            "type" : "string"
          },
          "error_code" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "meta" : {
            "type" : "object"
          },
          "upload_url" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "encoded_forge_urn" : {
            "type" : "string"
          },
          "forge_urn" : {
            "type" : "string"
          },
          "forge_region" : {
            "type" : "string"
          },
          "forge_format_type" : {
            "type" : "string"
          },
          "forge_workflow_id" : {
            "type" : "string"
          },
          "grid_system_state" : {
            "$ref" : "#/components/schemas/BimGridSystemState"
          },
          "grid_system_download_url" : {
            "type" : "string"
          },
          "grid_system_upload_url" : {
            "type" : "string"
          },
          "grid_system_enabled" : {
            "type" : "boolean"
          },
          "last_bim_revision" : {
            "$ref" : "#/components/schemas/BimRevision"
          },
          "use_survey_point" : {
            "type" : "boolean"
          },
          "survey_point" : {
            "type" : "object"
          },
          "project_base_point" : {
            "type" : "object"
          },
          "original_survey_point" : {
            "type" : "object"
          },
          "original_project_base_point" : {
            "type" : "object"
          },
          "bim_objects_url" : {
            "type" : "string"
          },
          "fresh_state" : {
            "type" : "string"
          },
          "fresh_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "siteinsights_entities_created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "default_3d_model" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BimListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/BimList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BimResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BimItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BimResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/BimResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BimRevision_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "forge_state" : {
            "type" : "string"
          },
          "room_state" : {
            "type" : "string"
          },
          "mesh_state" : {
            "type" : "string"
          },
          "bim_comparison_state" : {
            "type" : "string"
          },
          "bim_revision_state" : {
            "type" : "string"
          },
          "bim_revision_result_urls" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "error_code" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "forge_urn" : {
            "type" : "string"
          },
          "forge_region" : {
            "type" : "string"
          },
          "forge_format_type" : {
            "type" : "string"
          },
          "forge_workflow_id" : {
            "type" : "string"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "use_survey_point" : {
            "type" : "boolean"
          },
          "survey_point" : {
            "type" : "object"
          },
          "project_base_point" : {
            "type" : "object"
          },
          "original_survey_point" : {
            "type" : "object"
          },
          "original_project_base_point" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BimRevisionListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/BimRevisionList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BimRevisionResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BimRevisionItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BimRevisionResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/BimRevisionResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Bookmark_allOf" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "review" : {
            "$ref" : "#/components/schemas/Review"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "pano" : {
            "$ref" : "#/components/schemas/Pano"
          },
          "row_order" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bookmark_type" : {
            "enum" : [ "review", "siteinsights" ],
            "type" : "string"
          },
          "owner_type" : {
            "enum" : [ "user", "team" ],
            "type" : "string"
          },
          "position" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BookmarkListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/BookmarkList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BookmarkResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BookmarkItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BookmarkResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/BookmarkResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkActivityItemRequest_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkCategoryItemRequest_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "category_type" : {
            "$ref" : "#/components/schemas/CategoryType"
          },
          "parent_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkCreationResponse_allOf" : {
        "properties" : {
          "result" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkElementItemCreateRequest_allOf" : {
        "properties" : {
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkElementRecordItemUpdateRequest_allOf" : {
        "properties" : {
          "oid" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkPanoItemRequest_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "publish" : {
            "type" : "boolean"
          },
          "unpublish" : {
            "type" : "boolean"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkRecordStatusItemRequest_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "progress_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkResponse_allOf_items" : {
        "properties" : {
          "index" : {
            "type" : "integer"
          },
          "error_code" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkResponse_allOf" : {
        "properties" : {
          "result" : {
            "items" : {
              "format" : "int32",
              "type" : "integer"
            },
            "type" : "array"
          },
          "message" : {
            "type" : "object"
          },
          "items" : {
            "items" : {
              "$ref" : "#/components/schemas/BulkResponse_allOf_items"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkShareRequest_items_inner_allOf_model_id" : {
        "oneOf" : [ {
          "type" : "string"
        }, {
          "format" : "int64",
          "type" : "integer"
        } ]
      },
      "BulkShareRequest_items_inner_allOf" : {
        "properties" : {
          "model_id" : {
            "$ref" : "#/components/schemas/BulkShareRequest_items_inner_allOf_model_id"
          },
          "model_type" : {
            "type" : "string"
          }
        },
        "required" : [ "model_id", "model_type" ],
        "type" : "object"
      },
      "BulkShareRequest_items_inner" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BulkShareRequest_items_inner_allOf"
        }, {
          "$ref" : "#/components/schemas/ShareRequest"
        } ]
      },
      "BulkTaskItemRequest_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "uuid" : {
            "format" : "uuid",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkUpdatePanoItemRequest_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          },
          "publish" : {
            "type" : "boolean"
          },
          "unpublish" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "BulkWorkareaItemRequest_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "workarea_group_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Capture_allOf" : {
        "properties" : {
          "capture_mode" : {
            "type" : "string"
          },
          "manual_align_type" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "floorplan" : {
            "$ref" : "#/components/schemas/Floorplan"
          },
          "meta" : {
            "type" : "object"
          },
          "measure_ready_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "thumbnail_urls" : {
            "$ref" : "#/components/schemas/ThumbnailUrls"
          },
          "skat_version" : {
            "type" : "string"
          },
          "dnn_version" : {
            "type" : "string"
          },
          "agent_version" : {
            "type" : "string"
          },
          "maker_version" : {
            "type" : "string"
          },
          "densemapper_version" : {
            "type" : "string"
          },
          "invokable_state" : {
            "$ref" : "#/components/schemas/CaptureInvokableState"
          },
          "incomplete_reason" : {
            "type" : "string"
          },
          "voxel_state" : {
            "type" : "string"
          },
          "voxel_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "voxels_result_urls" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "dollhouses_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "zip_state" : {
            "type" : "string"
          },
          "process_output_upload_url" : {
            "type" : "string"
          },
          "cqa_assignment" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CaptureList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CaptureItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CaptureResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureWithMaterials_allOf" : {
        "properties" : {
          "videos" : {
            "items" : {
              "$ref" : "#/components/schemas/VideoMaterialAttribute"
            },
            "type" : "array"
          },
          "panos" : {
            "items" : {
              "$ref" : "#/components/schemas/PanoMaterialAttribute"
            },
            "type" : "array"
          },
          "processing_options_resource" : {
            "$ref" : "#/components/schemas/ProcessingOptionsResource"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureWithMaterialsResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CaptureWithMaterialsItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CaptureWithMaterialsResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CaptureWithMaterialsResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Category_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "category_type" : {
            "$ref" : "#/components/schemas/CategoryType"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "parent" : {
            "$ref" : "#/components/schemas/Category"
          },
          "default_workflow" : {
            "$ref" : "#/components/schemas/Workflow"
          },
          "source_category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "cost_per_unit" : {
            "format" : "float",
            "type" : "number"
          },
          "weight" : {
            "format" : "float",
            "type" : "number"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CategoryListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CategoryList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CategoryResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CategoryItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CategoryResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CategoryResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Cluster_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "bucket" : {
            "type" : "string"
          },
          "size" : {
            "type" : "number"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "capture" : {
            "$ref" : "#/components/schemas/Capture"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "node" : {
            "$ref" : "#/components/schemas/Node"
          },
          "parent" : {
            "$ref" : "#/components/schemas/Cluster"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "root_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "cpc_generatable" : {
            "type" : "boolean"
          },
          "skat_result_type" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ClusterListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ClusterList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ClusterResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ClusterItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ClusterResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ClusterResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Comment_allOf" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "content" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CommentListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CommentList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CommentResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CommentItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CommentResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CommentResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Connect_allOf_connectable" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Connect_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "provider" : {
            "type" : "string"
          },
          "connectable" : {
            "$ref" : "#/components/schemas/Connect_allOf_connectable"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "active_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "inactive_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ConnectListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ConnectList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ConnectResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ConnectItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ConnectResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ConnectResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ConstantableAttribute_constants" : {
        "properties" : {
          "georeference" : {
            "$ref" : "#/components/schemas/Georeference"
          }
        },
        "type" : "object"
      },
      "CreateActivityOnBulkRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "activity_id" : {
            "type" : "string"
          },
          "activity_type" : {
            "$ref" : "#/components/schemas/ActivityType"
          },
          "start_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "end_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateActivityRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "activity_id" : {
            "type" : "string"
          },
          "activity_type" : {
            "$ref" : "#/components/schemas/ActivityType"
          },
          "facility_key" : {
            "type" : "string"
          },
          "parent_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "start_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "end_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "activity_id", "facility_key", "name" ],
        "type" : "object",
        "example" : null
      },
      "CreateAerialMapRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateAerialPhotoRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateAnnotationLayerRequest_allOf" : {
        "properties" : {
          "facility_key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateAnnotationRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "$ref" : "#/components/schemas/AnnotationKind"
          },
          "link" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "annotation_layer_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "description" : {
            "type" : "string"
          },
          "form_design_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "parent_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "annotation_layer_id", "kind", "name" ],
        "type" : "object",
        "example" : null
      },
      "CreateAssetRequest_allOf" : {
        "properties" : {
          "capture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "assetable_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "assetable_type" : {
            "type" : "string"
          },
          "name" : {
            "description" : "Asset File Name",
            "type" : "string"
          },
          "asset_type" : {
            "$ref" : "#/components/schemas/AssetType"
          },
          "summary" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "transcript_language" : {
            "type" : "string"
          },
          "parent_asset_key" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateAttachmentRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "attachable_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "attachable_type" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateBadgeRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string"
          },
          "position" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateBillingAccountRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object",
        "example" : null
      },
      "CreateBimRequest_allOf" : {
        "properties" : {
          "facility_key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateBimRevisionRequest_allOf" : {
        "properties" : {
          "bim_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "forge_urn" : {
            "type" : "string"
          },
          "forge_region" : {
            "type" : "string"
          },
          "forge_format_type" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateBookmarkRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "review_key" : {
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "pano_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facility_key" : {
            "type" : "string"
          },
          "position" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "review_key", "url" ],
        "type" : "object",
        "example" : null
      },
      "CreateCaptureRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "capture_type" : {
            "deprecated" : true,
            "description" : "Use creation_platform, material, method, migrated_from instead of capture_type",
            "enum" : [ "web_uploaded_from_browser", "app_no_ar_video", "app_no_ar_singleshot", "app_no_ar_multishot", "migrated_from_einstein_v2", "migrated_from_tesla_v1" ],
            "type" : "string"
          },
          "creation_platform" : {
            "enum" : [ "web", "app", "eci", "spot", "cloud_connect" ],
            "type" : "string"
          },
          "material" : {
            "enum" : [ "pano", "video", "pointcloud", "video-pano" ],
            "type" : "string"
          },
          "method" : {
            "enum" : [ "singleshot", "multishot", "timelaps", "cupix_json", "reality_capture" ],
            "type" : "string"
          },
          "migrated_from" : {
            "enum" : [ "einstein-v2", "tesla-v1" ],
            "type" : "string"
          },
          "ar_data_version" : {
            "type" : "string"
          },
          "capture_mode" : {
            "enum" : [ "basic", "expert" ],
            "type" : "string"
          },
          "manual_align_type" : {
            "enum" : [ "auto", "cupix1", "cupix2" ],
            "type" : "string"
          },
          "skat_type" : {
            "$ref" : "#/components/schemas/CaptureSkatType"
          },
          "description" : {
            "type" : "string"
          },
          "upload_platform" : {
            "$ref" : "#/components/schemas/UploadPlatform"
          }
        },
        "required" : [ "level_id", "name" ],
        "type" : "object",
        "example" : null
      },
      "CreateCaptureWithMaterialsRequest_allOf" : {
        "properties" : {
          "videos" : {
            "items" : {
              "$ref" : "#/components/schemas/CreateAerialPhotoRequest_allOf"
            },
            "type" : "array"
          },
          "pano" : {
            "$ref" : "#/components/schemas/CreateAerialPhotoRequest_allOf"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateCategoryRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "category_type" : {
            "$ref" : "#/components/schemas/CategoryType"
          },
          "parent_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "facility_key" : {
            "type" : "string"
          },
          "source_category_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "workflow_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "cost_per_unit" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "required" : [ "category_type", "name" ],
        "type" : "object",
        "example" : null
      },
      "CreateClusterRequest_allOf" : {
        "properties" : {
          "capture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "cluster_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "cpc_generatable" : {
            "type" : "boolean"
          },
          "skat_result_type" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateConnectRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "provider" : {
            "enum" : [ "matterport", "arcgis", "itwin", "cesium" ],
            "type" : "string"
          }
        },
        "required" : [ "provider" ],
        "type" : "object",
        "example" : null
      },
      "CreateCustomPropertyRequest_allOf" : {
        "properties" : {
          "facility_key" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "source_type" : {
            "$ref" : "#/components/schemas/CustomPropertyType"
          },
          "unit" : {
            "type" : "string"
          }
        },
        "required" : [ "facility_key" ],
        "type" : "object",
        "example" : null
      },
      "CreateDeviationRequest_allOf" : {
        "properties" : {
          "bim_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "capture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "pointcloud_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "deviation_type" : {
            "$ref" : "#/components/schemas/DeviationType"
          },
          "processing_option" : {
            "$ref" : "#/components/schemas/DeviationProcessingOption"
          },
          "sampling_ratio" : {
            "format" : "float",
            "type" : "number"
          },
          "distance_threshold" : {
            "format" : "float",
            "type" : "number"
          },
          "depth_threshold" : {
            "format" : "float",
            "type" : "number"
          },
          "use_global_icp" : {
            "type" : "boolean"
          },
          "use_pointcloud_normal" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateElementRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Element Name",
            "type" : "string"
          },
          "guid" : {
            "type" : "string"
          },
          "category_id" : {
            "description" : "Category ID",
            "format" : "int64",
            "type" : "integer"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_id" : {
            "description" : "Bim ID",
            "format" : "int64",
            "type" : "integer"
          },
          "bim_revision_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "workarea_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "volume_key_name" : {
            "type" : "string"
          },
          "area_key_name" : {
            "type" : "string"
          },
          "length_key_name" : {
            "type" : "string"
          },
          "weight_key_name" : {
            "type" : "string"
          },
          "bim_bounds" : {
            "$ref" : "#/components/schemas/BimBounds"
          },
          "viewpoint" : {
            "$ref" : "#/components/schemas/Viewpoint"
          },
          "customs" : {
            "$ref" : "#/components/schemas/Customs"
          },
          "custom_properties" : {
            "items" : {
              "$ref" : "#/components/schemas/ElementCustomProperty"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateFacilityRequest_allOf" : {
        "properties" : {
          "workspace_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "bearing" : {
            "format" : "float",
            "type" : "number"
          },
          "facility_size" : {
            "format" : "float",
            "type" : "number"
          },
          "description" : {
            "type" : "string"
          },
          "siteinsights_version" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "address", "location", "name", "workspace_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateFloorplanRequest_allOf" : {
        "properties" : {
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "level_ids" : {
            "items" : {
              "type" : "integer"
            },
            "type" : "array"
          },
          "bim_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "source_filename" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "floorplan_source_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "floorplan_type" : {
            "$ref" : "#/components/schemas/FloorplanType"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "resolution" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "draft_creation" : {
            "type" : "boolean"
          },
          "transformation" : {
            "$ref" : "#/components/schemas/Transformation"
          },
          "real_distance_in_millimeters" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateFloorplanSourceRequest_allOf" : {
        "properties" : {
          "facility_key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "creation_option" : {
            "enum" : [ "simple", "advanced", "bim360" ],
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "pages" : {
            "description" : "Deprecated in favor of description",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateFormDesignRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateFormFieldRequest_allOf" : {
        "properties" : {
          "form_design_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateLevelRequest_allOf" : {
        "properties" : {
          "facility_key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "elevation" : {
            "format" : "float",
            "type" : "number"
          },
          "ceiling_height" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateMeasurementRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "value" : {
            "type" : "string"
          },
          "measurement_type" : {
            "$ref" : "#/components/schemas/MeasurementType"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateMeshRequest_allOf" : {
        "properties" : {
          "record_id" : {
            "type" : "number"
          },
          "level_id" : {
            "type" : "number"
          },
          "name" : {
            "type" : "string"
          }
        },
        "required" : [ "level_id", "record_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateMetricRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "unit" : {
            "type" : "string"
          },
          "position" : {
            "$ref" : "#/components/schemas/MetricPosition"
          },
          "facility_key" : {
            "type" : "string"
          }
        },
        "required" : [ "facility_key" ],
        "type" : "object",
        "example" : null
      },
      "CreateNodeRequest_allOf" : {
        "properties" : {
          "capture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          }
        },
        "required" : [ "capture_id", "name" ],
        "type" : "object",
        "example" : null
      },
      "CreatePanoRequest_allOf" : {
        "properties" : {
          "capture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "pano_type" : {
            "$ref" : "#/components/schemas/PanoType"
          },
          "video_id" : {
            "description" : "Origin Video ID; video_id and pano_id is either-or",
            "format" : "int64",
            "type" : "integer"
          },
          "pano_id" : {
            "description" : "Origin Pano ID; video_id and pano_id is either-or",
            "format" : "int64",
            "type" : "integer"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "exif_create_date" : {
            "format" : "date-time",
            "type" : "string"
          },
          "exif" : {
            "$ref" : "#/components/schemas/PanoExif"
          },
          "brightness" : {
            "format" : "float",
            "type" : "number"
          },
          "timestamp" : {
            "description" : "Required if capture material is video-pano.",
            "format" : "int64",
            "type" : "integer"
          },
          "tile_size" : {
            "format" : "int64",
            "type" : "integer"
          },
          "gps" : {
            "$ref" : "#/components/schemas/Gps"
          }
        },
        "required" : [ "capture_id" ],
        "type" : "object",
        "example" : null
      },
      "CreatePhaseMetricRequest_allOf" : {
        "properties" : {
          "formula" : {
            "type" : "string"
          },
          "phase_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "metric_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "metric_id", "phase_id" ],
        "type" : "object",
        "example" : null
      },
      "CreatePhaseRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "color_code" : {
            "type" : "string"
          },
          "workflow_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "texture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "cost_per_unit" : {
            "format" : "float",
            "type" : "number"
          },
          "facility_key" : {
            "deprecated" : true,
            "type" : "string"
          },
          "source_phase_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "category_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "workarea_group_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreatePointcloudRequest_allOf" : {
        "properties" : {
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "level_ids" : {
            "items" : {
              "type" : "integer"
            },
            "type" : "array"
          },
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "parent_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "capture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "cluster_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "level_id", "record_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateProgressOnBulkRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_revision_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_object_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_external_id" : {
            "type" : "string"
          },
          "sketch_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "category_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "workflow_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "vendor_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "activity_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "origin_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "texture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "phase_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "required" : [ "name", "workflow_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateProgressRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "facility_key" : {
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "sketch_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "category_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "workflow_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "mass_property" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "required" : [ "facility_key", "name", "workflow_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateRecordRequest_allOf" : {
        "properties" : {
          "facility_key" : {
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "facility_key" ],
        "type" : "object",
        "example" : null
      },
      "CreateRecordStatusRequest_allOf" : {
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "progress_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "status_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "estimated_status_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "pointcloud_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "texture_validator_results" : {
            "type" : "object"
          }
        },
        "required" : [ "progress_id", "record_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateReviewRequest_allOf" : {
        "properties" : {
          "facility_key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "levels" : {
            "$ref" : "#/components/schemas/SelectedIds"
          },
          "areas" : {
            "$ref" : "#/components/schemas/SelectedAreas"
          },
          "date_ranges" : {
            "$ref" : "#/components/schemas/SelectedDateRanges"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "annotation_layers" : {
            "$ref" : "#/components/schemas/SelectedItemIds"
          },
          "bims" : {
            "$ref" : "#/components/schemas/SelectedItemIds"
          },
          "floorplans" : {
            "$ref" : "#/components/schemas/SelectedItemIds"
          },
          "record_ids" : {
            "$ref" : "#/components/schemas/SelectedRecordIds"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateRoomRequest_allOf" : {
        "properties" : {
          "facility_key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "phase" : {
            "type" : "string"
          },
          "geometry" : {
            "type" : "object"
          },
          "style" : {
            "type" : "object"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_revision_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "sketch_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateSketchRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Sektch name",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreateStatusRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "conditional_statements" : {
            "type" : "object"
          },
          "workflow_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "texture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "is_complete_status" : {
            "type" : "boolean"
          }
        },
        "required" : [ "workflow_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateTaskRequest_allOf" : {
        "properties" : {
          "facility_key" : {
            "type" : "string"
          },
          "vendor_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "workarea_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "category_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "phase_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "activity_id" : {
            "type" : "string"
          },
          "start_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "end_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "required" : [ "category_id", "facility_key", "phase_id", "vendor_id", "workarea_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateTeleportRequest_allOf" : {
        "properties" : {
          "review_key" : {
            "type" : "string"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "source_key" : {
            "type" : "string"
          },
          "source_type" : {
            "type" : "string"
          }
        },
        "required" : [ "source_key", "source_type" ],
        "type" : "object",
        "example" : null
      },
      "CreateTextureRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "is_system_texture" : {
            "type" : "boolean"
          }
        },
        "required" : [ "name" ],
        "type" : "object",
        "example" : null
      },
      "CreateTrackingPlanRequest_allOf" : {
        "properties" : {
          "facility_key" : {
            "type" : "string"
          },
          "vendor_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "workarea_group_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "category_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "phase_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "uuid" : {
            "format" : "uuid",
            "type" : "string"
          },
          "start_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "end_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "activity_key" : {
            "type" : "string"
          },
          "activity_name" : {
            "type" : "string"
          },
          "workarea_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "required" : [ "facility_key" ],
        "type" : "object",
        "example" : null
      },
      "CreateVideoRequest_allOf" : {
        "properties" : {
          "capture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "pts_unit" : {
            "$ref" : "#/components/schemas/PtsUnitType"
          }
        },
        "required" : [ "capture_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateWorkItemRequest_allOf" : {
        "properties" : {
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "assignee_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "processing_status" : {
            "type" : "string"
          },
          "priority" : {
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "details" : {
            "type" : "object"
          },
          "elapsed_time" : {
            "description" : "elapsed time in seconds",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "record_id", "work_action" ],
        "type" : "object",
        "example" : null
      },
      "CreateWorkareaGroupRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "workarea group name",
            "type" : "string"
          },
          "facility_key" : {
            "type" : "string"
          }
        },
        "required" : [ "facility_key", "name" ],
        "type" : "object",
        "example" : null
      },
      "CreateWorkareaRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "workarea name",
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "sketch_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "sketch_entity_guid" : {
            "type" : "string"
          },
          "workarea_group_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "geometry" : {
            "type" : "object"
          },
          "color_code" : {
            "type" : "string"
          }
        },
        "required" : [ "level_id", "name", "workarea_group_id" ],
        "type" : "object",
        "example" : null
      },
      "CreateWorkflowRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "workflow_type" : {
            "$ref" : "#/components/schemas/WorkflowType"
          },
          "is_system_workflow" : {
            "type" : "boolean"
          },
          "parent_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "texture_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "name", "workflow_type" ],
        "type" : "object",
        "example" : null
      },
      "CreateWorkspaceRequest_allOf" : {
        "properties" : {
          "address" : {
            "type" : "string"
          },
          "facility" : {
            "$ref" : "#/components/schemas/FacilityOnCreateWorkspace"
          }
        },
        "required" : [ "name" ],
        "type" : "object",
        "example" : null
      },
      "CreditTransaction_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "credit_type" : {
            "type" : "string"
          },
          "income" : {
            "format" : "int64",
            "type" : "integer"
          },
          "expense" : {
            "format" : "int64",
            "type" : "integer"
          },
          "balance" : {
            "format" : "int64",
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CreditTransactionListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CreditTransactionList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CustomProperty_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "key" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "source_type" : {
            "$ref" : "#/components/schemas/CustomPropertyType"
          },
          "unit" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CustomPropertyListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CustomPropertyList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CustomPropertyResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CustomPropertyItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CustomPropertyResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/CustomPropertyResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "CyclableAttribute_cycle_state_updated_by" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Deviation_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "deviation_state" : {
            "type" : "string"
          },
          "running_state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "bim_revision" : {
            "$ref" : "#/components/schemas/BimRevision"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "pointcloud" : {
            "$ref" : "#/components/schemas/Pointcloud"
          },
          "deviation_type" : {
            "$ref" : "#/components/schemas/DeviationType"
          },
          "processing_option" : {
            "type" : "string"
          },
          "sampling_ratio" : {
            "format" : "float",
            "type" : "number"
          },
          "distance_threshold" : {
            "format" : "float",
            "type" : "number"
          },
          "depth_threshold" : {
            "format" : "float",
            "type" : "number"
          },
          "use_global_icp" : {
            "type" : "boolean"
          },
          "use_pointcloud_normal" : {
            "type" : "boolean"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "deviation_result_urls" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "DeviationListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/DeviationList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "DeviationResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/DeviationItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "DeviationResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/DeviationResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Editing_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "editor" : {
            "$ref" : "#/components/schemas/User"
          },
          "escalated_by" : {
            "$ref" : "#/components/schemas/User"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "reviewers" : {
            "items" : {
              "$ref" : "#/components/schemas/Reviewer"
            },
            "type" : "array"
          },
          "meta" : {
            "type" : "object"
          },
          "panos_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "videos_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "video_panos_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "state" : {
            "$ref" : "#/components/schemas/EditingState"
          },
          "entity_type" : {
            "type" : "string"
          },
          "stat" : {
            "$ref" : "#/components/schemas/EditingStat"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EditingEntity_allOf_entity" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "enum" : [ "Capture", "Pointcloud", "Task" ],
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EditingEntity_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "editing" : {
            "$ref" : "#/components/schemas/Editing"
          },
          "entity" : {
            "$ref" : "#/components/schemas/EditingEntity_allOf_entity"
          },
          "state" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EditingEntityListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/EditingEntityList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EditingEntityResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/EditingEntityItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EditingEntityResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/EditingEntityResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EditingListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/EditingList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EditingResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/EditingItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EditingResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/EditingResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EditingStat_editing" : {
        "properties" : {
          "waiting_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "ready_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "holding_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "editing_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "in_review_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "done_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "skipped_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "stopped_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EditingStat_count" : {
        "properties" : {
          "total_entities" : {
            "format" : "int64",
            "type" : "integer"
          },
          "total_changed" : {
            "format" : "int64",
            "type" : "integer"
          },
          "total_reviewed" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Element_allOf_workarea" : {
        "properties" : {
          "ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Element_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "guid" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "bim_revision" : {
            "$ref" : "#/components/schemas/BimRevision"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "workarea" : {
            "$ref" : "#/components/schemas/Element_allOf_workarea"
          },
          "volume_key_name" : {
            "type" : "string"
          },
          "area_key_name" : {
            "type" : "string"
          },
          "length_key_name" : {
            "type" : "string"
          },
          "weight_key_name" : {
            "type" : "string"
          },
          "bim_bounds" : {
            "$ref" : "#/components/schemas/BimBounds"
          },
          "viewpoint" : {
            "$ref" : "#/components/schemas/Viewpoint"
          },
          "customs" : {
            "$ref" : "#/components/schemas/Customs"
          },
          "custom_properties" : {
            "items" : {
              "$ref" : "#/components/schemas/ElementCustomProperty"
            },
            "type" : "array"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ElementListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ElementList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ElementRecordListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ElementRecordList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ElementRecordUpdateResponse_allOf_result_data" : {
        "properties" : {
          "modified_count" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ElementRecordUpdateResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ElementRecordUpdateResponse_allOf_result_data"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ElementRecordUpdateResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ElementRecordUpdateResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ElementResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ElementItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ElementResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ElementResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ElementTrace_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "deviation" : {
            "$ref" : "#/components/schemas/Deviation"
          },
          "element" : {
            "$ref" : "#/components/schemas/Element"
          },
          "task" : {
            "$ref" : "#/components/schemas/Task"
          },
          "category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "workarea" : {
            "$ref" : "#/components/schemas/Workarea"
          },
          "phase" : {
            "$ref" : "#/components/schemas/Phase"
          },
          "vendor" : {
            "$ref" : "#/components/schemas/Group"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          },
          "estimated_status" : {
            "$ref" : "#/components/schemas/Status"
          },
          "processing_result" : {
            "$ref" : "#/components/schemas/DeviationProcessingResult"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ElementTraceListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ElementTraceList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ElementTraceResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ElementTraceItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ElementTraceResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ElementTraceResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EmailDomainListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/EmailDomainList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EmailResponse_result" : {
        "properties" : {
          "email" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EntityParameter_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int32",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          },
          "data_type" : {
            "type" : "string"
          },
          "allowed_values" : {
            "type" : "string"
          },
          "is_modifiable" : {
            "type" : "boolean"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "entity_parameter_group" : {
            "$ref" : "#/components/schemas/EntityParameterGroup"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EntityParameterGroup_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int32",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "entity_id" : {
            "format" : "int32",
            "type" : "integer"
          },
          "entity_type" : {
            "type" : "string"
          },
          "family" : {
            "type" : "string"
          },
          "is_admin_group" : {
            "type" : "boolean"
          },
          "is_system_group" : {
            "type" : "boolean"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EntityParameterListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/EntityParameterList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EntityParameterResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/EntityParameterItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EntityParameterResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/EntityParameterResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ErrorResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ErrorCode"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Event_allOf" : {
        "properties" : {
          "eventable" : {
            "$ref" : "#/components/schemas/Eventable"
          },
          "action" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string"
          },
          "custom_action_meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "eventable_team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "linked_review" : {
            "$ref" : "#/components/schemas/Review"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EventObject_targetable" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TargetUser"
        }, {
          "$ref" : "#/components/schemas/TargetGroup"
        } ]
      },
      "EventResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/EventItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "EventResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/EventResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Facility_allOf" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "last_captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "bearing" : {
            "format" : "float",
            "type" : "number"
          },
          "facility_size" : {
            "format" : "float",
            "type" : "number"
          },
          "captured_size" : {
            "format" : "float",
            "type" : "number"
          },
          "has_upload_candidates" : {
            "description" : "list에서는 항상 null을 반환하며, Get Facility 호출 시 true/false 중 반환한다.",
            "type" : "boolean"
          },
          "timezone_offset" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bims_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "records_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "levels_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "reviews_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "reports_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "deviation_reports_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "siteinsights_version" : {
            "format" : "int64",
            "type" : "integer"
          },
          "ground_level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "bim_pack" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "currency" : {
            "type" : "string"
          },
          "activity_type" : {
            "type" : "string"
          },
          "closed_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "metric_name" : {
            "type" : "string"
          },
          "metric_unit" : {
            "type" : "string"
          },
          "timezone_name" : {
            "type" : "string"
          },
          "schedule_state" : {
            "$ref" : "#/components/schemas/ScheduleState"
          },
          "elements_count_refreshed_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "refresh_elements_count_requested_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FacilityListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FacilityList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FacilityOnCreateWorkspace_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "bearing" : {
            "format" : "float",
            "type" : "number"
          },
          "facility_size" : {
            "format" : "float",
            "type" : "number"
          },
          "description" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FacilityResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/FacilityItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FacilityResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FacilityResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FacilitySignupRequest_allOf" : {
        "properties" : {
          "facility_key" : {
            "type" : "string"
          },
          "confirmation_token" : {
            "type" : "string"
          }
        },
        "required" : [ "confirmation_token", "facility_key" ],
        "type" : "object",
        "example" : null
      },
      "FcmDeviceListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FcmDeviceList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FcmDeviceResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/FcmDeviceItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FcmDeviceResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FcmDeviceResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Feed_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "event" : {
            "$ref" : "#/components/schemas/Event"
          },
          "recipe" : {
            "$ref" : "#/components/schemas/Recipe"
          },
          "event_object" : {
            "$ref" : "#/components/schemas/EventObject"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FeedListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FeedList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Field_allOf" : {
        "properties" : {
          "form_field" : {
            "$ref" : "#/components/schemas/FormField"
          },
          "annotation" : {
            "$ref" : "#/components/schemas/Annotation"
          },
          "value" : {
            "type" : "string"
          },
          "capture" : {
            "$ref" : "#/components/schemas/Capture"
          },
          "pano" : {
            "$ref" : "#/components/schemas/Pano"
          },
          "review" : {
            "$ref" : "#/components/schemas/Review"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FieldItem_allOf" : {
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/Field"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FieldList_allOf" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/FieldItem"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FieldListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FieldList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FieldResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/FieldItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FieldResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FieldResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Floorplan_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "source_filename" : {
            "type" : "string"
          },
          "state" : {
            "$ref" : "#/components/schemas/FloorplanState"
          },
          "tile_state" : {
            "$ref" : "#/components/schemas/FloorplanTileState"
          },
          "page" : {
            "format" : "int64",
            "type" : "integer"
          },
          "floorplan_source" : {
            "$ref" : "#/components/schemas/FloorplanSource"
          },
          "floorplan_type" : {
            "$ref" : "#/components/schemas/FloorplanType"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "levels" : {
            "$ref" : "#/components/schemas/SelectedLevelItems"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "revision" : {
            "format" : "int64",
            "type" : "integer"
          },
          "transformation" : {
            "$ref" : "#/components/schemas/Transformation"
          },
          "meta" : {
            "type" : "object"
          },
          "upload_url" : {
            "type" : "string"
          },
          "tile_download_urls" : {
            "$ref" : "#/components/schemas/FloorplanTile"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "file_extension" : {
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "resolution" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "real_distance_in_millimeters" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FloorplanListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FloorplanList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FloorplanResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/FloorplanItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FloorplanResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FloorplanResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FloorplanSource_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "upload_url" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "file_extension" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "pages" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FloorplanSourceListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FloorplanSourceList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FloorplanSourceResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/FloorplanSourceItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FloorplanSourceResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FloorplanSourceResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FloorplanTile_items_inner" : {
        "properties" : {
          "z" : {
            "format" : "int32",
            "type" : "integer"
          },
          "max_y" : {
            "format" : "int32",
            "type" : "integer"
          },
          "max_x" : {
            "format" : "int32",
            "type" : "integer"
          },
          "pixel_size" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "FormDesign_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "icon" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FormDesignListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FormDesignList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FormDesignResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/FormDesignItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FormDesignResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FormDesignResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FormField_allOf" : {
        "properties" : {
          "form_design" : {
            "$ref" : "#/components/schemas/FormDesign"
          },
          "kind" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "meta" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FormFieldItem_allOf" : {
        "properties" : {
          "attributes" : {
            "$ref" : "#/components/schemas/FormField"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FormFieldList_allOf" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/FormFieldItem"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FormFieldListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FormFieldList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FormFieldResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/FormFieldItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "FormFieldResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/FormFieldResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Group_allOf" : {
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          }
        },
        "type" : "object",
        "example" : null
      },
      "GroupAutocomplete_group" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "GroupListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/GroupList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "GroupResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/GroupItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "GroupResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/GroupResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Integration_integratable" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "type" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "IntegrationAccessTokenResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/IntegrationAccessToken"
          }
        },
        "type" : "object",
        "example" : null
      },
      "IntegrationListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/IntegrationList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "IntegrationResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/IntegrationItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "IntegrationResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/IntegrationResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Issue_model" : {
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          }
        },
        "type" : "object"
      },
      "IssueListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/IssueList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "IssueResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/IssueItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "IssueTypeListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/IssueTypeList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "IssueTypeResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/IssueTypeItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Job_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "kind" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "jobable" : {
            "$ref" : "#/components/schemas/Jobable"
          },
          "node" : {
            "$ref" : "#/components/schemas/Node"
          },
          "task_definition" : {
            "type" : "string"
          },
          "task_revision" : {
            "type" : "string"
          },
          "error_code" : {
            "type" : "string"
          },
          "progress" : {
            "format" : "float",
            "type" : "number"
          },
          "processing_status" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "option" : {
            "type" : "object"
          },
          "process_option" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "JobResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/JobItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "JobResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/JobResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "LastTaskUpdatedAtResponse_result" : {
        "properties" : {
          "last_task_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Level_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "default_floorplan" : {
            "$ref" : "#/components/schemas/Floorplan"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "elevation" : {
            "format" : "float",
            "type" : "number"
          },
          "ceiling_height" : {
            "format" : "float",
            "type" : "number"
          },
          "captures_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "floorplans_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "pointclouds_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "is_ground_level" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "LevelListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/LevelList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "LevelResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/LevelItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "LevelResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/LevelResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "License_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "license_type" : {
            "type" : "string"
          },
          "license_model" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Workspace"
            }, {
              "$ref" : "#/components/schemas/Team"
            } ]
          }
        },
        "type" : "object",
        "example" : null
      },
      "LicenseListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/LicenseList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "LinkResponse_allOf_result" : {
        "properties" : {
          "shorten_url" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "LinkResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/LinkResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Mask_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "mask_type" : {
            "$ref" : "#/components/schemas/MaskType"
          },
          "maskable" : {
            "$ref" : "#/components/schemas/Maskable"
          },
          "mask_upload_url" : {
            "type" : "string"
          },
          "mask_url" : {
            "type" : "string"
          },
          "mask_state" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MaskResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MaskItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MaskResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/MaskResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Measurement_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "measurement_type" : {
            "$ref" : "#/components/schemas/MeasurementType"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "review" : {
            "$ref" : "#/components/schemas/Review"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "upload_url" : {
            "type" : "string"
          },
          "state" : {
            "$ref" : "#/components/schemas/MeasurementState"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MeasurementListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/MeasurementList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MeasurementResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MeasurementItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MeasurementResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/MeasurementResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MemberItem_attributes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/UserMember"
        }, {
          "$ref" : "#/components/schemas/GroupMember"
        } ]
      },
      "Mesh_allOf" : {
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "mesh_state" : {
            "$ref" : "#/components/schemas/MeshState"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "error_code" : {
            "type" : "string"
          },
          "mesh_urls" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "resource_upload_url" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MeshListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/MeshList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MeshResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MeshItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MeshResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/MeshResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MetaResponse_allOf" : {
        "properties" : {
          "result" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Metric_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "unit" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "position" : {
            "$ref" : "#/components/schemas/MetricPosition"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MetricListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/MetricList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MetricResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MetricItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MetricResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/MetricResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "MfaAttribute_allOf" : {
        "properties" : {
          "mfa_updatable" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Node_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "capture" : {
            "$ref" : "#/components/schemas/Capture"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "NodeListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/NodeList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "NodeResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/NodeItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "NodeResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/NodeResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "OnboardCompletionResponse_allOf_result" : {
        "properties" : {
          "onboard_key" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "OnboardCompletionResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/OnboardCompletionResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "OnboardListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/OnboardList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Pano_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "pano_type" : {
            "$ref" : "#/components/schemas/PanoType"
          },
          "version" : {
            "type" : "number"
          },
          "state" : {
            "type" : "string"
          },
          "tile_state" : {
            "type" : "string"
          },
          "mask_state" : {
            "type" : "string"
          },
          "error_code" : {
            "type" : "string"
          },
          "processing_status" : {
            "type" : "string"
          },
          "origin" : {
            "$ref" : "#/components/schemas/PanoOrigin"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "cluster" : {
            "$ref" : "#/components/schemas/Cluster"
          },
          "capture" : {
            "$ref" : "#/components/schemas/Capture"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "meta" : {
            "type" : "object"
          },
          "exif" : {
            "$ref" : "#/components/schemas/PanoExif"
          },
          "exif_create_date" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "upload_url" : {
            "type" : "string"
          },
          "tile_download_urls" : {
            "$ref" : "#/components/schemas/Tile"
          },
          "mask_upload_url" : {
            "type" : "string"
          },
          "mask_url" : {
            "type" : "string"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "stitched" : {
            "type" : "boolean"
          },
          "geo_coordinate" : {
            "$ref" : "#/components/schemas/GeoCoordinate"
          },
          "brightness" : {
            "format" : "float",
            "type" : "number"
          },
          "timestamp" : {
            "format" : "int64",
            "type" : "integer"
          },
          "captured_at_from_meta" : {
            "format" : "int64",
            "type" : "integer"
          },
          "gps" : {
            "$ref" : "#/components/schemas/Gps"
          },
          "tile_size" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PanoExif_exif" : {
        "properties" : {
          "CreateDate" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PanoExif_video" : {
        "properties" : {
          "creation_time" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PanoListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/PanoList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PanoResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PanoItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PanoResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/PanoResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Phase_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "color_code" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workflow" : {
            "$ref" : "#/components/schemas/Workflow"
          },
          "source_phase" : {
            "$ref" : "#/components/schemas/Phase"
          },
          "texture" : {
            "$ref" : "#/components/schemas/Texture"
          },
          "category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "workarea_group" : {
            "$ref" : "#/components/schemas/WorkareaGroup"
          },
          "row_order" : {
            "format" : "int64",
            "type" : "integer"
          },
          "cost_per_unit" : {
            "format" : "float",
            "type" : "number"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PhaseListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/PhaseList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PhaseMetric_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "formula" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "phase" : {
            "$ref" : "#/components/schemas/Phase"
          },
          "metric" : {
            "$ref" : "#/components/schemas/Metric"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PhaseMetricFormulaValidationResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/PhaseMetricFormulaValidationResult"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PhaseMetricListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/PhaseMetricList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PhaseMetricResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PhaseMetricItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PhaseMetricResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/PhaseMetricResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PhaseMetricSampledElement_allOf" : {
        "properties" : {
          "id" : {
            "description" : "Element ID",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "Element Name",
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "parsed_formula" : {
            "type" : "string"
          },
          "custom_properties" : {
            "items" : {
              "$ref" : "#/components/schemas/ElementCustomProperty"
            },
            "type" : "array"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PhaseResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PhaseItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PhaseResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/PhaseResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Pointcloud_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "potree_state" : {
            "$ref" : "#/components/schemas/PointcloudPotreeState"
          },
          "potree_url" : {
            "type" : "string"
          },
          "parent" : {
            "$ref" : "#/components/schemas/Pointcloud"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "levels" : {
            "$ref" : "#/components/schemas/SelectedLevelItems"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "capture" : {
            "$ref" : "#/components/schemas/Capture"
          },
          "cluster" : {
            "$ref" : "#/components/schemas/Cluster"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "resource_upload_url" : {
            "type" : "string"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "processing_state" : {
            "type" : "string"
          },
          "error_code" : {
            "type" : "string"
          },
          "editing_state" : {
            "$ref" : "#/components/schemas/CaptureEditingState"
          },
          "octree_state" : {
            "$ref" : "#/components/schemas/PointcloudOctreeState"
          },
          "octree_download_url" : {
            "type" : "string"
          },
          "octree_upload_url" : {
            "type" : "string"
          },
          "is_cluster_pano_unpublished" : {
            "type" : "boolean"
          },
          "voxel_state" : {
            "type" : "string"
          },
          "voxel_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "voxels_result_urls" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "entry_filename" : {
            "type" : "string"
          },
          "mesh_uploaded_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "ply_uploaded_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "cpc_mesh_state" : {
            "$ref" : "#/components/schemas/PointcloudCpcMeshState"
          },
          "cpc_mesh_upload_url" : {
            "type" : "string"
          },
          "cpc_mesh_download_url" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PointcloudListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/PointcloudList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PointcloudResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PointcloudItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PointcloudResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/PointcloudResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PowerBiEmbedTokenResponse_allOf_result" : {
        "properties" : {
          "token" : {
            "$ref" : "#/components/schemas/PowerBiToken"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PowerBiEmbedTokenResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/PowerBiEmbedTokenResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PowerBiReport_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "power_bi_report_id" : {
            "type" : "string"
          },
          "dataset_id" : {
            "type" : "string"
          },
          "power_bi_report_type" : {
            "example" : "full_report",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PowerBiReportListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/PowerBiReportList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Progress_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "bim_revision" : {
            "$ref" : "#/components/schemas/BimRevision"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "sketch" : {
            "$ref" : "#/components/schemas/Sketch"
          },
          "workflow" : {
            "$ref" : "#/components/schemas/Workflow"
          },
          "category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "activity" : {
            "$ref" : "#/components/schemas/Activity"
          },
          "vendor" : {
            "$ref" : "#/components/schemas/Group"
          },
          "bim_object" : {
            "$ref" : "#/components/schemas/BimObject"
          },
          "bim_external_id" : {
            "type" : "string"
          },
          "texture" : {
            "$ref" : "#/components/schemas/Texture"
          },
          "fresh_state" : {
            "type" : "string"
          },
          "fresh_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "record_completed_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "record_misinstalled_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "origin" : {
            "$ref" : "#/components/schemas/Progress"
          },
          "phase" : {
            "$ref" : "#/components/schemas/Phase"
          },
          "row_order" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ProgressListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ProgressList"
          },
          "aggs" : {
            "$ref" : "#/components/schemas/ProgressAggsList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ProgressResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ProgressItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ProgressResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ProgressResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PublicReviewResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PublicReviewItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "PublicReviewResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/PublicReviewResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RealityCaptureListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/RealityCaptureList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Record_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "[Deprecated attribute] duplicates from note\n",
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          },
          "running_state" : {
            "type" : "string"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "meta" : {
            "type" : "object"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "captures_count" : {
            "format" : "int32",
            "type" : "integer"
          },
          "action_state" : {
            "$ref" : "#/components/schemas/RecordActionState"
          },
          "action_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "geo_coordinate_url" : {
            "type" : "string"
          },
          "panos_count" : {
            "type" : "integer"
          },
          "pointclouds_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "siteinsights_published_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RecordListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/RecordList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RecordResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/RecordItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RecordResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/RecordResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RecordStatus_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "value" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "progress" : {
            "$ref" : "#/components/schemas/Progress"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          },
          "estimated_status" : {
            "$ref" : "#/components/schemas/Status"
          },
          "deviation" : {
            "$ref" : "#/components/schemas/Deviation"
          },
          "pointcloud" : {
            "$ref" : "#/components/schemas/Pointcloud"
          },
          "viewpoint" : {
            "type" : "object"
          },
          "texture_validator_results" : {
            "type" : "object"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RecordStatusListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/RecordStatusList"
          },
          "aggs" : {
            "$ref" : "#/components/schemas/RecordStatusAggsList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RecordStatusResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/RecordStatusItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RecordStatusResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/RecordStatusResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Reference_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "reference_sources" : {
            "$ref" : "#/components/schemas/ReferenceSources"
          },
          "meta" : {
            "type" : "object"
          },
          "global" : {
            "type" : "boolean"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ReferenceListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ReferenceList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ReferenceResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ReferenceItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ReferenceResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ReferenceResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RefinementAttribute_allOf" : {
        "properties" : {
          "refinement_state" : {
            "$ref" : "#/components/schemas/RefinementState"
          },
          "selected_unrefined_cluster_id" : {
            "format" : "int64",
            "type" : "number"
          },
          "refinement_floorplan_type" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Report_allOf_user" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Report_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/Report_allOf_user"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "kind" : {
            "$ref" : "#/components/schemas/ReportKind"
          },
          "reportable" : {
            "$ref" : "#/components/schemas/Reportable"
          },
          "form_design" : {
            "$ref" : "#/components/schemas/FormDesign"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ReportAnnotation_allOf_fields" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "form_field_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "value" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ReportAnnotation_allOf_attachments" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "thumbnail_urls" : {
            "$ref" : "#/components/schemas/ThumbnailUrls"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ReportAnnotation_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "review" : {
            "$ref" : "#/components/schemas/Review"
          },
          "form_design" : {
            "$ref" : "#/components/schemas/FormDesign"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "annotation_layer" : {
            "$ref" : "#/components/schemas/AnnotationLayer"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "attachments_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "annotatable" : {
            "$ref" : "#/components/schemas/Annotatable"
          },
          "parent" : {
            "$ref" : "#/components/schemas/ReportAnnotation"
          },
          "meta" : {
            "type" : "object"
          },
          "row_order" : {
            "format" : "int64",
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "fields" : {
            "items" : {
              "$ref" : "#/components/schemas/ReportAnnotation_allOf_fields"
            },
            "type" : "array"
          },
          "attachments" : {
            "items" : {
              "$ref" : "#/components/schemas/ReportAnnotation_allOf_attachments"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ReportAnnotationListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ReportAnnotationList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ReportListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ReportList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ReportResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ReportItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ReportResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ReportResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ResendTeamInvitationSentResponse_allOf_result" : {
        "properties" : {
          "user_email" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ResendTeamInvitationSentResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ResendTeamInvitationSentResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Resource_allOf" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "size" : {
            "type" : "number"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "upload_url" : {
            "nullable" : true,
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ResourceListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ResourceList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ResourceResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ResourceItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ResourceResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ResourceResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Response_session" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/Session"
        } ],
        "default" : null,
        "nullable" : true
      },
      "Review_allOf" : {
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "fresh_state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "levels" : {
            "$ref" : "#/components/schemas/SelectedLevels"
          },
          "areas" : {
            "$ref" : "#/components/schemas/SelectedAreas"
          },
          "date_ranges" : {
            "$ref" : "#/components/schemas/SelectedDateRanges"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "last_captured_record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "entrypoint" : {
            "$ref" : "#/components/schemas/Entrypoint"
          },
          "annotation_layers" : {
            "$ref" : "#/components/schemas/SelectedAnnotationLayers"
          },
          "bims" : {
            "$ref" : "#/components/schemas/SelectedBims"
          },
          "floorplans" : {
            "$ref" : "#/components/schemas/SelectedFloorplans"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ReviewListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ReviewList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ReviewResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ReviewItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ReviewResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/ReviewResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ReviewSignupRequest_allOf" : {
        "properties" : {
          "review_key" : {
            "type" : "string"
          },
          "confirmation_token" : {
            "type" : "string"
          }
        },
        "required" : [ "confirmation_token", "review_key" ],
        "type" : "object",
        "example" : null
      },
      "ReviseElementRequest_items_inner" : {
        "properties" : {
          "old_bim_external_id" : {
            "type" : "string"
          },
          "new_bim_external_id" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Room_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "phase" : {
            "type" : "string"
          },
          "geometry" : {
            "type" : "object"
          },
          "style" : {
            "type" : "object"
          },
          "element_id" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "bim_revision" : {
            "$ref" : "#/components/schemas/BimRevision"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "sketch" : {
            "$ref" : "#/components/schemas/Sketch"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RoomListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/RoomList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RoomResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/RoomItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "RoomResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/RoomResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SearchCountResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/SearchCount"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SelectedAnnotationLayers_allOf" : {
        "properties" : {
          "annotation_layers" : {
            "items" : {
              "$ref" : "#/components/schemas/SelectedAnnotationLayerItem"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SelectedBims_allOf" : {
        "properties" : {
          "bims" : {
            "items" : {
              "$ref" : "#/components/schemas/SelectedBimItem"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SelectedFloorplanItem_level" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "is_ground_level" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "SelectedFloorplans_allOf" : {
        "properties" : {
          "floorplans" : {
            "items" : {
              "$ref" : "#/components/schemas/SelectedFloorplanItem"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SelectedLevelItems_inner" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "SelectedLevels_allOf" : {
        "properties" : {
          "levels" : {
            "items" : {
              "$ref" : "#/components/schemas/Level"
            },
            "type" : "array"
          },
          "default_level" : {
            "$ref" : "#/components/schemas/Level"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SelfSignupWhitelistResponse_result" : {
        "properties" : {
          "whitelist" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SessionResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SessionItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SessionResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/SessionResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SessionUser_allOf" : {
        "properties" : {
          "user_type" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "ShareListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/MemberList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SignUpRequest_allOf" : {
        "properties" : {
          "team_domain" : {
            "type" : "string"
          },
          "team_name" : {
            "type" : "string"
          },
          "confirmation_token" : {
            "type" : "string"
          }
        },
        "required" : [ "confirmation_token", "team_domain" ],
        "type" : "object",
        "example" : null
      },
      "SiteInsightCell_allOf" : {
        "properties" : {
          "model" : {
            "type" : "string"
          },
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "progress" : {
            "$ref" : "#/components/schemas/Progress"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SiteInsightCellListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/SiteInsightCellList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SiteInsightProgressAttribute_allOf" : {
        "properties" : {
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "sketch" : {
            "$ref" : "#/components/schemas/Sketch"
          },
          "workflow" : {
            "$ref" : "#/components/schemas/Workflow"
          },
          "category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "form_design" : {
            "$ref" : "#/components/schemas/FormDesign"
          },
          "activity" : {
            "$ref" : "#/components/schemas/Activity"
          },
          "origin" : {
            "$ref" : "#/components/schemas/Progress"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SiteinsightsConfig_allOf" : {
        "properties" : {
          "schedule_display_enabled_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "next_tracing_date" : {
            "format" : "date-time",
            "type" : "string"
          },
          "track_frequency" : {
            "$ref" : "#/components/schemas/SiteinsightsTrackFrequency"
          },
          "track_day" : {
            "$ref" : "#/components/schemas/SiteinsightsTrackDay"
          },
          "state" : {
            "$ref" : "#/components/schemas/SiteinsightsConfigState"
          },
          "vendor_visibility_restricted_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SiteinsightsConfigResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SiteinsightsConfigItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SiteinsightsConfigResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/SiteinsightsConfigResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Sketch_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "meta" : {
            "type" : "object"
          },
          "upload_url" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "last_ifc_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "sketch_resource_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SketchListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/SketchList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SketchResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SketchItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SketchResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/SketchResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Spacetime_allOf" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "pointclouds" : {
            "$ref" : "#/components/schemas/SelectedPointclouds"
          },
          "unprocessing_captures_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "processing_captures_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "published_captures_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "processing_dollhouses_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "published_dollhouses_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "processing_reality_captures_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "published_reality_captures_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "unfinalized_entities_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "finalizing_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "finalized_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "finalized_cpcs_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "finalized_reality_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "preparing_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "queued_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "editing_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "error_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "done_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "measure_ready_captures_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "pointclouds_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "published_pointclouds_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          },
          "meshes_count" : {
            "deprecated" : true,
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SpacetimeListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/SpacetimeList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Status_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "conditional_statements" : {
            "type" : "object"
          },
          "meta" : {
            "type" : "object"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workflow" : {
            "$ref" : "#/components/schemas/Workflow"
          },
          "texture" : {
            "$ref" : "#/components/schemas/Texture"
          },
          "status_type" : {
            "$ref" : "#/components/schemas/StatusType"
          },
          "row_order" : {
            "format" : "int64",
            "type" : "integer"
          },
          "is_complete_status" : {
            "type" : "boolean"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "StatusListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/StatusList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "StatusResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/StatusItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "StatusResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/StatusResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "StorageListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/StorageList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "StorageResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/StorageItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "StorageResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/StorageResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SubscriptionListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/SubscriptionList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SubscriptionResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Subscription"
          }
        },
        "type" : "object",
        "example" : null
      },
      "SubscriptionResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/SubscriptionResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Task_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workarea" : {
            "$ref" : "#/components/schemas/Workarea"
          },
          "category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "vendor" : {
            "$ref" : "#/components/schemas/Group"
          },
          "phase" : {
            "$ref" : "#/components/schemas/Phase"
          },
          "state" : {
            "$ref" : "#/components/schemas/TaskState"
          },
          "activity_key" : {
            "type" : "string"
          },
          "activity_name" : {
            "type" : "string"
          },
          "start_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "end_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "elements_count" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TaskListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/TaskList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TaskResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TaskItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TaskResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/TaskResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TaskValidationResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BulkTaskItemRequest"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TaskValidationResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/TaskValidationResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TeamInvitationSentResponse_allOf_result" : {
        "properties" : {
          "user_emails" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TeamInvitationSentResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/TeamInvitationSentResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TeamInvitationSignupRequest_allOf" : {
        "properties" : {
          "team_domain" : {
            "type" : "string"
          },
          "invitation_token" : {
            "type" : "string"
          }
        },
        "required" : [ "invitation_token", "team_domain" ],
        "type" : "object",
        "example" : null
      },
      "TeamListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/TeamList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TeamResponse_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TeamItem"
          }
        },
        "type" : "object"
      },
      "TeamSelfSignupRequest_allOf" : {
        "properties" : {
          "team_domain" : {
            "type" : "string"
          },
          "confirmation_token" : {
            "type" : "string"
          }
        },
        "required" : [ "confirmation_token", "team_domain" ],
        "type" : "object",
        "example" : null
      },
      "Teleport_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "review" : {
            "$ref" : "#/components/schemas/Review"
          },
          "source_key" : {
            "type" : "string"
          },
          "source_type" : {
            "type" : "string"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TeleportListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/TeleportList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TeleportResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TeleportItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TeleportResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/TeleportResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Texture_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "done_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "attachments_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "is_system_texture" : {
            "type" : "boolean"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TextureListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/TextureList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TextureResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TextureItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TextureResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/TextureResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TrackingPlan_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workarea_group" : {
            "$ref" : "#/components/schemas/WorkareaGroup"
          },
          "category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "vendor" : {
            "$ref" : "#/components/schemas/Group"
          },
          "phase" : {
            "$ref" : "#/components/schemas/Element_allOf_workarea"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "workarea" : {
            "$ref" : "#/components/schemas/Element_allOf_workarea"
          },
          "start_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "end_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "activity_key" : {
            "type" : "string"
          },
          "activity_name" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TrackingPlanListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/TrackingPlanList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TrackingPlanResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TrackingPlanItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TrackingPlanResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/TrackingPlanResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Trash_user" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TrashListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/TrashList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TrashParentsInfo_allOf" : {
        "properties" : {
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "bim" : {
            "$ref" : "#/components/schemas/Bim"
          },
          "review" : {
            "$ref" : "#/components/schemas/Review"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "capture" : {
            "$ref" : "#/components/schemas/Capture"
          }
        },
        "type" : "object",
        "example" : null
      },
      "TrialableAttribute_allOf" : {
        "properties" : {
          "applied_trial_state" : {
            "$ref" : "#/components/schemas/TrialState"
          },
          "trial_state" : {
            "$ref" : "#/components/schemas/TrialState"
          },
          "trial_state_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "trial_started_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "trial_expires_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateActivityRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Activity Name",
            "type" : "string"
          },
          "activity_type" : {
            "$ref" : "#/components/schemas/ActivityType"
          },
          "start_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "end_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateAnnotationLayerRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "review_key" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateAnnotationRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "annotation_layer_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "parent_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "state" : {
            "enum" : [ "open", "close" ],
            "type" : "string"
          },
          "transcript_state" : {
            "enum" : [ "none", "uploaded", "processing", "error", "done" ],
            "type" : "string"
          },
          "transcript_state_reason" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateAreaRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Area name",
            "type" : "string"
          },
          "geojson" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateAssetRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Asset File Name",
            "type" : "string"
          },
          "summary" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "state" : {
            "$ref" : "#/components/schemas/AssetUpdateableState"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateBadgeRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "position" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateBillingAccountRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateBimRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Bim name",
            "type" : "string"
          },
          "encoded_forge_urn" : {
            "type" : "string"
          },
          "error_code" : {
            "type" : "string"
          },
          "project_base_point" : {
            "type" : "object"
          },
          "default_3d_model" : {
            "type" : "string"
          },
          "grid_system_enabled" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateBimRevisionRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Bim name",
            "type" : "string"
          },
          "error_code" : {
            "type" : "string"
          },
          "project_base_point" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateBookmarkRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "pano_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "position" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateCaptureRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Capture name",
            "type" : "string"
          },
          "upload_state" : {
            "$ref" : "#/components/schemas/UploadState"
          },
          "editing_state" : {
            "$ref" : "#/components/schemas/UpdateCaptureEditingState"
          },
          "thumbnail" : {
            "description" : "Capture thumbnail",
            "format" : "binary",
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "floorplan_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "singleshot_state" : {
            "description" : "Capture singleshot state",
            "enum" : [ "running", "stopped" ],
            "type" : "string"
          },
          "skat_type" : {
            "$ref" : "#/components/schemas/CaptureSkatType"
          },
          "skat_compute_duration" : {
            "format" : "int64",
            "type" : "integer"
          },
          "preview_align_available" : {
            "type" : "boolean"
          },
          "error_code" : {
            "type" : "string"
          },
          "reconstruction_error_code" : {
            "type" : "string"
          },
          "refinement_error_code" : {
            "type" : "string"
          },
          "voxel_state" : {
            "$ref" : "#/components/schemas/VoxelState"
          },
          "processing_results" : {
            "type" : "object"
          },
          "description" : {
            "type" : "string"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "cqa_assignment" : {
            "type" : "object"
          },
          "upload_platform" : {
            "$ref" : "#/components/schemas/UploadPlatform"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateCategoryRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Category Name",
            "type" : "string"
          },
          "workflow_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "cost_per_unit" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateClusterRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Cluster name",
            "type" : "string"
          },
          "node_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "cpc_generatable" : {
            "type" : "boolean"
          },
          "skat_result_type" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateCurrentUserRequest_allOf" : {
        "properties" : {
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "new_password" : {
            "type" : "string"
          },
          "new_password_confirm" : {
            "type" : "string"
          },
          "use_email_notification" : {
            "type" : "boolean"
          },
          "use_push_notification" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateCustomPropertyRequest_allOf" : {
        "properties" : {
          "unit" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateDeviationRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Deviation name",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateEditingEntityRequest_allOf" : {
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/UpdateEditingEntityState"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateEditingRequest_allOf" : {
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/EditingState"
          },
          "stat" : {
            "$ref" : "#/components/schemas/UpdateEditingStatAttribute"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateElementTraceRequest_allOf" : {
        "properties" : {
          "bim_external_id" : {
            "type" : "string"
          },
          "element_id" : {
            "description" : "Element ID",
            "format" : "int64",
            "type" : "integer"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "deviation_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "task_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "category_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "phase_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "workarea_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "vendor_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "status_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "estimated_status_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "texture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "activity_key" : {
            "type" : "string"
          },
          "processing_result" : {
            "$ref" : "#/components/schemas/DeviationProcessingResult"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateFacilityRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Facility name",
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "bearing" : {
            "format" : "float",
            "type" : "number"
          },
          "facility_size" : {
            "format" : "float",
            "type" : "number"
          },
          "workspace_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "description" : {
            "type" : "string"
          },
          "bim_id" : {
            "description" : "Master Bim ID",
            "format" : "int64",
            "type" : "integer"
          },
          "siteinsights_version" : {
            "format" : "int64",
            "type" : "integer"
          },
          "captured_size" : {
            "format" : "float",
            "type" : "number"
          },
          "activity_type" : {
            "$ref" : "#/components/schemas/ActivityType"
          },
          "metric_name" : {
            "type" : "string"
          },
          "metric_unit" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateFieldRequest_allOf" : {
        "properties" : {
          "value" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateFloorplanRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Floorplan name",
            "type" : "string"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "level_ids" : {
            "items" : {
              "type" : "integer"
            },
            "type" : "array"
          },
          "state" : {
            "$ref" : "#/components/schemas/FloorplanState"
          },
          "resolution" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "transformation" : {
            "$ref" : "#/components/schemas/Transformation"
          },
          "real_distance_in_millimeters" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateFloorplanSourceRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "FloorplanSource name",
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "pages" : {
            "description" : "Deprecated in favor of description",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateFormFieldRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateLevelRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Level name",
            "type" : "string"
          },
          "thumbnail" : {
            "description" : "Level thumbnail",
            "format" : "binary",
            "type" : "string"
          },
          "elevation" : {
            "format" : "float",
            "type" : "number"
          },
          "ceiling_height" : {
            "format" : "float",
            "type" : "number"
          },
          "default_floorplan_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "captured_size" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateMeshRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Mesh name",
            "type" : "string"
          },
          "record_id" : {
            "type" : "number"
          },
          "level_id" : {
            "type" : "number"
          },
          "mesh_state" : {
            "$ref" : "#/components/schemas/MeshStateRequest"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateMetricRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "unit" : {
            "type" : "string"
          },
          "position" : {
            "$ref" : "#/components/schemas/MetricPosition"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdatePanoRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Pano name",
            "type" : "string"
          },
          "pano_type" : {
            "$ref" : "#/components/schemas/PanoType"
          },
          "cluster_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "error_code" : {
            "type" : "string"
          },
          "state" : {
            "enum" : [ "error" ],
            "type" : "string"
          },
          "processing_status" : {
            "type" : "string"
          },
          "geo_coordinate" : {
            "$ref" : "#/components/schemas/GeoCoordinate"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "exif_create_date" : {
            "format" : "date-time",
            "type" : "string"
          },
          "exif" : {
            "$ref" : "#/components/schemas/PanoExif"
          },
          "brightness" : {
            "format" : "float",
            "type" : "number"
          },
          "timestamp" : {
            "format" : "int64",
            "type" : "integer"
          },
          "mask_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "mask_type" : {
            "$ref" : "#/components/schemas/MaskType"
          },
          "gps" : {
            "$ref" : "#/components/schemas/Gps"
          },
          "tile_size" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdatePanoStitchRequest_allOf" : {
        "properties" : {
          "original_panorama_format" : {
            "enum" : [ "equirectangular", "dual_fisheye" ],
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdatePhaseMetricRequest_allOf" : {
        "properties" : {
          "formula" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdatePhaseRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "color_code" : {
            "type" : "string"
          },
          "cost_per_unit" : {
            "format" : "float",
            "type" : "number"
          },
          "workarea_group_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdatePointcloudRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Pointcloud name",
            "type" : "string"
          },
          "parent_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "level_ids" : {
            "items" : {
              "type" : "integer"
            },
            "type" : "array"
          },
          "potree_state" : {
            "$ref" : "#/components/schemas/PointcloudPotreeState"
          },
          "editing_state" : {
            "$ref" : "#/components/schemas/UpdateCaptureEditingState"
          },
          "voxel_state" : {
            "$ref" : "#/components/schemas/VoxelState"
          },
          "entry_filename" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateProgressRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Progress Name",
            "type" : "string"
          },
          "category_id" : {
            "description" : "Category ID",
            "format" : "int64",
            "type" : "integer"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "workflow_id" : {
            "description" : "Workflow ID",
            "format" : "int64",
            "type" : "integer"
          },
          "bim_id" : {
            "description" : "Bim ID",
            "format" : "int64",
            "type" : "integer"
          },
          "bim_revision_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "bim_object_id" : {
            "description" : "Bim Object ID",
            "format" : "int64",
            "type" : "integer"
          },
          "bim_external_id" : {
            "type" : "string"
          },
          "sketch_id" : {
            "description" : "Sketch ID",
            "format" : "int64",
            "type" : "integer"
          },
          "activity_id" : {
            "description" : "Activity ID",
            "format" : "int64",
            "type" : "integer"
          },
          "vendor_id" : {
            "description" : "Vendor ID",
            "format" : "int64",
            "type" : "integer"
          },
          "origin_id" : {
            "description" : "Origin Progress ID",
            "format" : "int64",
            "type" : "integer"
          },
          "texture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "phase_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateRecordRequest_allOf" : {
        "properties" : {
          "note" : {
            "type" : "string"
          },
          "captured_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateRecordStatusRequest_allOf" : {
        "properties" : {
          "value" : {
            "description" : "RecordStatus representative value",
            "type" : "string"
          },
          "status_id" : {
            "description" : "Status ID",
            "format" : "int64",
            "type" : "integer"
          },
          "estimated_status_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "deviation_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "pointcloud_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "viewpoint" : {
            "$ref" : "#/components/schemas/Viewpoint"
          },
          "texture_validator_results" : {
            "type" : "object"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateReviewRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "levels" : {
            "$ref" : "#/components/schemas/SelectedIds"
          },
          "areas" : {
            "$ref" : "#/components/schemas/SelectedAreas"
          },
          "date_ranges" : {
            "$ref" : "#/components/schemas/SelectedDateRanges"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "annotation_layers" : {
            "$ref" : "#/components/schemas/SelectedItemIds"
          },
          "bims" : {
            "$ref" : "#/components/schemas/SelectedItemIds"
          },
          "floorplans" : {
            "$ref" : "#/components/schemas/SelectedItemIds"
          },
          "record_ids" : {
            "$ref" : "#/components/schemas/SelectedRecordIds"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateRoomRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Room name",
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "phase" : {
            "type" : "string"
          },
          "geometry" : {
            "type" : "object"
          },
          "style" : {
            "type" : "object"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateSiteinsightsConfigRequest_allOf" : {
        "properties" : {
          "use_schedule_display" : {
            "type" : "boolean"
          },
          "state" : {
            "$ref" : "#/components/schemas/SiteinsightsConfigState"
          },
          "track_frequency" : {
            "$ref" : "#/components/schemas/SiteinsightsTrackFrequency"
          },
          "track_day" : {
            "$ref" : "#/components/schemas/SiteinsightsTrackDay"
          },
          "use_vendor_visibility_restriction" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateSketchRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Sketch name",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateStatusRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "description" : "Status Represent Value",
            "type" : "string"
          },
          "conditional_statements" : {
            "type" : "object"
          },
          "texture_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "is_complete_status" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateTaskRequest_allOf" : {
        "properties" : {
          "vendor_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "workarea_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "category_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "phase_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "state" : {
            "$ref" : "#/components/schemas/TaskState"
          },
          "activity_key" : {
            "type" : "string"
          },
          "start_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "end_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateTeamRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "email_domain" : {
            "type" : "string"
          },
          "use_self_signup" : {
            "type" : "boolean"
          },
          "nadir_angle" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateTeleportRequest_allOf" : {
        "properties" : {
          "review_key" : {
            "type" : "string"
          },
          "record_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "level_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateTextureRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Texture Name",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateTrackingPlanRequest_allOf" : {
        "properties" : {
          "vendor_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "workarea_group_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "category_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "phase_ids" : {
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateUserPreferenceRequest_allOf" : {
        "properties" : {
          "activate" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateUserRequest_allOf" : {
        "properties" : {
          "state" : {
            "enum" : [ "active", "inactive" ],
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateVideoRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Video name",
            "type" : "string"
          },
          "pts_unit" : {
            "$ref" : "#/components/schemas/PtsUnitType"
          },
          "meta" : {
            "$ref" : "#/components/schemas/VideoMeta"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateWorkItemRequest_allOf" : {
        "properties" : {
          "assignee_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "processing_status" : {
            "type" : "string"
          },
          "priority" : {
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "details" : {
            "type" : "object"
          },
          "elapsed_time" : {
            "description" : "elapsed time in seconds",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateWorkareaRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "geometry" : {
            "type" : "object"
          },
          "color_code" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateWorkflowRequest_allOf" : {
        "properties" : {
          "name" : {
            "description" : "Workflow Name",
            "type" : "string"
          },
          "parent_id" : {
            "description" : "System Workflow Id",
            "format" : "int64",
            "type" : "integer"
          },
          "texture_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UpdateWorkspaceRequest_allOf" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UploadCredentialResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/UploadCredentials"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UploadCredentials_allOf" : {
        "properties" : {
          "basepath" : {
            "type" : "string"
          },
          "endpoint" : {
            "type" : "string"
          },
          "bucket_name" : {
            "type" : "string"
          },
          "bucket_region" : {
            "type" : "string"
          },
          "acl" : {
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "User_allOf" : {
        "properties" : {
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "current_workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "avatar_urls" : {
            "$ref" : "#/components/schemas/AvatarUrls"
          },
          "last_sign_in_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "use_email_notification" : {
            "type" : "boolean"
          },
          "use_push_notification" : {
            "type" : "boolean"
          },
          "password_updatable" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UserAutocomplete_user" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "email" : {
            "format" : "email",
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UserGroupAutocompleteItem_attributes" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/UserAutocomplete"
        }, {
          "$ref" : "#/components/schemas/GroupAutocomplete"
        } ]
      },
      "UserGroupAutocompleteResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/UserGroupAutocompleteList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UserListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/UserList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UserMember_user" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "email" : {
            "format" : "email",
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "avatar_urls" : {
            "$ref" : "#/components/schemas/AvatarUrls"
          },
          "state" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UserPreferenceListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/UserPreferenceList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UserPreferenceResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UserPreference"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UserPreferenceResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/UserPreferenceResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UserResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UserItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "UserResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/UserResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Video_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "capture" : {
            "$ref" : "#/components/schemas/Capture"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "meta" : {
            "$ref" : "#/components/schemas/VideoMeta"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "record" : {
            "$ref" : "#/components/schemas/Record"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "upload_url" : {
            "type" : "string"
          },
          "pts_unit" : {
            "$ref" : "#/components/schemas/PtsUnitType"
          }
        },
        "type" : "object",
        "example" : null
      },
      "VideoListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/VideoList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "VideoResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/VideoItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "VideoResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/VideoResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Viewpoint_viewpoint" : {
        "properties" : {
          "ver" : {
            "type" : "integer"
          },
          "view_mode" : {
            "type" : "string"
          },
          "walk_mode" : {
            "type" : "boolean"
          },
          "ortho_mode" : {
            "type" : "boolean"
          },
          "tm" : {
            "items" : {
              "format" : "float",
              "type" : "number"
            },
            "type" : "array"
          },
          "pano" : {
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "VoxelsResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/VoxelsItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "VoxelsResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/VoxelsResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkItem_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "assignee" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "entity" : {
            "$ref" : "#/components/schemas/WorkItemEntity"
          },
          "attachments_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "processing_status" : {
            "type" : "string"
          },
          "priority" : {
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "details" : {
            "type" : "object"
          },
          "elapsed_time" : {
            "description" : "elapsed time in seconds",
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkItemListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/WorkItemList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkItemResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/WorkItemItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkItemResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/WorkItemResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Workarea_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "sketch_entity_guid" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "level" : {
            "$ref" : "#/components/schemas/Level"
          },
          "sketch" : {
            "$ref" : "#/components/schemas/Sketch"
          },
          "workarea_group" : {
            "$ref" : "#/components/schemas/WorkareaGroup"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "geometry" : {
            "type" : "object"
          },
          "color_code" : {
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "meta" : {
            "type" : "object"
          },
          "is_default" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkareaGroup_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "facility" : {
            "$ref" : "#/components/schemas/Facility"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "published_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "is_default" : {
            "type" : "boolean"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkareaGroupListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/WorkareaGroupList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkareaGroupResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/WorkareaGroupItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkareaGroupResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/WorkareaGroupResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkareaListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/WorkareaList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkareaResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/WorkareaItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkareaResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/WorkareaResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Workflow_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "workflow_type" : {
            "$ref" : "#/components/schemas/WorkflowType"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "system_workflow" : {
            "$ref" : "#/components/schemas/Workflow"
          },
          "texture" : {
            "$ref" : "#/components/schemas/Texture"
          },
          "statuses_count" : {
            "format" : "int64",
            "type" : "integer"
          },
          "is_system_workflow" : {
            "type" : "boolean"
          },
          "row_order" : {
            "format" : "int64",
            "type" : "integer"
          },
          "meta" : {
            "type" : "object"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkflowListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/WorkflowList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkflowResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/WorkflowItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkflowResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/WorkflowResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkflowTextureIdListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/WorkflowTextureIdList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "Workspace_allOf" : {
        "properties" : {
          "id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "team" : {
            "$ref" : "#/components/schemas/Team"
          },
          "meta" : {
            "type" : "object"
          },
          "address" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "logo_urls" : {
            "$ref" : "#/components/schemas/LogoUrls"
          },
          "facilities_count" : {
            "format" : "int32",
            "type" : "integer"
          },
          "archived_facilities_count" : {
            "format" : "int32",
            "type" : "integer"
          },
          "facility_size" : {
            "format" : "float",
            "type" : "number"
          }
        },
        "required" : [ "id" ],
        "type" : "object",
        "example" : null
      },
      "WorkspaceListResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/WorkspaceList"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkspaceResponse_allOf_result" : {
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/WorkspaceItem"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkspaceResponse_allOf" : {
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/WorkspaceResponse_allOf_result"
          }
        },
        "type" : "object",
        "example" : null
      },
      "WorkspaceSignupRequest_allOf" : {
        "properties" : {
          "workspace_id" : {
            "format" : "int64",
            "type" : "integer"
          },
          "confirmation_token" : {
            "type" : "string"
          }
        },
        "required" : [ "confirmation_token", "workspace_id" ],
        "type" : "object",
        "example" : null
      }
    },
    "securitySchemes" : {
      "CupixAuth" : {
        "in" : "header",
        "name" : "X-CUPIX-AUTH",
        "type" : "apiKey"
      }
    }
  }
}